var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.179,1,2.149]],["body/controllers/AppController.html",[0,1.913,1,3.486,2,1.545,3,0.365,4,0.316,5,0.27,6,3.612,7,0.83,8,2.066,9,5.075,10,1.545,11,0.029,12,1.056,13,4.303,14,1.668,15,1.308,16,0.452,17,1.056,18,3.117,19,3.612,20,0.365,21,0.085,22,2.318,23,2.318,24,1.668,25,4.303,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,1.273,29,2.149]],["body/modules/AppModule.html",[1,2.879,2,1.333,3,0.214,4,0.186,5,0.158,11,0.03,16,0.534,17,0.62,18,2.909,19,2.12,20,0.214,21,0.05,26,0.016,27,0.016,28,1.439,29,4.12,30,1.148,31,1.686,32,2.12,33,2.12,34,2.12,35,3.193,36,3.193,37,3.193,38,3.193,39,2.666,40,1.999,41,1.361,42,1.361,43,2.527,44,2.194,45,2.601,46,3.693,47,3.712,48,3.115,49,4.07,50,1.853,51,1.653,52,1.148,53,2.527,54,2.527,55,2.527,56,1.494,57,2.527,58,1.247,59,2.527,60,2.527,61,2.12,62,2.429,63,1.653,64,2.12,65,2.12,66,1.494,67,1.247,68,2.527,69,2.527,70,2.527,71,3.712,72,2.12,73,2.12,74,2.12,75,2.12,76,3.693,77,2.429,78,2.12,79,2.527,80,1.853,81,3.712,82,2.527,83,2.527,84,2.527,85,2.527,86,2.527,87,2.527,88,2.527,89,2.527,90,2.527,91,2.12,92,0.573,93,2.527,94,2.12,95,2.527,96,2.527,97,2.527,98,2.527,99,2.527,100,2.527,101,2.527,102,2.527,103,2.527,104,1.494,105,2.12,106,2.527,107,2.527,108,1.999,109,2.527,110,2.527,111,2.527,112,2.12]],["title/injectables/AppService.html",[18,1.769,113,1.179]],["body/injectables/AppService.html",[3,0.381,4,0.33,5,0.282,7,0.867,8,2.121,9,5.152,11,0.029,12,1.103,14,1.742,15,1.343,16,0.381,17,1.103,18,2.947,20,0.381,21,0.089,24,1.742,26,0.024,27,0.024,113,1.964,114,2.42,115,3.771,116,4.493,117,4.493,118,4.493]],["title/classes/CreateImagenesDto.html",[21,0.065,119,1.941]],["body/classes/CreateImagenesDto.html",[3,0.356,4,0.309,5,0.264,7,0.812,10,1.886,11,0.029,12,1.289,15,1.473,16,0.356,20,0.356,21,0.104,26,0.023,27,0.023,67,2.827,92,1.192,119,3.105,120,1.631,121,4.807,122,3.085,123,2.386,124,3.085,125,3.852,126,4.206,127,4.206,128,4.201,129,4.201,130,2.752]],["title/classes/CreateInmuebleDto.html",[21,0.065,131,1.769]],["body/classes/CreateInmuebleDto.html",[3,0.229,4,0.198,5,0.169,7,0.52,10,2.133,11,0.029,12,1.458,15,1.481,16,0.387,20,0.229,21,0.077,23,3.556,26,0.017,27,0.017,92,1.348,120,1.046,123,1.768,125,3.889,128,4.423,129,4.052,130,1.765,131,2.096,132,5.062,133,1.978,134,3.35,135,3.35,136,2.988,137,3.833,138,3.35,139,3.35,140,3.35,141,3.35,142,2.988,143,2.878,144,5.001,145,2.697,146,2.697,147,2.697,148,2.697,149,2.697,150,2.697,151,2.697,152,2.697,153,2.697,154,5.303,155,5.303,156,1.331,157,1.978,158,1.765,159,1.046,160,1.978]],["title/classes/CreateUsuarioDto.html",[21,0.065,156,1.621]],["body/classes/CreateUsuarioDto.html",[3,0.333,4,0.289,5,0.246,7,0.757,10,1.992,11,0.029,12,1.362,15,1.519,16,0.333,20,0.333,21,0.1,26,0.022,27,0.022,92,1.259,120,1.522,123,2.284,125,4.069,128,4.29,129,4.29,130,2.569,156,2.482,157,4.29,161,3.295,162,3.63,163,3.63,164,3.28,165,3.926,166,3.926,167,3.926,168,3.926,169,3.926,170,3.926,171,3.926]],["title/controllers/ImagenesController.html",[0,1.179,56,1.941]],["body/controllers/ImagenesController.html",[0,1.007,2,1.007,3,0.238,4,0.206,5,0.176,7,0.541,8,1.552,10,1.676,11,0.029,12,1.146,14,1.81,15,1.146,16,0.456,17,0.689,20,0.238,21,0.056,22,1.511,23,1.511,24,1.81,26,0.018,27,0.018,56,2.367,58,2.304,67,1.976,92,1.06,124,1.511,143,2.764,172,2.354,173,1.835,174,2.057,175,2.96,176,3.36,177,4.004,178,3.36,179,2.354,180,4.699,181,4.004,182,2.805,183,2.121,184,1.957,185,2.121,186,3.734,187,2.805,188,4.004,189,2.805,190,2.9,191,2.354,192,4.273,193,3.424,194,2.805,195,2.805,196,1.658,197,2.057,198,2.805,199,1.835,200,1.835,201,2.057,202,2.354,203,2.805,204,2.354,205,3.36,206,2.354,207,2.805,208,2.805,209,2.354,210,2.354,211,4.004,212,2.805,213,3.424,214,2.936,215,2.805,216,2.354,217,2.805,218,2.805,219,2.805,220,2.354,221,2.805,222,2.805,223,2.805,224,2.805,225,2.515,226,2.805,227,2.805,228,1.835,229,2.805,230,2.805,231,2.805,232,2.805,233,2.805]],["title/entities/ImagenesEntity.html",[234,1.621,235,1.621]],["body/entities/ImagenesEntity.html",[3,0.288,4,0.25,5,0.213,7,0.656,10,1.986,11,0.029,12,1.358,15,1.358,16,0.388,20,0.288,21,0.067,26,0.02,27,0.02,67,2.553,92,1.256,104,2.011,108,2.98,123,2.079,124,2.786,143,2.259,174,2.495,190,2.786,228,3.777,234,1.679,235,2.259,236,2.855,237,4.057,238,4.057,239,4.057,240,3.401,241,4.341,242,3.401,243,2.145,244,2.855,245,3.841,246,4.576,247,3.841,248,4.341,249,3.841,250,2.855,251,3.401,252,3.401,253,3.401,254,2.495,255,2.855,256,3.841,257,1.426,258,2.495,259,2.855]],["title/modules/ImagenesModule.html",[28,1.273,35,1.941]],["body/modules/ImagenesModule.html",[2,1.822,3,0.337,4,0.293,5,0.25,11,0.029,16,0.526,17,0.978,20,0.337,21,0.079,26,0.022,27,0.022,28,1.967,30,1.809,31,2.305,35,3.671,40,2.733,41,2.145,42,2.145,44,3,51,2.606,52,1.809,56,3.302,58,3.065,216,3.342,235,1.965,243,1.544,260,3.342,261,3.342,262,3.982,263,2.92,264,2.92,265,3.982,266,3.982]],["title/classes/ImagenesRepository.html",[21,0.065,267,2.149]],["body/classes/ImagenesRepository.html",[3,0.397,4,0.344,5,0.293,11,0.028,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.815,235,2.311,257,1.962,264,3.433,267,3.669,268,3.929,269,3.02,270,3.928,271,3.433,272,4.681]],["title/injectables/ImagenesService.html",[58,1.621,113,1.179]],["body/injectables/ImagenesService.html",[3,0.216,4,0.187,5,0.234,7,0.491,8,1.446,11,0.03,12,1.194,14,1.713,16,0.504,17,0.624,20,0.216,21,0.05,24,1.446,26,0.016,27,0.016,52,1.155,58,1.841,66,1.504,67,2.18,92,1.003,113,1.339,114,1.37,119,1.504,124,1.37,143,2.672,175,2.89,176,3.131,178,3.131,179,3.131,180,3.707,183,2.21,184,2.039,185,2.21,190,2.79,191,3.131,192,4.544,193,3.24,196,2.205,225,2.379,228,2.89,235,1.256,243,0.986,257,1.066,263,1.866,264,1.866,267,3.542,273,2.135,274,3.73,275,2.441,276,2.544,277,3.707,278,2.876,279,2.544,280,2.544,281,3.73,282,2.544,283,2.544,284,1.866,285,1.866,286,2.544,287,2.544,288,2.544,289,2.135,290,1.504,291,2.135,292,2.544,293,2.544,294,2.736,295,2.135,296,3.542,297,3.131,298,2.135,299,1.866,300,1.37,301,1.866,302,1.866,303,1.866,304,2.544,305,2.544,306,2.544,307,3.73,308,2.544,309,2.544,310,2.544,311,2.544,312,2.544,313,2.544,314,2.544,315,2.544,316,2.544,317,2.544]],["title/controllers/InmueblesController.html",[0,1.179,318,2.149]],["body/controllers/InmueblesController.html",[0,0.627,2,0.627,3,0.148,4,0.128,5,0.109,7,0.337,8,1.084,10,1.825,11,0.029,12,1.248,14,1.971,15,1.525,16,0.338,17,0.429,20,0.148,21,0.035,22,0.941,23,0.941,24,1.971,26,0.012,27,0.012,92,1.154,131,2.151,136,2.286,142,3.049,143,3.259,173,1.143,183,2.309,184,2.131,185,2.309,190,2.51,197,2.562,199,1.143,200,1.143,201,1.281,204,1.466,205,1.466,206,1.466,290,1.032,318,1.829,319,1.466,320,1.281,321,1.379,322,2.345,323,1.829,324,2.345,325,2.345,326,2.345,327,2.795,328,1.829,329,1.746,330,3.201,331,3.351,332,1.746,333,1.746,334,2.05,335,1.466,336,2.932,337,2.932,338,2.345,339,2.932,340,3.351,341,3.351,342,3.351,343,4.4,344,4.889,345,1.746,346,1.746,347,1.466,348,4.266,349,1.746,350,1.746,351,1.466,352,1.746,353,1.746,354,1.466,355,1.746,356,1.746,357,1.466,358,2.613,359,1.746,360,1.746,361,1.746,362,1.746,363,1.746,364,1.466,365,1.971,366,1.746,367,1.746,368,1.143,369,1.466,370,2.932,371,1.466,372,1.466,373,1.466,374,1.466,375,1.746,376,1.882,377,1.466,378,2.05,379,1.143,380,1.746,381,1.746,382,4.106,383,1.746,384,3.494,385,2.795,386,1.746,387,1.746,388,1.746,389,1.746,390,1.746,391,1.746,392,1.746,393,1.746,394,1.746,395,1.746,396,1.746,397,1.746,398,1.746,399,1.746,400,1.746,401,1.746,402,1.746,403,1.746,404,1.746,405,1.746,406,1.746,407,1.746,408,1.746,409,1.746,410,1.746,411,1.746,412,2.345,413,1.746,414,1.466,415,1.746,416,1.746,417,1.746,418,1.746,419,1.746,420,1.746,421,1.746,422,1.746]],["title/entities/InmueblesEntity.html",[234,1.621,243,1.273]],["body/entities/InmueblesEntity.html",[3,0.195,4,0.169,5,0.144,7,0.444,10,2.119,11,0.029,12,1.448,15,1.368,16,0.353,20,0.195,21,0.046,26,0.015,27,0.015,92,1.339,104,1.362,108,3.341,123,1.574,134,3.055,135,3.055,136,2.725,137,2.908,138,3.055,139,3.055,140,3.055,141,3.055,142,2.725,143,2.867,159,2.024,174,3.055,190,2.243,193,2.541,234,1.137,235,2.287,237,4.549,238,4.088,239,4.549,241,3.496,243,1.343,244,1.933,247,2.908,248,3.496,249,2.908,250,1.933,254,1.689,255,1.933,256,2.908,257,0.965,258,1.689,259,1.933,320,1.689,334,3.055,423,1.933,424,5.573,425,2.303,426,4.678,427,5.573,428,2.303,429,2.303,430,2.303,431,1.933,432,3.465,433,2.303,434,2.303,435,2.303,436,2.303,437,2.303,438,2.303,439,3.465,440,2.303,441,2.303,442,2.303,443,2.908]],["title/modules/InmueblesModule.html",[28,1.273,36,1.941]],["body/modules/InmueblesModule.html",[2,1.822,3,0.337,4,0.293,5,0.25,11,0.029,16,0.526,17,0.978,20,0.337,21,0.079,26,0.022,27,0.022,28,1.967,30,1.809,31,2.305,36,3.671,40,2.733,41,2.145,42,2.145,44,3,51,2.606,52,1.809,159,1.544,160,2.92,243,1.544,318,3.654,376,3.344,377,3.342,444,3.342,445,3.342,446,3.982,447,2.92,448,3.982,449,3.982]],["title/classes/InmueblesRepository.html",[21,0.065,278,1.941]],["body/classes/InmueblesRepository.html",[3,0.397,4,0.344,5,0.293,11,0.028,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.815,243,1.815,257,1.962,269,3.02,270,3.928,271,3.433,278,3.315,447,3.433,450,3.929,451,4.681]],["title/injectables/InmueblesService.html",[113,1.179,376,1.769]],["body/injectables/InmueblesService.html",[3,0.105,4,0.091,5,0.078,7,0.24,8,0.819,11,0.03,12,1.134,14,1.718,15,1.439,16,0.392,17,0.305,20,0.105,21,0.025,24,1.718,26,0.009,27,0.009,52,0.565,92,1.049,113,0.758,114,0.67,131,1.747,134,1.549,135,0.912,136,2.378,138,1.549,139,1.549,140,1.549,141,2.379,142,3.023,143,3.164,159,0.482,160,0.912,164,2.49,175,2.894,183,2.098,184,1.937,185,2.098,186,3.855,190,2.778,196,0.735,225,2.719,228,3.44,243,0.482,257,0.521,275,1.382,277,1.773,278,1.918,284,0.912,285,0.912,289,1.044,290,0.735,294,1.549,295,1.044,296,3.303,297,2.31,298,1.773,299,2.379,300,1.747,301,2.379,302,2.379,303,2.379,321,1.042,322,1.773,323,1.382,324,1.773,325,1.773,326,1.773,328,1.382,330,2.584,334,0.912,335,1.773,336,3.05,337,2.723,338,2.31,339,2.723,340,2.31,341,2.31,342,2.723,343,3.535,344,4.412,347,1.773,348,3.72,351,1.773,354,1.773,357,1.773,358,2.123,364,1.773,365,1.601,368,1.382,376,1.138,378,1.549,379,0.814,447,0.912,452,1.044,453,1.244,454,2.31,455,1.918,456,1.244,457,2.112,458,1.244,459,2.112,460,1.244,461,1.244,462,1.244,463,1.244,464,1.244,465,1.244,466,1.244,467,1.044,468,1.244,469,1.244,470,1.244,471,1.244,472,1.244,473,1.244,474,1.044,475,2.112,476,3.95,477,2.752,478,2.752,479,2.112,480,1.244,481,1.244,482,1.244,483,1.244,484,1.244,485,1.244,486,1.244,487,1.244,488,1.244,489,1.244,490,1.244,491,1.244,492,1.244,493,1.244,494,1.244,495,1.244,496,1.244,497,1.244,498,1.244,499,1.244,500,1.244,501,1.244,502,1.244,503,1.244,504,2.31,505,2.112,506,1.773,507,2.112,508,1.244,509,1.244,510,1.244,511,1.244,512,2.112,513,1.244,514,1.244,515,2.112,516,1.244,517,1.244,518,2.112,519,1.244,520,1.244,521,2.112,522,1.244,523,1.244,524,2.112,525,1.244,526,1.244,527,2.112,528,1.244,529,1.244,530,2.112,531,1.244,532,1.244,533,2.112,534,1.244,535,1.244,536,3.244,537,1.244]],["title/controllers/MailsController.html",[0,1.179,45,1.941]],["body/controllers/MailsController.html",[0,1.028,2,1.028,3,0.243,4,0.21,5,0.179,7,0.552,8,1.575,10,1.695,11,0.029,12,1.159,14,1.83,15,1.629,16,0.344,17,0.703,20,0.243,21,0.057,22,1.542,23,1.542,24,1.83,26,0.018,27,0.018,39,2.33,45,2.401,92,1.072,173,1.873,175,2.974,183,2.144,184,2.638,185,2.144,196,2.791,199,1.873,200,1.873,201,2.099,225,2.543,538,2.402,539,2.862,540,4.062,541,4.062,542,4.062,543,2.862,544,4.313,545,4.971,546,4.313,547,3.769,548,4.062,549,2.862,550,2.862,551,4.062,552,2.862,553,2.862,554,4.062,555,2.862,556,2.402,557,2.862,558,2.862,559,4.062,560,2.862,561,2.862,562,2.862,563,2.862,564,2.862,565,2.862,566,2.862,567,2.862,568,2.862]],["title/modules/MailsModule.html",[28,1.273,37,1.941]],["body/modules/MailsModule.html",[2,1.591,3,0.275,4,0.238,5,0.203,11,0.03,16,0.518,17,0.796,20,0.275,21,0.064,26,0.02,27,0.02,28,1.718,30,1.473,31,2.013,37,3.466,39,2.894,40,2.387,41,1.747,42,1.747,44,2.62,45,2.984,46,2.722,48,3.719,49,4.236,50,2.379,61,2.722,62,2.9,63,2.122,64,3.719,65,2.722,66,1.918,67,1.601,72,2.722,73,2.722,74,2.722,75,2.722,76,2.722,77,2.122,78,2.722,80,2.379,91,2.722,94,2.722,108,1.747,112,2.722,175,1.601,300,1.747,556,2.722,569,3.244,570,3.244,571,3.244,572,3.244,573,3.244,574,3.244,575,3.244,576,3.244,577,3.244,578,3.244,579,3.244,580,3.244,581,3.244,582,3.244,583,3.244,584,3.244,585,3.244,586,2.722,587,3.244,588,3.244,589,3.244,590,3.244,591,3.244,592,3.244]],["title/injectables/MailsService.html",[39,1.621,113,1.179]],["body/injectables/MailsService.html",[3,0.213,4,0.184,5,0.157,7,0.484,8,1.432,11,0.029,12,1.187,14,1.699,15,1.61,16,0.313,17,0.616,20,0.213,21,0.05,22,1.352,26,0.016,27,0.016,39,1.823,62,1.642,63,1.642,67,2.163,92,1.097,105,3.678,113,1.326,114,1.352,124,2.36,162,1.642,175,2.88,183,2.195,184,2.652,185,2.195,225,2.36,275,1.642,358,1.642,544,4.324,545,4.896,546,4.324,547,3.778,586,3.678,593,2.106,594,3.693,595,3.693,596,3.693,597,2.51,598,5.388,599,2.51,600,3.693,601,2.51,602,3.693,603,2.51,604,3.693,605,2.51,606,4.383,607,4.383,608,2.51,609,3.693,610,3.693,611,2.51,612,4.383,613,4.383,614,4.383,615,4.383,616,4.383,617,4.383,618,2.51,619,2.51,620,2.51,621,2.51,622,2.106,623,2.51,624,2.51]],["title/classes/UpdateInmuebleDto.html",[21,0.065,365,1.621]],["body/classes/UpdateInmuebleDto.html",[3,0.397,4,0.344,5,0.293,11,0.029,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,119,2.767,120,1.815,122,3.433,269,2.521,291,3.929,321,2.311,365,2.768,625,3.929,626,3.433,627,3.063,628,3.063,629,4.681]],["title/classes/UpdateInmuebleDto-1.html",[21,0.054,365,1.357,630,2.749]],["body/classes/UpdateInmuebleDto-1.html",[3,0.397,4,0.344,5,0.293,11,0.029,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.815,131,2.521,133,3.433,269,2.521,321,2.311,365,2.768,378,3.433,626,3.433,627,3.063,628,3.063,631,3.929,632,4.681]],["title/classes/UpdateUsuarioDto.html",[21,0.065,633,1.941]],["body/classes/UpdateUsuarioDto.html",[3,0.397,4,0.344,5,0.293,11,0.029,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.815,156,2.311,158,3.063,269,2.521,321,2.311,626,3.433,627,3.063,628,3.063,633,3.315,634,3.929,635,3.929,636,4.681]],["title/controllers/UsuariosController.html",[0,1.179,637,2.149]],["body/controllers/UsuariosController.html",[0,0.878,2,0.878,3,0.207,4,0.18,5,0.153,7,0.471,8,1.404,10,1.983,11,0.03,12,1.356,14,2.141,15,1.422,16,0.404,17,0.6,20,0.207,21,0.048,22,1.316,23,1.316,24,2.141,26,0.016,27,0.016,92,1.211,156,2.355,158,1.599,163,2.37,164,3.155,173,1.599,183,2.424,184,2.237,185,2.424,197,2.656,199,1.599,200,2.37,290,1.445,321,1.788,323,3.122,328,2.37,330,3.492,331,4.005,368,2.823,369,2.051,370,2.051,371,2.051,372,2.051,373,2.051,374,2.051,379,1.599,382,4.479,412,3.04,414,2.051,633,3.265,637,2.37,638,2.051,639,1.792,640,3.622,641,3.04,642,3.04,643,2.444,644,2.444,645,2.444,646,3.04,647,2.051,648,2.444,649,2.444,650,2.051,651,2.444,652,2.444,653,2.444,654,2.444,655,2.051,656,2.444,657,2.444,658,2.051,659,2.444,660,2.444,661,2.051,662,2.444,663,2.444,664,2.324,665,2.051,666,2.051,667,2.444,668,2.444,669,2.444,670,2.444,671,2.444,672,2.444,673,2.444,674,2.444,675,2.444,676,2.444,677,2.444,678,2.444,679,2.444,680,2.444,681,2.444,682,2.444,683,2.444,684,2.444,685,2.444,686,2.444]],["title/entities/UsuariosEntity.html",[159,1.273,234,1.621]],["body/entities/UsuariosEntity.html",[3,0.298,4,0.259,5,0.22,7,0.679,10,2.014,11,0.029,12,1.377,15,1.474,16,0.397,20,0.298,21,0.07,26,0.021,27,0.021,92,1.273,104,2.08,108,3.021,123,2.126,159,1.815,162,3.442,163,3.442,164,3.11,234,1.737,237,4.113,238,4.113,239,4.113,243,2.174,245,3.929,254,2.581,257,1.475,258,2.581,263,2.581,320,3.858,426,3.929,431,2.953,443,3.929,639,2.581,687,2.953,688,4.682,689,3.519,690,3.519,691,4.682,692,3.519,693,5.261,694,3.519]],["title/modules/UsuariosModule.html",[28,1.273,38,1.941]],["body/modules/UsuariosModule.html",[2,1.843,3,0.344,4,0.298,5,0.254,11,0.029,16,0.518,17,0.995,20,0.344,21,0.08,26,0.023,27,0.023,28,1.99,30,1.841,31,2.331,38,3.688,40,2.764,41,2.184,42,2.184,44,3.034,51,2.653,52,1.841,159,1.572,637,3.685,664,3.36,665,3.403,695,3.403,696,3.403,697,4.054,698,4.054,699,2.973,700,4.054]],["title/classes/UsuariosRepository.html",[21,0.065,455,1.941]],["body/classes/UsuariosRepository.html",[3,0.397,4,0.344,5,0.293,11,0.028,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.815,159,1.815,257,1.962,269,3.02,270,3.928,271,3.433,455,3.315,699,3.433,701,3.929,702,4.681]],["title/injectables/UsuariosService.html",[113,1.179,664,1.769]],["body/injectables/UsuariosService.html",[3,0.144,4,0.125,5,0.107,7,0.329,8,1.062,11,0.03,12,1.237,14,1.878,15,1.364,16,0.427,17,0.418,20,0.144,21,0.034,24,1.878,26,0.012,27,0.012,52,0.774,92,1.099,113,0.984,114,0.918,156,1.943,158,1.115,159,0.661,162,1.115,163,2.576,164,3.383,175,3.007,183,2.2,184,2.031,185,2.2,186,4.074,196,1.007,225,3.04,275,1.793,284,1.25,285,1.25,290,1.007,294,1.25,296,3.568,299,3.553,300,2.609,301,2.52,302,2.52,303,2.52,321,1.352,323,2.576,328,1.793,330,2.576,358,3.869,368,1.793,379,1.115,454,2.3,455,2.327,467,3.621,474,1.43,504,3.621,506,2.884,547,3.38,622,1.43,633,2.864,639,2.52,641,2.3,642,2.3,646,1.43,647,2.3,650,2.3,655,2.3,658,2.3,661,2.3,664,1.476,666,1.43,699,1.25,703,1.43,704,2.74,705,1.704,706,1.704,707,2.74,708,1.704,709,1.704,710,1.704,711,1.704,712,1.704,713,1.704,714,1.704,715,1.704,716,3.437,717,1.43,718,1.704,719,1.704,720,3.437,721,1.704,722,1.704,723,2.74,724,1.704,725,3.437,726,1.704,727,2.74,728,1.704,729,2.74,730,3.937,731,2.74,732,2.74,733,3.437,734,2.74,735,1.704,736,1.704,737,1.704,738,1.704,739,2.74,740,1.704,741,1.704,742,2.74,743,1.704,744,1.704,745,1.704,746,1.704,747,1.704,748,1.704]],["title/coverage.html",[749,3.278]],["body/coverage.html",[0,1.904,1,1.765,5,0.169,6,2.263,11,0.029,18,1.453,21,0.118,26,0.017,27,0.017,39,1.331,45,1.594,56,1.594,58,1.331,92,0.612,113,1.904,115,2.263,119,1.594,121,2.263,122,2.855,131,1.453,132,2.263,133,2.855,156,1.331,157,1.978,159,1.046,161,2.263,172,2.263,213,1.978,214,1.978,234,2.254,235,1.331,236,2.263,243,1.046,267,1.765,268,2.263,273,2.263,278,1.594,300,1.453,318,1.765,319,2.263,365,1.921,376,1.453,423,2.263,450,2.263,452,2.263,455,1.594,538,2.263,593,2.263,625,2.263,631,2.263,633,1.594,634,2.263,635,2.263,637,1.765,638,2.263,664,1.453,687,2.263,701,2.263,703,2.263,749,1.978,750,2.697,751,2.697,752,2.697,753,6.65,754,3.892,755,4.637,756,5.831,757,2.263,758,6.423,759,2.263,760,2.263,761,2.263,762,2.263,763,2.263,764,2.697,765,3.267,766,4.567,767,3.892,768,3.892,769,3.892,770,2.263,771,2.697,772,2.263,773,2.697,774,2.697,775,2.697]],["title/dependencies.html",[31,1.792,776,2.307]],["body/dependencies.html",[11,0.03,17,0.971,21,0.1,26,0.022,27,0.022,31,1.796,50,2.9,52,1.796,62,2.587,63,2.587,130,2.587,209,3.318,210,4.239,257,1.657,627,2.587,628,2.587,717,3.318,777,3.954,778,5.566,779,3.954,780,3.954,781,3.954,782,3.954,783,3.954,784,3.954,785,3.954,786,3.954,787,3.954,788,3.954,789,3.954,790,3.954,791,3.954,792,3.954,793,3.954,794,3.954,795,3.954,796,3.954,797,3.954,798,3.954,799,3.954,800,3.954,801,3.954,802,3.954,803,3.954,804,3.954,805,3.954,806,3.954,807,3.954]],["title/miscellaneous/functions.html",[808,1.799,809,3.312]],["body/miscellaneous/functions.html",[7,0.972,11,0.026,26,0.026,27,0.026,770,4.229,772,5.197,808,3.297,809,4.229,810,5.039]],["title/index.html",[7,0.53,811,2.749,812,2.749]],["body/index.html",[4,0.269,11,0.029,26,0.021,27,0.021,66,2.162,270,2.393,749,2.682,813,3.657,814,3.657,815,4.802,816,3.657,817,3.657,818,3.657,819,3.657,820,3.657,821,3.657,822,3.069,823,5.362,824,3.657,825,3.657,826,3.657,827,6.186,828,3.657,829,3.657,830,3.657,831,6.069,832,3.657,833,3.657,834,4.802,835,3.657,836,3.657,837,3.657,838,3.657,839,4.802,840,4.802,841,3.657,842,3.657,843,3.657,844,4.802,845,4.802,846,3.657,847,3.657,848,3.657,849,3.657,850,3.657,851,3.069,852,3.657,853,3.657,854,3.657,855,3.657,856,3.657,857,3.657,858,3.657,859,3.657,860,3.657,861,3.069,862,3.657,863,3.657,864,3.657,865,3.657,866,3.657,867,3.657,868,3.069]],["title/modules.html",[30,2.03]],["body/modules.html",[11,0.025,26,0.025,27,0.025,29,3.05,30,2.117,35,2.756,36,2.756,37,2.756,38,2.756,851,5.335,869,6.356,870,6.356,871,6.356]],["title/overview.html",[872,3.751]],["body/overview.html",[2,1.339,11,0.029,18,2.916,26,0.021,27,0.021,29,4.306,30,1.694,31,2.21,32,3.13,33,3.13,34,3.13,35,3.518,36,3.518,37,3.518,38,3.518,39,2.832,40,2.62,41,2.009,42,2.009,58,2.672,104,2.205,114,2.009,120,1.446,220,4.544,260,3.13,261,3.13,376,2.916,444,3.13,445,3.13,664,2.916,695,3.13,696,3.13,872,3.13,873,3.73,874,3.73]],["title/properties.html",[123,1.792,776,2.307]],["body/properties.html",[11,0.029,26,0.026,27,0.026,123,2.258,822,4.173,861,4.173,868,4.173,875,4.972,876,4.972,877,4.972]],["title/miscellaneous/variables.html",[77,2.582,808,1.799]],["body/miscellaneous/variables.html",[5,0.284,7,0.646,11,0.03,15,1.453,24,1.299,26,0.02,27,0.02,66,1.981,77,2.192,80,2.457,92,1.374,108,1.805,124,1.805,184,1.899,202,3.802,213,3.322,214,3.322,296,3.358,300,1.805,755,2.812,757,4.308,759,4.308,760,4.308,761,4.308,762,4.308,763,4.308,765,2.812,808,2.192,878,5.92,879,4.53,880,6.156,881,6.156,882,5.133,883,3.351,884,3.351,885,3.351,886,4.53,887,3.351,888,3.351,889,3.351,890,3.351,891,3.351,892,3.351,893,3.351,894,3.351,895,3.351]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":876,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":630,"title":{"classes/UpdateInmuebleDto-1.html":{}},"body":{}}],["1.0.1",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":732,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["100",{"_index":688,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["15",{"_index":427,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["16).tostring(16",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.1",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":873,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":220,"title":{},"body":{"controllers/ImagenesController.html":{},"overview.html":{}}}],["5.2.1",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["6.7.5",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":874,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailsService.html":{}}}],["adapter",{"_index":590,"title":{},"body":{"modules/MailsModule.html":{}}}],["amazing",{"_index":852,"title":{},"body":{"index.html":{}}}],["app",{"_index":829,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":821,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":193,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{}}}],["array(4",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":175,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["atributos",{"_index":171,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["attachments",{"_index":613,"title":{},"body":{"injectables/MailsService.html":{}}}],["auth",{"_index":580,"title":{},"body":{"modules/MailsModule.html":{}}}],["author",{"_index":861,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":225,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["backers",{"_index":853,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":284,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["badrequestexception({message",{"_index":301,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["banos",{"_index":340,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["banos=0",{"_index":495,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["baños",{"_index":134,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["bcrypt",{"_index":716,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.compare(usser.contraseña",{"_index":724,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.hash(data.contraseña",{"_index":731,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcryptjs",{"_index":717,"title":{},"body":{"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["between",{"_index":469,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["between(preciomin",{"_index":497,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["between(superficiemin",{"_index":500,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["body",{"_index":197,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["bootstrap",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":871,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":869,"title":{},"body":{"modules.html":{}}}],["building",{"_index":816,"title":{},"body":{"index.html":{}}}],["callback",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cascade",{"_index":248,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["cascade'})@joincolumn({name",{"_index":250,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["cid",{"_index":616,"title":{},"body":{"injectables/MailsService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":120,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_imagenesmodule",{"_index":260,"title":{},"body":{"modules/ImagenesModule.html":{},"overview.html":{}}}],["cluster_imagenesmodule_providers",{"_index":261,"title":{},"body":{"modules/ImagenesModule.html":{},"overview.html":{}}}],["cluster_inmueblesmodule",{"_index":444,"title":{},"body":{"modules/InmueblesModule.html":{},"overview.html":{}}}],["cluster_inmueblesmodule_providers",{"_index":445,"title":{},"body":{"modules/InmueblesModule.html":{},"overview.html":{}}}],["cluster_mailsmodule",{"_index":569,"title":{},"body":{"modules/MailsModule.html":{}}}],["cluster_mailsmodule_providers",{"_index":570,"title":{},"body":{"modules/MailsModule.html":{}}}],["cluster_usuariosmodule",{"_index":695,"title":{},"body":{"modules/UsuariosModule.html":{},"overview.html":{}}}],["cluster_usuariosmodule_providers",{"_index":696,"title":{},"body":{"modules/UsuariosModule.html":{},"overview.html":{}}}],["column",{"_index":254,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["column({type",{"_index":237,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["comprobarcontraseña",{"_index":640,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarcontraseña(@body",{"_index":670,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarcontraseña(usser",{"_index":643,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarpassword",{"_index":704,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["comprobarpassword(usser",{"_index":707,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["con",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["config",{"_index":575,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_host",{"_index":577,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_password",{"_index":584,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_user",{"_index":582,"title":{},"body":{"modules/MailsModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["configmodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["configservice.get('db_database",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_host",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_user",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"asdfgh",{"_index":679,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["console.log(path",{"_index":232,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["console.log(ubicacion",{"_index":480,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["const",{"_index":296,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":275,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["constructor(imagenesrepository",{"_index":276,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["constructor(inmueblerepository",{"_index":453,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["constructor(mailerservice",{"_index":597,"title":{},"body":{"injectables/MailsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{}}}],["constructor(usuariorepository",{"_index":705,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["contacto",{"_index":623,"title":{},"body":{"injectables/MailsService.html":{}}}],["context",{"_index":612,"title":{},"body":{"injectables/MailsService.html":{}}}],["contraseña",{"_index":162,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"injectables/MailsService.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["contraseñahash",{"_index":730,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["controller('imagenes",{"_index":217,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["controller('inmuebles",{"_index":380,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["controller('mails",{"_index":557,"title":{},"body":{"controllers/MailsController.html":{}}}],["controller('usuarios",{"_index":667,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["correo",{"_index":163,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["coverage",{"_index":749,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creacion",{"_index":608,"title":{},"body":{"injectables/MailsService.html":{}}}],["crear",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["create",{"_index":321,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["create(@body",{"_index":678,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["create(@param('vendedor",{"_index":415,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["create(data",{"_index":647,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["create(nombreusuario",{"_index":457,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["create(vendedor",{"_index":329,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["createimagenesdto",{"_index":119,"title":{"classes/CreateImagenesDto.html":{}},"body":{"classes/CreateImagenesDto.html":{},"injectables/ImagenesService.html":{},"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["createinmuebledto",{"_index":131,"title":{"classes/CreateInmuebleDto.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["createreadstream",{"_index":286,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["createreadstream(join(process.cwd",{"_index":315,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["createusuariodto",{"_index":156,"title":{"classes/CreateUsuarioDto.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["data",{"_index":330,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["data.baños",{"_index":513,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.contraseña",{"_index":733,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.correo",{"_index":743,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.descripcion",{"_index":516,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.habitaciones",{"_index":519,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.nombreusuario",{"_index":727,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.precio",{"_index":522,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.superficie",{"_index":525,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.tipoinmueble",{"_index":528,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.tipooperacion",{"_index":531,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.ubicacion",{"_index":534,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["database",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["db_database",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_host",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_password",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_port",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_user",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":622,"title":{},"body":{"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{}}}],["default",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":585,"title":{},"body":{"modules/MailsModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["del",{"_index":227,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["delete",{"_index":368,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["delete('/:id",{"_index":420,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["delete('/:id')@httpcode(httpstatus.ok",{"_index":362,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["delete(':nombreusuario",{"_index":684,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(':nombreusuario')@httpcode(httpstatus.ok",{"_index":651,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(@param('nombreusuario",{"_index":685,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(id",{"_index":459,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["delete(nombreusuario",{"_index":650,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descripcion",{"_index":135,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["description",{"_index":822,"title":{},"body":{"index.html":{},"properties.html":{}}}],["destination",{"_index":222,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["development",{"_index":830,"title":{},"body":{"index.html":{}}}],["dir",{"_index":587,"title":{},"body":{"modules/MailsModule.html":{}}}],["diskstorage",{"_index":211,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["documentation",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":290,"title":{},"body":{"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["dto/update",{"_index":379,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["e2e",{"_index":841,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":817,"title":{},"body":{"index.html":{}}}],["el",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["eliminado",{"_index":748,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["email",{"_index":545,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["emailbienvenida",{"_index":611,"title":{},"body":{"injectables/MailsService.html":{}}}],["emailcontraseña",{"_index":619,"title":{},"body":{"injectables/MailsService.html":{}}}],["emailform",{"_index":624,"title":{},"body":{"injectables/MailsService.html":{}}}],["en",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["entities",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"overview.html":{}}}],["entities/imagenes.entity",{"_index":264,"title":{},"body":{"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{}}}],["entities/inmuebles.entity",{"_index":447,"title":{},"body":{"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{}}}],["entities/usuarios.entity",{"_index":699,"title":{},"body":{"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["entity",{"_index":234,"title":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["entity({name",{"_index":258,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["entityrepository",{"_index":271,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UsuariosRepository.html":{}}}],["entityrepository(imagenesentity",{"_index":272,"title":{},"body":{"classes/ImagenesRepository.html":{}}}],["entityrepository(inmueblesentity",{"_index":451,"title":{},"body":{"classes/InmueblesRepository.html":{}}}],["entityrepository(usuariosentity",{"_index":702,"title":{},"body":{"classes/UsuariosRepository.html":{}}}],["entity{.ts,.js",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["envfilepath",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["error('invalid",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ese",{"_index":302,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["existe",{"_index":303,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["exists",{"_index":726,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["express",{"_index":210,"title":{},"body":{"controllers/ImagenesController.html":{},"dependencies.html":{}}}],["extends",{"_index":269,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{}}}],["false",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"modules/MailsModule.html":{},"entities/UsuariosEntity.html":{},"miscellaneous/variables.html":{}}}],["fichero",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":305,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["file.originalname",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.path",{"_index":306,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["filefilter",{"_index":213,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":207,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["filename",{"_index":124,"title":{},"body":{"classes/CreateImagenesDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"injectables/MailsService.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":192,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["filesinterceptor",{"_index":208,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["fill(null",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":322,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["filter(@query('ubicacion",{"_index":389,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["filter(ubicacion",{"_index":335,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findall",{"_index":323,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findall(@query('limit",{"_index":383,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findall(limit",{"_index":347,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyemail",{"_index":641,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyemail(@body",{"_index":676,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["findbyemail(correo",{"_index":655,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyid",{"_index":324,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyid(@param('id",{"_index":406,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyid(id",{"_index":351,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbynombre",{"_index":642,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbynombre(@param('nombreusuario",{"_index":673,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["findbynombre(nombreusuario",{"_index":658,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyubicacion",{"_index":325,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyubicacion(@query('limit",{"_index":409,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyubicacion(limit",{"_index":354,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyusuario",{"_index":326,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyusuario(@query('limit",{"_index":402,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyusuario(limit",{"_index":357,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["format",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formulario",{"_index":621,"title":{},"body":{"injectables/MailsService.html":{}}}],["framework",{"_index":815,"title":{},"body":{"index.html":{}}}],["fs",{"_index":287,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["function",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":809,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:ubicacion",{"_index":408,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/:ubicacion')@httpcode(httpstatus.ok",{"_index":355,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/filter",{"_index":388,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/filter')@httpcode(httpstatus.ok",{"_index":345,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getall",{"_index":381,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getall')@httpcode(httpstatus.ok",{"_index":349,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getimage/:path",{"_index":181,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["get('/getpaths/:id",{"_index":188,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["get('/id/:id",{"_index":405,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/id/:id')@httpcode(httpstatus.ok",{"_index":352,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/mostrar/:usuario",{"_index":401,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/mostrar/:usuario')@httpcode(httpstatus.ok",{"_index":359,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get(':nombreusuario",{"_index":672,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["get(':nombreusuario')@httpcode(httpstatus.ok",{"_index":659,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["get()@httpcode(httpstatus.ok",{"_index":653,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["getfile",{"_index":176,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["getfile(@query('path",{"_index":231,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getfile(path",{"_index":179,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpath",{"_index":274,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["getpath(id",{"_index":281,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["getpaths",{"_index":177,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getpaths(@param('id",{"_index":229,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getpaths(id",{"_index":187,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getrepository",{"_index":289,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["getting",{"_index":811,"title":{"index.html":{}},"body":{}}],["gldhouses@gmail.com",{"_index":620,"title":{},"body":{"injectables/MailsService.html":{}}}],["global",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["globales",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["globalmente",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["golden",{"_index":609,"title":{},"body":{"injectables/MailsService.html":{}}}],["grow",{"_index":848,"title":{},"body":{"index.html":{}}}],["habitaciones",{"_index":136,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["habitaciones=0",{"_index":493,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["handlebars",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["hay",{"_index":720,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["headers",{"_index":198,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["hello",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["helpers/imagenes.helper",{"_index":215,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["here",{"_index":858,"title":{},"body":{"index.html":{}}}],["host",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["houses",{"_index":610,"title":{},"body":{"injectables/MailsService.html":{}}}],["http://localhost:8080/inmuebles/filter?tipo=p&preciomin=&preciomax=&habitaciones=&banos=&superficiemin=&superficiemax=&limit=&skip",{"_index":387,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["httpcode",{"_index":372,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["httpcode(httpstatus.created",{"_index":414,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["httpcode(httpstatus.ok",{"_index":382,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["https://nestjs.com",{"_index":865,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":371,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["id",{"_index":190,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["id:id",{"_index":310,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["identifier",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["if(!banos",{"_index":494,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!file.originalname.match(/\\.(jpg|jpeg|png|gif",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(!habitaciones",{"_index":492,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!inmueble",{"_index":298,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["if(!opcion",{"_index":491,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!operacion",{"_index":475,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!preciomax",{"_index":484,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!preciomin",{"_index":482,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!superficiemax",{"_index":488,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!superficiemin",{"_index":486,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!tipo",{"_index":481,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!ubicacion",{"_index":490,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!usuario",{"_index":506,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["if(data.baños",{"_index":511,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.contraseña",{"_index":740,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.correo",{"_index":741,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.descripcion",{"_index":514,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.habitaciones",{"_index":517,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.nombreusuario",{"_index":738,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.precio",{"_index":520,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.superficie",{"_index":523,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.tipoinmueble",{"_index":526,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.tipooperacion",{"_index":529,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.ubicacion",{"_index":532,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(exists",{"_index":728,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["ilike",{"_index":470,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["imagenes",{"_index":174,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["imagenes.controller",{"_index":265,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["imagenes.dto",{"_index":291,"title":{},"body":{"injectables/ImagenesService.html":{},"classes/UpdateInmuebleDto.html":{}}}],["imagenes.dto.ts",{"_index":122,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["imagenes.dto.ts:12",{"_index":127,"title":{},"body":{"classes/CreateImagenesDto.html":{}}}],["imagenes.dto.ts:8",{"_index":126,"title":{},"body":{"classes/CreateImagenesDto.html":{}}}],["imagenes.repository",{"_index":292,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["imagenes.service",{"_index":216,"title":{},"body":{"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{}}}],["imagenes/imagenes.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenes/imagenes.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenes/imagenes.service",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenescontroller",{"_index":56,"title":{"controllers/ImagenesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"coverage.html":{}}}],["imagenesentity",{"_index":235,"title":{"entities/ImagenesEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"coverage.html":{}}}],["imagenesentity.inmueble",{"_index":432,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["imagenesmodule",{"_index":35,"title":{"modules/ImagenesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagenesrepository",{"_index":267,"title":{"classes/ImagenesRepository.html":{}},"body":{"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"coverage.html":{}}}],["imagenesservice",{"_index":58,"title":{"injectables/ImagenesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":307,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["img.inmueble",{"_index":309,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["img.pipe(res",{"_index":317,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["imports:[mailermodule.forrootasync",{"_index":574,"title":{},"body":{"modules/MailsModule.html":{}}}],["imports:[typeormmodule.forfeature([imagenesentity]),typeormmodule.forfeature([inmueblesentity",{"_index":266,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["imports:[typeormmodule.forfeature([inmueblesentity]),typeormmodule.forfeature([usuariosentity",{"_index":449,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["imports:[typeormmodule.forfeature([usuariosentity",{"_index":700,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["incorrecto",{"_index":721,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["inject",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["injectable",{"_index":113,"title":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["injectables",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"overview.html":{}}}],["injectrepository",{"_index":285,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["injectrepository(imagenesentity",{"_index":293,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["injectrepository(inmueblesentity",{"_index":295,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["injectrepository(usuariosentity",{"_index":474,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["inmueble",{"_index":228,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["inmueble.baños",{"_index":512,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.descripcion",{"_index":515,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.dto",{"_index":378,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto-1.html":{}}}],["inmueble.dto.ts",{"_index":133,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["inmueble.dto.ts:13",{"_index":151,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:17",{"_index":152,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:22",{"_index":150,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:27",{"_index":147,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:32",{"_index":145,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:37",{"_index":149,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:41",{"_index":146,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:45",{"_index":148,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:9",{"_index":153,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.habitaciones",{"_index":518,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.precio",{"_index":521,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.superficie",{"_index":524,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.tipoinmueble",{"_index":527,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.tipooperacion",{"_index":530,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.ubicacion",{"_index":533,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmuebleentity",{"_index":245,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["inmuebleentity.id",{"_index":246,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["inmuebleentity.vendedor",{"_index":691,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["inmueblerepository",{"_index":277,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["inmuebles",{"_index":320,"title":{},"body":{"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["inmuebles.controller",{"_index":448,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["inmuebles.repository",{"_index":468,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmuebles.service",{"_index":377,"title":{},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{}}}],["inmuebles/entities/inmuebles.entity",{"_index":253,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["inmuebles/inmuebles.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["inmueblescontroller",{"_index":318,"title":{"controllers/InmueblesController.html":{}},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"coverage.html":{}}}],["inmueblesentity",{"_index":243,"title":{"entities/InmueblesEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["inmueblesmodule",{"_index":36,"title":{"modules/InmueblesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InmueblesModule.html":{},"modules.html":{},"overview.html":{}}}],["inmueblesrepository",{"_index":278,"title":{"classes/InmueblesRepository.html":{}},"body":{"injectables/ImagenesService.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"coverage.html":{}}}],["inmueblesservice",{"_index":376,"title":{"injectables/InmueblesService.html":{}},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"coverage.html":{},"overview.html":{}}}],["installation",{"_index":826,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":828,"title":{},"body":{"index.html":{}}}],["int",{"_index":424,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["isglobal",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["ismatch",{"_index":723,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["isnotempty",{"_index":128,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["isnotempty()@isnumber()@ispositive",{"_index":144,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["isnotempty()@isstring",{"_index":125,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["isnumber",{"_index":154,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["ispositive",{"_index":155,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["isstring",{"_index":129,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["join",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/ImagenesService.html":{},"modules/MailsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":588,"title":{},"body":{"modules/MailsModule.html":{}}}],["joincolumn",{"_index":255,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["joincolumn({name",{"_index":259,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["kamil",{"_index":862,"title":{},"body":{"index.html":{}}}],["las",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["length",{"_index":426,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["lessthanorequal",{"_index":471,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["license",{"_index":868,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":845,"title":{},"body":{"index.html":{}}}],["like('%'+opcion",{"_index":502,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+operacion",{"_index":479,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+tipo",{"_index":496,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+ubicacion",{"_index":501,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["limit",{"_index":343,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["listainmuebles",{"_index":536,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["logging",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["logo",{"_index":617,"title":{},"body":{"injectables/MailsService.html":{}}}],["logo.png",{"_index":614,"title":{},"body":{"injectables/MailsService.html":{}}}],["mailermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["mailerservice",{"_index":598,"title":{},"body":{"injectables/MailsService.html":{}}}],["mails",{"_index":539,"title":{},"body":{"controllers/MailsController.html":{}}}],["mails.controller",{"_index":573,"title":{},"body":{"modules/MailsModule.html":{}}}],["mails.service",{"_index":556,"title":{},"body":{"controllers/MailsController.html":{},"modules/MailsModule.html":{}}}],["mails/mails.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mails/mails.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["mails/mails.service",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["mailscontroller",{"_index":45,"title":{"controllers/MailsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"coverage.html":{}}}],["mailsmodule",{"_index":37,"title":{"modules/MailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"modules.html":{},"overview.html":{}}}],["mailsservice",{"_index":39,"title":{"injectables/MailsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"coverage.html":{},"overview.html":{}}}],["manytoone",{"_index":256,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["manytoone(undefined",{"_index":244,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["map",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":547,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["message:'imágenes",{"_index":312,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["metadata",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["miscellaneous",{"_index":808,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":844,"title":{},"body":{"index.html":{}}}],["mode",{"_index":834,"title":{},"body":{"index.html":{}}}],["modificado",{"_index":745,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["more",{"_index":857,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":472,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["morethanorequal(banos",{"_index":499,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["morethanorequal(habitaciones",{"_index":498,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["multer",{"_index":212,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["mysql",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":863,"title":{},"body":{"index.html":{}}}],["name",{"_index":184,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":823,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":867,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"dependencies.html":{}}}],["nestjs/config/dist/config.service",{"_index":572,"title":{},"body":{"modules/MailsModule.html":{}}}],["nestjs/core",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":627,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":209,"title":{},"body":{"controllers/ImagenesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["new",{"_index":300,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"modules/MailsModule.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newinmueble",{"_index":507,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["newinmueble.vendedor",{"_index":509,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["newusuario",{"_index":734,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["node.js",{"_index":814,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["nombre",{"_index":737,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["nombreusuario",{"_index":164,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["nombreusuario:nombreusuario",{"_index":505,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["nombrevendedor",{"_index":137,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{}}}],["notfoundexception",{"_index":467,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["npm",{"_index":827,"title":{},"body":{"index.html":{}}}],["nuestros",{"_index":170,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["nullable",{"_index":239,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["number",{"_index":143,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["ondelete",{"_index":247,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["onetomany",{"_index":443,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["onetomany(undefined",{"_index":431,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["onupdate",{"_index":249,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["opcion",{"_index":336,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["open",{"_index":846,"title":{},"body":{"index.html":{}}}],["operacion",{"_index":348,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["optional",{"_index":185,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["options",{"_index":591,"title":{},"body":{"modules/MailsModule.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["overview",{"_index":872,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":776,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":199,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["param('ubicacion",{"_index":410,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["param('usuario",{"_index":403,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["parameters",{"_index":183,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["parseintpipe",{"_index":370,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["partialtype",{"_index":626,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{}}}],["partialtype(createimagenesdto",{"_index":629,"title":{},"body":{"classes/UpdateInmuebleDto.html":{}}}],["partialtype(createinmuebledto",{"_index":632,"title":{},"body":{"classes/UpdateInmuebleDto-1.html":{}}}],["partialtype(createusuariodto",{"_index":636,"title":{},"body":{"classes/UpdateUsuarioDto.html":{}}}],["pass",{"_index":583,"title":{},"body":{"modules/MailsModule.html":{}}}],["password",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateImagenesDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{}}}],["path.path",{"_index":316,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["please",{"_index":855,"title":{},"body":{"index.html":{}}}],["port",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["port:465",{"_index":579,"title":{},"body":{"modules/MailsModule.html":{}}}],["post",{"_index":200,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["post('/:vendedor",{"_index":413,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["post('/form",{"_index":548,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('/password",{"_index":669,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('/password')@httpcode(httpstatus.ok",{"_index":644,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('/send",{"_index":551,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('/welcome",{"_index":554,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('email",{"_index":675,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('email')@httpcode(httpstatus.ok",{"_index":656,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('upload/:id",{"_index":218,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["post('upload/:id')@useinterceptors(undefined",{"_index":194,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["precio",{"_index":138,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["preciomax",{"_index":339,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["preciomax=number.max_value",{"_index":485,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["preciomin",{"_index":338,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["preciomin=0",{"_index":483,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["preconditionfailedexception",{"_index":375,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["prefix",{"_index":173,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["primarycolumn",{"_index":693,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["primarygeneratedcolumn",{"_index":241,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["private",{"_index":294,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["production",{"_index":836,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":813,"title":{},"body":{"index.html":{}}}],["project",{"_index":847,"title":{},"body":{"index.html":{}}}],["promise",{"_index":186,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["properties",{"_index":123,"title":{"properties.html":{}},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"properties.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}}}],["proyecto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["put",{"_index":369,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["put('/:id",{"_index":417,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["put(':nombreusuario",{"_index":681,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["que",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":201,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{}}}],["query('banos",{"_index":395,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('email",{"_index":565,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('habitaciones')habitaciones",{"_index":394,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('limit')limit",{"_index":398,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('message",{"_index":567,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('name",{"_index":559,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('opcion",{"_index":390,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('operacion",{"_index":385,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('preciomax')preciomax",{"_index":393,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('preciomin')preciomin",{"_index":392,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('reason",{"_index":566,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('skip",{"_index":384,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('skip')skip",{"_index":399,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('superficiemax",{"_index":397,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('superficiemin",{"_index":396,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('surname",{"_index":564,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('tipo",{"_index":391,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["randomname",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${filename",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":856,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateInmuebleDto.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["reason",{"_index":546,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["reconozcan",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["recuperar",{"_index":618,"title":{},"body":{"injectables/MailsService.html":{}}}],["reflect",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":327,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["remove(@param('id",{"_index":421,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["remove(id",{"_index":361,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["renameimage",{"_index":214,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":270,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UsuariosRepository.html":{},"index.html":{}}}],["req",{"_index":202,"title":{},"body":{"controllers/ImagenesController.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":180,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["rimraf",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":831,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":818,"title":{},"body":{"index.html":{}}}],["se",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["secure",{"_index":578,"title":{},"body":{"modules/MailsModule.html":{}}}],["sendemailform",{"_index":540,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailform(@query('name",{"_index":563,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailform(name",{"_index":543,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword",{"_index":541,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword(@query('email",{"_index":561,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword(email",{"_index":550,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome",{"_index":542,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome(@query('email",{"_index":558,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome(email",{"_index":553,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendmailform",{"_index":594,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailform(name",{"_index":600,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailpassword",{"_index":595,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailpassword(email",{"_index":602,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailwelcome",{"_index":596,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailwelcome(email",{"_index":604,"title":{},"body":{"injectables/MailsService.html":{}}}],["server",{"_index":819,"title":{},"body":{"index.html":{}}}],["server_port",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":820,"title":{},"body":{"index.html":{}}}],["skip",{"_index":344,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["skip:skip",{"_index":478,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"index.html":{}}}],["sponsors",{"_index":850,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imagenes.helper.ts",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/constants.ts",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imagenes/dto/create",{"_index":121,"title":{},"body":{"classes/CreateImagenesDto.html":{},"coverage.html":{}}}],["src/imagenes/dto/update",{"_index":625,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["src/imagenes/entities/imagenes.entity",{"_index":442,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts",{"_index":236,"title":{},"body":{"entities/ImagenesEntity.html":{},"coverage.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:11",{"_index":240,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:14",{"_index":252,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:21",{"_index":251,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:8",{"_index":242,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/helpers/imagenes.helper.ts",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imagenes/imagenes.controller.ts",{"_index":172,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.controller.ts:19",{"_index":195,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.controller.ts:24",{"_index":189,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.controller.ts:29",{"_index":182,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.module.ts",{"_index":262,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["src/imagenes/imagenes.repository.ts",{"_index":268,"title":{},"body":{"classes/ImagenesRepository.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.service.ts",{"_index":273,"title":{},"body":{"injectables/ImagenesService.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.service.ts:13",{"_index":279,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:20",{"_index":283,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:47",{"_index":282,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:58",{"_index":280,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/inmuebles/dto/create",{"_index":132,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"coverage.html":{}}}],["src/inmuebles/dto/update",{"_index":631,"title":{},"body":{"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["src/inmuebles/entities/inmuebles.entity",{"_index":263,"title":{},"body":{"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"entities/UsuariosEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts",{"_index":423,"title":{},"body":{"entities/InmueblesEntity.html":{},"coverage.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:12",{"_index":438,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:15",{"_index":436,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:18",{"_index":437,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:25",{"_index":440,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:28",{"_index":435,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:31",{"_index":429,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:34",{"_index":425,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:37",{"_index":434,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:40",{"_index":428,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:43",{"_index":433,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:9",{"_index":430,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/inmuebles.controller.ts",{"_index":319,"title":{},"body":{"controllers/InmueblesController.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.controller.ts:13",{"_index":350,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:20",{"_index":346,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:26",{"_index":360,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:32",{"_index":353,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:38",{"_index":356,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:45",{"_index":333,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:52",{"_index":367,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:58",{"_index":363,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.module.ts",{"_index":446,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["src/inmuebles/inmuebles.repository",{"_index":288,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/inmuebles/inmuebles.repository.ts",{"_index":450,"title":{},"body":{"classes/InmueblesRepository.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.service.ts",{"_index":452,"title":{},"body":{"injectables/InmueblesService.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.service.ts:116",{"_index":464,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:134",{"_index":458,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:14",{"_index":456,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:154",{"_index":466,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:21",{"_index":462,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:212",{"_index":460,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:39",{"_index":461,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:87",{"_index":463,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:96",{"_index":465,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/mails/mails.controller.ts",{"_index":538,"title":{},"body":{"controllers/MailsController.html":{},"coverage.html":{}}}],["src/mails/mails.controller.ts:10",{"_index":555,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.controller.ts:15",{"_index":552,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.controller.ts:20",{"_index":549,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.module.ts",{"_index":571,"title":{},"body":{"modules/MailsModule.html":{}}}],["src/mails/mails.service.ts",{"_index":593,"title":{},"body":{"injectables/MailsService.html":{},"coverage.html":{}}}],["src/mails/mails.service.ts:26",{"_index":603,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:44",{"_index":601,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:5",{"_index":599,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:9",{"_index":605,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/main.ts",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/usuarios/dto/create",{"_index":157,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"coverage.html":{}}}],["src/usuarios/dto/update",{"_index":634,"title":{},"body":{"classes/UpdateUsuarioDto.html":{},"coverage.html":{}}}],["src/usuarios/entities/usuarios.entity",{"_index":160,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{}}}],["src/usuarios/entities/usuarios.entity.ts",{"_index":687,"title":{},"body":{"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:11",{"_index":689,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:14",{"_index":690,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:17",{"_index":692,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:8",{"_index":694,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/usuarios.controller.ts",{"_index":638,"title":{},"body":{"controllers/UsuariosController.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.controller.ts:14",{"_index":654,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:20",{"_index":645,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:26",{"_index":660,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:32",{"_index":657,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:39",{"_index":649,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:47",{"_index":663,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:53",{"_index":652,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.module.ts",{"_index":697,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["src/usuarios/usuarios.repository",{"_index":473,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/usuarios/usuarios.repository.ts",{"_index":701,"title":{},"body":{"classes/UsuariosRepository.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.service.ts",{"_index":703,"title":{},"body":{"injectables/UsuariosService.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.service.ts:118",{"_index":710,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:12",{"_index":706,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:18",{"_index":711,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:27",{"_index":713,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:39",{"_index":712,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:52",{"_index":708,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:67",{"_index":709,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:84",{"_index":714,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["start",{"_index":832,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":835,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":837,"title":{},"body":{"index.html":{}}}],["started",{"_index":812,"title":{"index.html":{}},"body":{}}],["starter",{"_index":825,"title":{},"body":{"index.html":{}}}],["statements",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":859,"title":{},"body":{"index.html":{}}}],["storage",{"_index":221,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["streamablefile",{"_index":203,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["strict",{"_index":592,"title":{},"body":{"modules/MailsModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["subidas",{"_index":313,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["subject",{"_index":607,"title":{},"body":{"injectables/MailsService.html":{}}}],["superficie",{"_index":139,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["superficiemax",{"_index":342,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["superficiemax=number.max_value",{"_index":489,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["superficiemin",{"_index":341,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["superficiemin=0",{"_index":487,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["support",{"_index":851,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":544,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["svg",{"_index":870,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["tablas",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":503,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["take:limit",{"_index":477,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["template",{"_index":586,"title":{},"body":{"modules/MailsModule.html":{},"injectables/MailsService.html":{}}}],["templates",{"_index":589,"title":{},"body":{"modules/MailsModule.html":{}}}],["templates/logo.png",{"_index":615,"title":{},"body":{"injectables/MailsService.html":{}}}],["test",{"_index":840,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":843,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":842,"title":{},"body":{"index.html":{}}}],["tests",{"_index":839,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":849,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.findbynombre(nombreusuario",{"_index":746,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.imagenesrepository.create({filename,path",{"_index":308,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesrepository.find",{"_index":314,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesrepository.save(img",{"_index":311,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesservice.getfile(path",{"_index":233,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.imagenesservice.getpath(id",{"_index":230,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.imagenesservice.uploadfiles(id",{"_index":226,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.inmueblerepository.create(data",{"_index":508,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.delete",{"_index":537,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.findandcount",{"_index":476,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.findone",{"_index":297,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.save(newinmueble",{"_index":510,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.update",{"_index":535,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblesservice.create(vendedor",{"_index":416,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.delete(id",{"_index":422,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.filter(ubicacion,opcion,tipo,preciomin",{"_index":400,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findall(limit",{"_index":386,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyid(id",{"_index":407,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyubicacion(limit",{"_index":411,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyusuario(limit",{"_index":404,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.update(id,data",{"_index":419,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.mailerservice.sendmail",{"_index":606,"title":{},"body":{"injectables/MailsService.html":{}}}],["this.mailsservice.sendmailform(name",{"_index":568,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.mailsservice.sendmailpassword(email",{"_index":562,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.mailsservice.sendmailwelcome(email",{"_index":560,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.usuariorepository.create(data",{"_index":735,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.createquerybuilder(\"usuario\").getmany",{"_index":718,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.delete",{"_index":747,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.findone",{"_index":504,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["this.usuariorepository.save(newusuario",{"_index":736,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.update",{"_index":744,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariosservice.comprobarpassword(usser",{"_index":671,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.create(data",{"_index":680,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.delete(nombreusuario",{"_index":686,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findall",{"_index":668,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findbyemail(correo.correo",{"_index":677,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findbynombre(nombreusuario",{"_index":674,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.update(nombreusuario",{"_index":683,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["throw",{"_index":299,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["tipo",{"_index":337,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["tipoinmueble",{"_index":140,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["tipooperacion",{"_index":141,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["todo",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["touch",{"_index":860,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":576,"title":{},"body":{"modules/MailsModule.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":866,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":257,"title":{},"body":{"entities/ImagenesEntity.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"classes/UsuariosRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/UsuariosModule.html":{}}}],["typeormmodule.forrootasync",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":628,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"dependencies.html":{}}}],["types/nodemailer",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":824,"title":{},"body":{"index.html":{}}}],["ubicacion",{"_index":142,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["ui",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":838,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":196,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/UsuariosService.html":{}}}],["unlicensed",{"_index":877,"title":{},"body":{"properties.html":{}}}],["update",{"_index":328,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["update(@param('id",{"_index":418,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["update(@param('nombreusuario",{"_index":682,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["update(id",{"_index":364,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["update(nombreusuario",{"_index":661,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["updateinmuebledto",{"_index":365,"title":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{}},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["updateusuariodto",{"_index":633,"title":{"classes/UpdateUsuarioDto.html":{}},"body":{"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["upload",{"_index":223,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["uploadedfile",{"_index":204,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["uploadedfiles",{"_index":205,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["uploadfiles",{"_index":178,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["uploadfiles(@param('id",{"_index":224,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["uploadfiles(id",{"_index":191,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["usefactory",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["useinterceptors",{"_index":206,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":219,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["usepipes",{"_index":373,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["usepipes(new",{"_index":331,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["user",{"_index":581,"title":{},"body":{"modules/MailsModule.html":{}}}],["username",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["usser",{"_index":646,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usser.nombreusuario",{"_index":722,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario",{"_index":358,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["usuario.contraseña",{"_index":725,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario.correo",{"_index":742,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario.dto",{"_index":666,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuario.dto.ts",{"_index":635,"title":{},"body":{"classes/UpdateUsuarioDto.html":{},"coverage.html":{}}}],["usuario.nombreusuario",{"_index":739,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuariorepository",{"_index":454,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["usuarios",{"_index":639,"title":{},"body":{"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.controller",{"_index":698,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["usuarios.dto",{"_index":158,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.dto.ts",{"_index":161,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"coverage.html":{}}}],["usuarios.dto.ts:11",{"_index":165,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.dto.ts:15",{"_index":166,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.dto.ts:7",{"_index":167,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.length",{"_index":719,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios.repository",{"_index":715,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios.service",{"_index":665,"title":{},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{}}}],["usuarios/entities/usuarios.entity",{"_index":441,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["usuarios/usuarios.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarioscontroller",{"_index":637,"title":{"controllers/UsuariosController.html":{}},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"coverage.html":{}}}],["usuariosentity",{"_index":159,"title":{"entities/UsuariosEntity.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuariosentity.nombreusuario",{"_index":439,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["usuariosmodule",{"_index":38,"title":{"modules/UsuariosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsuariosModule.html":{},"modules.html":{},"overview.html":{}}}],["usuariosrepository",{"_index":455,"title":{"classes/UsuariosRepository.html":{}},"body":{"injectables/InmueblesService.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuariosservice",{"_index":664,"title":{"injectables/UsuariosService.html":{}},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"overview.html":{}}}],["validar",{"_index":169,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["validationpipe",{"_index":374,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["validationpipe())@post('/:vendedor')@httpcode(httpstatus.created",{"_index":332,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["validationpipe())@post()@httpcode(httpstatus.created",{"_index":648,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["validationpipe())@put('/:id')@httpcode(httpstatus.ok",{"_index":366,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["validationpipe())@put(':nombreusuario')@httpcode(httpstatus.ok",{"_index":662,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["validationpipe({whitelist:true",{"_index":412,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["validator",{"_index":130,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"dependencies.html":{}}}],["value",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["van",{"_index":168,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["var",{"_index":304,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["varchar",{"_index":238,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["variable",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":77,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["vendedor",{"_index":334,"title":{},"body":{"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["version",{"_index":875,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":833,"title":{},"body":{"index.html":{}}}],["website",{"_index":864,"title":{},"body":{"index.html":{}}}],["world",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["ya",{"_index":729,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["you'd",{"_index":854,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nImagenesModule\n\nImagenesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nImagenesModule->AppModule\n\n\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nAppModule -->\n\nInmueblesModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nAppModule -->\n\nUsuariosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nAppModule -->\n\nMailsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            MailsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImagenesModule\n                        \n                        \n                            InmueblesModule\n                        \n                        \n                            MailsModule\n                        \n                        \n                            UsuariosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsuariosModule } from './usuarios/usuarios.module';\nimport { InmueblesModule } from './inmuebles/inmuebles.module';\nimport { ImagenesController } from './imagenes/imagenes.controller';\nimport { ImagenesService } from './imagenes/imagenes.service';\nimport { ImagenesModule } from './imagenes/imagenes.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { join } from 'path';\nimport { MailsController } from './mails/mails.controller';\nimport { MailsService } from './mails/mails.service';\nimport { MailsModule } from './mails/mails.module';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env', //fichero con las variables globales\n      isGlobal: true // para que se reconozcan las variables globalmente en todo el proyecto\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('DB_HOST'),\n        port: +configService.get('DB_PORT'),\n        username: configService.get('DB_USER'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_DATABASE'),\n        entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: false,\n        logging: false //para crear las tablas\n      }),\n      inject: [ConfigService],\n    }),\n  ConfigModule.forRoot(),\n    UsuariosModule,\n    InmueblesModule,\n    ImagenesModule,\n    MailsModule,\n  ],\n  controllers: [AppController, MailsController],\n  providers: [AppService, MailsService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImagenesDto.html":{"url":"classes/CreateImagenesDto.html","title":"class - CreateImagenesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImagenesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/dto/create-imagenes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/dto/create-imagenes.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/dto/create-imagenes.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateImagenesDto {\n    \n    \n    @IsNotEmpty()\n    @IsString()\n    filename: string;\n\n    @IsNotEmpty()\n    @IsString()\n    path: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInmuebleDto.html":{"url":"classes/CreateInmuebleDto.html","title":"class - CreateInmuebleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/dto/create-inmueble.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baños\n                            \n                            \n                                    Readonly\n                                descripcion\n                            \n                            \n                                    Readonly\n                                habitaciones\n                            \n                            \n                                    Readonly\n                                nombreVendedor\n                            \n                            \n                                    Readonly\n                                precio\n                            \n                            \n                                    Readonly\n                                superficie\n                            \n                            \n                                    Readonly\n                                tipoInmueble\n                            \n                            \n                                    Readonly\n                                tipoOperacion\n                            \n                            \n                                    Readonly\n                                ubicacion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baños\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        habitaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        nombreVendedor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        precio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        superficie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tipoInmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tipoOperacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ubicacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsPositive, IsString } from \"class-validator\";\nimport { CreateUsuarioDto } from \"src/usuarios/dto/create-usuarios.dto\";\nimport { UsuariosEntity } from \"src/usuarios/entities/usuarios.entity\";\n\nexport class CreateInmuebleDto {\n    \n    @IsNotEmpty()\n    @IsString()\n    readonly ubicacion: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly tipoInmueble: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly tipoOperacion: string;\n    \n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly superficie: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly habitaciones: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly baños: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly precio: number;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly descripcion: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly nombreVendedor: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsuarioDto.html":{"url":"classes/CreateUsuarioDto.html","title":"class - CreateUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/dto/create-usuarios.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contraseña\n                            \n                            \n                                correo\n                            \n                            \n                                nombreUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contraseña\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator' //van a validar nuestros atributos\n\nexport class CreateUsuarioDto {\n\n    @IsNotEmpty()\n    @IsString()\n    nombreUsuario: string;\n\n    @IsNotEmpty()\n    @IsString()\n    contraseña: string;\n\n    @IsNotEmpty()\n    @IsString()\n    correo: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagenesController.html":{"url":"controllers/ImagenesController.html","title":"controller - ImagenesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagenesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                imagenes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getPaths\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(path: String, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getImage/:path')\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPaths\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPaths(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getPaths/:id')\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(id: number, files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Headers, Param, Post, Query, Req, Res, StreamableFile, UploadedFile, UploadedFiles, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { fileFilter, renameImage } from './helpers/imagenes.helper';\nimport { ImagenesService } from './imagenes.service';\n\n@Controller('imagenes')\nexport class ImagenesController {\n    constructor(private readonly imagenesService: ImagenesService) {}\n\n    @Post('upload/:id')\n    @UseInterceptors(FilesInterceptor('files', 5, {\n        storage: diskStorage({\n            destination: './upload',\n            filename: renameImage\n        }),\n        fileFilter: fileFilter\n    }))\n    async uploadFiles(@Param('id') id: number, @UploadedFiles() files: Array){\n        return await this.imagenesService.uploadFiles(id, files);\n    }\n\n    @Get('/getPaths/:id') //id del inmueble\n    async getPaths(@Param('id') id: number): Promise {\n        return await this.imagenesService.getPath(id);\n    }\n\n    @Get('/getImage/:path') \n    async getFile(@Query('path') path: String, @Res() res): Promise {\n        console.log(path)\n        //return await this.imagenesService.getFile(path, res);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImagenesEntity.html":{"url":"entities/ImagenesEntity.html","title":"entity - ImagenesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImagenesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/entities/imagenes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                id\n                            \n                            \n                                inmueble\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InmueblesEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, inmuebleEntity => inmuebleEntity.id, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'inmueble'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { InmueblesEntity } from \"../../inmuebles/entities/inmuebles.entity\"; \nimport { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({name: 'Imagenes'})\nexport class ImagenesEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'varchar', nullable: false})\n    filename: string;\n\n    @Column({type: 'varchar', nullable: false})\n    path: string;\n\n    @ManyToOne(() => InmueblesEntity, (inmuebleEntity) => inmuebleEntity.id, {\n        onDelete: \"CASCADE\",\n        onUpdate: \"CASCADE\"\n    })\n    @JoinColumn({name: \"inmueble\"})\n    inmueble: InmueblesEntity\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagenesModule.html":{"url":"modules/ImagenesModule.html","title":"module - ImagenesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagenesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ImagenesModule\n\n\n\ncluster_ImagenesModule_providers\n\n\n\n\nImagenesService\n\nImagenesService\n\n\n\nImagenesModule\n\nImagenesModule\n\nImagenesModule -->\n\nImagenesService->ImagenesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/imagenes/imagenes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagenesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagenesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InmueblesEntity } from 'src/inmuebles/entities/inmuebles.entity';\nimport { ImagenesEntity } from './entities/imagenes.entity';\nimport { ImagenesController } from './imagenes.controller';\nimport { ImagenesService } from './imagenes.service';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([ImagenesEntity]),TypeOrmModule.forFeature([InmueblesEntity])],\n  controllers: [ImagenesController],\n  providers: [ImagenesService]\n})\nexport class ImagenesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagenesRepository.html":{"url":"classes/ImagenesRepository.html","title":"class - ImagenesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagenesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { ImagenesEntity } from \"./entities/imagenes.entity\";\n\n@EntityRepository(ImagenesEntity)\n\nexport class ImagenesRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagenesService.html":{"url":"injectables/ImagenesService.html","title":"injectable - ImagenesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagenesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getPath\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagenesRepository: ImagenesRepository, inmuebleRepository: InmueblesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/imagenes/imagenes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagenesRepository\n                                                  \n                                                        \n                                                                        ImagenesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inmuebleRepository\n                                                  \n                                                        \n                                                                        InmueblesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(path, res)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPath(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(id: number, files: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { createReadStream } from 'fs';\nimport { join } from 'path';\nimport { InmueblesEntity } from 'src/inmuebles/entities/inmuebles.entity';\nimport { InmueblesRepository } from 'src/inmuebles/inmuebles.repository';\nimport { getRepository } from 'typeorm';\nimport { CreateImagenesDto } from './dto/create-imagenes.dto';\nimport { ImagenesEntity } from './entities/imagenes.entity';\nimport { ImagenesRepository } from './imagenes.repository';\n\n@Injectable()\nexport class ImagenesService {\n\n    constructor(\n        @InjectRepository(ImagenesEntity) private imagenesRepository: ImagenesRepository,\n        @InjectRepository(InmueblesEntity) private inmuebleRepository: InmueblesRepository\n    ) { }\n\n    async uploadFiles(id: number, files: Array){\n                \n        const inmueble = this.inmuebleRepository.findOne({\n            where:{\n                id: id\n            }\n        })\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'}) \n            \n            for( var file of files){\n            const filename = file.filename;\n            const path = file.path;\n            \n            const img = this.imagenesRepository.create({filename,path});\n            \n            img.inmueble = await this.inmuebleRepository.findOne({\n                where:{\n                    id:id\n                }\n            });\n\n            await this.imagenesRepository.save(img);\n        }\n\n        return {message:'Imágenes subidas'}\n    }\n\n    async getPath(id: number){\n        \n        const files = await this.imagenesRepository.find({\n            where: {\n                inmueble: id,\n            }\n        });\n\n        return files;\n    }\n\n    async getFile(path, res){\n        const img = createReadStream(join(process.cwd(), path.path));\n        img.pipe(res);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InmueblesController.html":{"url":"controllers/InmueblesController.html","title":"controller - InmueblesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InmueblesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                inmuebles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                filter\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByUbicacion\n                            \n                            \n                                findByUsuario\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(vendedor: string, data: CreateInmuebleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('/:vendedor')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vendedor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/filter')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    habitaciones\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    banos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, skip: number, operacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/id/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUbicacion\n                        \n                    \n                \n            \n            \n                \nfindByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:ubicacion')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUsuario\n                        \n                    \n                \n            \n            \n                \nfindByUsuario(limit: number, skip: number, usuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/mostrar/:usuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: UpdateInmuebleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Put('/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Put, ParseIntPipe, HttpStatus, HttpCode, UsePipes, ValidationPipe, UseInterceptors, UploadedFile, UploadedFiles, Query, PreconditionFailedException } from '@nestjs/common';\nimport { InmueblesService } from './inmuebles.service';\nimport { CreateInmuebleDto } from './dto/create-inmueble.dto';\nimport { UpdateInmuebleDto } from './dto/update-inmueble.dto';\n\n@Controller('inmuebles')\nexport class InmueblesController {\n  \n  constructor(private readonly inmueblesService: InmueblesService) {}\n\n  @Get('/getAll')\n  @HttpCode(HttpStatus.OK)\n  findAll(@Query('limit') limit: number, @Query('skip') skip: number, @Query('operacion') operacion: string) {\n    return this.inmueblesService.findAll(limit, skip, operacion);\n  }\n\n  //http://localhost:8080/inmuebles/filter?tipo=P&precioMin=&precioMax=&habitaciones=&banos=&superficieMin=&superficieMax=&limit=&skip=\n  @Get('/filter')\n  @HttpCode(HttpStatus.OK)\n  filter(@Query('ubicacion') ubicacion: string, @Query('opcion') opcion: string, @Query('tipo') tipo: string, @Query('precioMin')precioMin: number, @Query('precioMax')precioMax: number, @Query('habitaciones')habitaciones: number, @Query('banos') banos: number, @Query('superficieMin') superficieMin: number, @Query('superficieMax') superficieMax: number, @Query('limit')limit: number, @Query('skip')skip: number) {\n    return this.inmueblesService.filter(ubicacion,opcion,tipo,precioMin, precioMax, habitaciones, banos, superficieMin, superficieMax, limit, skip);\n  }\n \n  @Get('/mostrar/:usuario')\n  @HttpCode(HttpStatus.OK)\n  findByUsuario(@Query('limit') limit: number, @Query('skip') skip: number, @Param('usuario') usuario: string) {\n    return this.inmueblesService.findByUsuario(limit, skip, usuario);\n  }\n\n  @Get('/id/:id')\n  @HttpCode(HttpStatus.OK)\n  findById(@Param('id') id: number) {\n    return this.inmueblesService.findById(id);\n  }\n\n  @Get('/:ubicacion')\n  @HttpCode(HttpStatus.OK)\n  findByUbicacion(@Query('limit') limit: number, @Query('skip') skip: number, @Param('ubicacion') ubicacion: string, @Query('operacion') operacion: string) {\n    return this.inmueblesService.findByUbicacion(limit, skip, ubicacion, operacion);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Post('/:vendedor')\n  @HttpCode(HttpStatus.CREATED)\n  create(@Param('vendedor') vendedor: string, @Body() data: CreateInmuebleDto) {\n    return this.inmueblesService.create(vendedor, data);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Put('/:id')\n  @HttpCode(HttpStatus.OK)\n  update(@Param('id', ParseIntPipe) id: number, @Body() data: UpdateInmuebleDto) {\n    return this.inmueblesService.update(id,data);\n  }\n\n  @Delete('/:id')\n  @HttpCode(HttpStatus.OK)\n  remove(@Param('id', ParseIntPipe) id: number) {\n    return this.inmueblesService.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InmueblesEntity.html":{"url":"entities/InmueblesEntity.html","title":"entity - InmueblesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InmueblesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/entities/inmuebles.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baños\n                            \n                            \n                                descripcion\n                            \n                            \n                                habitaciones\n                            \n                            \n                                id\n                            \n                            \n                                imagenes\n                            \n                            \n                                precio\n                            \n                            \n                                superficie\n                            \n                            \n                                tipoInmueble\n                            \n                            \n                                tipoOperacion\n                            \n                            \n                                ubicacion\n                            \n                            \n                                vendedor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baños\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        habitaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagenes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, imagenesEntity => imagenesEntity.inmueble)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        precio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        superficie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoInmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoOperacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ubicacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendedor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsuariosEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, usuariosEntity => usuariosEntity.nombreUsuario, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'nombreVendedor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { UsuariosEntity } from \"../../usuarios/entities/usuarios.entity\"; \nimport { ImagenesEntity } from \"src/imagenes/entities/imagenes.entity\"; \nimport { Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({name: 'Inmuebles'})\nexport class InmueblesEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    ubicacion: string;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    tipoInmueble: string;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    tipoOperacion: string;\n\n    @ManyToOne(() => UsuariosEntity, (usuariosEntity) => usuariosEntity.nombreUsuario, {\n        onDelete: \"CASCADE\",\n        onUpdate: \"CASCADE\"\n    })\n    @JoinColumn({name: \"nombreVendedor\"})\n    vendedor: UsuariosEntity;\n\n    @Column({type: 'int', nullable: false})\n    superficie: number;\n\n    @Column({type: 'int', nullable: false})\n    habitaciones: number;\n\n    @Column({type: 'int', nullable: false})\n    baños: number;\n\n    @Column({type: 'int', nullable: false})\n    precio: number;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    descripcion: string;\n\n    @OneToMany(() => ImagenesEntity, (imagenesEntity) => imagenesEntity.inmueble)\n    imagenes: Array; \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InmueblesModule.html":{"url":"modules/InmueblesModule.html","title":"module - InmueblesModule","body":"\n                   \n\n\n\n\n    Modules\n    InmueblesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InmueblesModule\n\n\n\ncluster_InmueblesModule_providers\n\n\n\n\nInmueblesService\n\nInmueblesService\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nInmueblesModule -->\n\nInmueblesService->InmueblesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/inmuebles/inmuebles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InmueblesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InmueblesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuariosEntity } from 'src/usuarios/entities/usuarios.entity';\nimport { InmueblesEntity } from './entities/inmuebles.entity';\nimport { InmueblesController } from './inmuebles.controller';\nimport { InmueblesService } from './inmuebles.service';\n\n@Module({\n    imports:[TypeOrmModule.forFeature([InmueblesEntity]),TypeOrmModule.forFeature([UsuariosEntity])],\n    providers: [InmueblesService],\n    controllers: [InmueblesController]\n  })\nexport class InmueblesModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InmueblesRepository.html":{"url":"classes/InmueblesRepository.html","title":"class - InmueblesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InmueblesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { InmueblesEntity } from \"./entities/inmuebles.entity\";\n\n@EntityRepository(InmueblesEntity)\n\nexport class InmueblesRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InmueblesService.html":{"url":"injectables/InmueblesService.html","title":"injectable - InmueblesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InmueblesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                filter\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUbicacion\n                            \n                            \n                                    Async\n                                findByUsuario\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inmuebleRepository: InmueblesRepository, usuarioRepository: UsuariosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/inmuebles/inmuebles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inmuebleRepository\n                                                  \n                                                        \n                                                                        InmueblesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        UsuariosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(nombreUsuario: string, data: CreateInmuebleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    habitaciones\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    banos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, skip: number, operacion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUbicacion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsuario\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsuario(limit: number, skip: number, nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateInmuebleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InmueblesEntity } from './entities/inmuebles.entity';\nimport { InmueblesRepository } from './inmuebles.repository';\nimport { CreateInmuebleDto } from './dto/create-inmueble.dto';\nimport { UpdateInmuebleDto } from './dto/update-inmueble.dto';\nimport { Between, getRepository, ILike, LessThanOrEqual, Like, MoreThanOrEqual } from 'typeorm';\n\nimport { UsuariosEntity } from 'src/usuarios/entities/usuarios.entity';\nimport { UsuariosRepository } from 'src/usuarios/usuarios.repository';\n\n\n@Injectable()\nexport class InmueblesService {\n\n    constructor(\n        @InjectRepository(InmueblesEntity) private inmuebleRepository: InmueblesRepository,\n        @InjectRepository(UsuariosEntity) private usuarioRepository: UsuariosRepository\n    ) { }\n\n    async findAll(limit: number, skip: number, operacion: string): Promise {\n        \n        if(!operacion){\n            \n            operacion=\"%\";\n        }\n        const inmueble = await this.inmuebleRepository.findAndCount({\n            \n            take:limit,\n            skip:skip,\n            where:{\n                tipoOperacion: Like('%'+operacion+'%')\n            }\n        });\n      \n        return inmueble;\n    }\n\n    async filter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number): Promise {\n        //console.log(ubicacion, opcion)\n        if(!tipo){\n            tipo=\"%\";\n        }\n        if(!precioMin){\n            precioMin=0;\n        }\n        if(!precioMax){\n            precioMax=Number.MAX_VALUE;\n        }\n        if(!superficieMin){\n            superficieMin=0;\n        }\n        if(!superficieMax){\n            superficieMax=Number.MAX_VALUE;\n        }\n        if(!ubicacion){\n            ubicacion=\"%\";\n        }\n        if(!opcion){\n            opcion=\"%\";\n        }\n        if(!habitaciones){\n            habitaciones=0;\n        }\n        if(!banos){\n            banos=0;\n        }\n\n        const inmueble = await this.inmuebleRepository.findAndCount({\n            where:{\n                tipoInmueble: Like('%'+tipo+'%'),\n                precio: Between(precioMin, precioMax),\n                habitaciones: MoreThanOrEqual(habitaciones),\n                baños: MoreThanOrEqual(banos),\n                superficie: Between(superficieMin, superficieMax),\n                ubicacion: Like('%'+ubicacion+'%'),\n                tipoOperacion: Like('%'+opcion+'%')\n            },\n            take: limit,\n            skip: skip\n\n        });\n        \n       return inmueble;\n    }\n\n    async findById(id: number): Promise {\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n        return inmueble;\n    }\n\n    async findByUsuario(limit: number, skip: number, nombreUsuario: string): Promise {\n        \n        const usuario = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario:nombreUsuario\n            }\n        });\n        \n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'}) \n\n        const inmueble = this.inmuebleRepository.findAndCount({\n            where: {\n                vendedor: nombreUsuario\n            },\n            take:limit,\n            skip:skip\n        });\n        return inmueble;\n    }\n    \n    async findByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string): Promise {\n        \n        if(!operacion){\n            \n            operacion=\"%\";\n        }\n\n        const inmueble = this.inmuebleRepository.findAndCount({\n            where: {\n                ubicacion: ubicacion,\n                tipoOperacion: Like('%'+operacion+'%')\n            },\n            take:limit,\n            skip:skip\n        });        \n        return inmueble;\n    }\n\n    async create(nombreUsuario: string, data: CreateInmuebleDto): Promise {\n        const usuario = this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: nombreUsuario\n            }\n        });\n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'}) \n\n        const newInmueble = this.inmuebleRepository.create(data);\n        newInmueble.vendedor = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario:nombreUsuario\n            }\n        });\n        \n        await this.inmuebleRepository.save(newInmueble);\n        \n        return newInmueble;\n    }\n\n    async update(id: number, data: UpdateInmuebleDto): Promise{\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'})\n        \n        if(data.baños) {\n            inmueble.baños = data.baños;        \n        }\n\n        if(data.descripcion) {\n            inmueble.descripcion = data.descripcion;        \n        }\n\n        if(data.habitaciones) {\n            inmueble.habitaciones = data.habitaciones;        \n        }\n\n        if(data.precio) {\n            inmueble.precio = data.precio;        \n        }\n\n        if(data.superficie) {\n            inmueble.superficie = data.superficie;        \n        }\n\n        if(data.tipoInmueble) {\n            inmueble.tipoInmueble = data.tipoInmueble;        \n        }\n\n        if(data.tipoOperacion) {\n            inmueble.tipoOperacion = data.tipoOperacion;        \n        }\n\n        if(data.ubicacion) {\n            inmueble.ubicacion = data.ubicacion;        \n        }\n\n        await this.inmuebleRepository.update({\n                id: id\n            },\n            {\n                baños: inmueble.baños,\n                descripcion: inmueble.descripcion,\n                habitaciones: inmueble.habitaciones,\n                precio: inmueble.precio,\n                superficie: inmueble.superficie,\n                tipoInmueble: inmueble.tipoInmueble,\n                tipoOperacion: inmueble.tipoOperacion,\n                ubicacion: inmueble.ubicacion\n            });\n                        \n            const listaInmuebles = await this.inmuebleRepository.findAndCount();\n            return listaInmuebles;\n    }\n\n    async delete(id: number){\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'})\n        \n        await this.inmuebleRepository.delete({\n            id: id\n        });\n                \n        const listaInmuebles = await this.inmuebleRepository.findAndCount();\n        return listaInmuebles;\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailsController.html":{"url":"controllers/MailsController.html","title":"controller - MailsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mails/mails.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mails\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmailForm\n                            \n                            \n                                    Async\n                                sendEmailPassword\n                            \n                            \n                                    Async\n                                sendEmailWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailForm(name: string, surname: string, email: string, reason: string, message: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/form')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    surname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailPassword(email: string, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailWelcome\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailWelcome(email: string, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/welcome')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post, Query } from '@nestjs/common';\nimport { MailsService } from './mails.service';\n\n@Controller('mails')\nexport class MailsController {\n    \n    constructor(private readonly mailsService: MailsService) {}\n\n    @Post('/welcome')\n    async sendEmailWelcome(@Query('email') email: string, @Query('name') name: string) {        \n        return await this.mailsService.sendMailWelcome(email, name);\n    }\n\n    @Post('/send')\n    async sendEmailPassword(@Query('email') email: string, @Query('name') name: string) {        \n        return await this.mailsService.sendMailPassword(email, name);\n    } \n\n    @Post('/form')\n    async sendEmailForm(@Query('name') name: string, @Query('surname') surname: string, @Query('email') email: string, @Query('reason') reason: string, @Query('message') message: string ) {        \n        return await this.mailsService.sendMailForm(name, surname, email, reason, message);\n    } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailsModule.html":{"url":"modules/MailsModule.html","title":"module - MailsModule","body":"\n                   \n\n\n\n\n    Modules\n    MailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailsModule\n\n\n\ncluster_MailsModule_providers\n\n\n\n\nMailsService\n\nMailsService\n\n\n\nMailsModule\n\nMailsModule\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mails/mails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config/dist/config.service';\nimport { join } from 'path';\nimport { MailsController } from './mails.controller';\nimport { MailsService } from './mails.service';\n\n@Module({\n    imports:[MailerModule.forRootAsync({\n        imports: [ConfigModule],\n        useFactory: async (config: ConfigService) => ({\n            envFilePath: '.env', //fichero con las variables globales\n            transport: {\n            host: config.get('EMAIL_HOST'),\n            secure: true,\n            port:465,\n            auth: {\n              user: config.get('EMAIL_USER'),\n              pass: config.get('EMAIL_PASSWORD'),\n            },\n          },\n          defaults: {\n            from: ''\n          },\n          template: {\n            dir: join(__dirname, './templates'),\n            adapter: new HandlebarsAdapter(),\n            options: {\n              strict: false\n            }\n          }\n        }),\n        inject: [ConfigService]\n      })],\n    providers: [MailsService],\n    controllers: [MailsController]\n})\n\nexport class MailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailsService.html":{"url":"injectables/MailsService.html","title":"injectable - MailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mails/mails.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMailForm\n                            \n                            \n                                    Async\n                                sendMailPassword\n                            \n                            \n                                    Async\n                                sendMailWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mails/mails.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailForm(name: string, surname: string, email: string, reason: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    surname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailPassword(email: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailWelcome\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailWelcome(email: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from \"@nestjs-modules/mailer\";\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailsService {\n\n    constructor(private mailerService: MailerService) {}\n\n    async sendMailWelcome(email: string, name: string) {\n\n        await this.mailerService.sendMail({\n            to: email,\n            subject: 'Creacion Usuario Golden Houses',\n            template: '/emailBienvenida',\n            context: {\n                name: name,\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n\n    async sendMailPassword(email: string, name: string) {\n        \n\n        await this.mailerService.sendMail({\n            to: email,\n            subject: 'Recuperar Contraseña Golden Houses',\n            template: '/emailContraseña',\n            context: {\n                name: name\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n\n    async sendMailForm(name: string, surname: string, email: string, reason: string, message: string) {\n        \n\n        await this.mailerService.sendMail({\n            to: \"gldhouses@gmail.com\",\n            subject: 'Formulario de Contacto',\n            template: '/emailForm',\n            context: {\n                name: name,\n                surname: surname,\n                email: email,\n                reason: reason,\n                message: message\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInmuebleDto.html":{"url":"classes/UpdateInmuebleDto.html","title":"class - UpdateInmuebleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/dto/update-imagenes.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateImagenesDto } from './create-imagenes.dto';\n\nexport class UpdateInmuebleDto extends PartialType(CreateImagenesDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInmuebleDto-1.html":{"url":"classes/UpdateInmuebleDto-1.html","title":"class - UpdateInmuebleDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/dto/update-inmueble.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateInmuebleDto } from './create-inmueble.dto';\n\nexport class UpdateInmuebleDto extends PartialType(CreateInmuebleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsuarioDto.html":{"url":"classes/UpdateUsuarioDto.html","title":"class - UpdateUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/dto/update-usuario.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUsuarioDto } from './create-usuarios.dto';\n\nexport class UpdateUsuarioDto extends PartialType(CreateUsuarioDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsuariosController.html":{"url":"controllers/UsuariosController.html","title":"controller - UsuariosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsuariosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                usuarios\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                comprobarContraseña\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findByNombre\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        comprobarContraseña\n                        \n                    \n                \n            \n            \n                \ncomprobarContraseña(usser: UpdateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usser\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(nombreUsuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(correo: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByNombre\n                        \n                    \n                \n            \n            \n                \nfindByNombre(nombreUsuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(nombreUsuario: string, data: UpdateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Put(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Put, ParseIntPipe, HttpStatus, HttpCode, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { CreateUsuarioDto } from './dto/create-usuarios.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\n\n@Controller('usuarios')\nexport class UsuariosController {\n  \n  constructor(private readonly usuariosService: UsuariosService) {}\n\n  \n  @Get()\n  @HttpCode(HttpStatus.OK)\n  findAll() {\n    return this.usuariosService.findAll();\n  }\n\n  @Post('/password')\n  @HttpCode(HttpStatus.OK)\n  comprobarContraseña(@Body() usser: UpdateUsuarioDto) {\n    return this.usuariosService.comprobarPassword(usser);\n  }\n  \n  @Get(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  findByNombre(@Param('nombreUsuario') nombreUsuario: string) {\n    return this.usuariosService.findByNombre(nombreUsuario);\n  }\n\n  @Post('email')\n  @HttpCode(HttpStatus.OK)\n  findByEmail(@Body() correo: any) {\n    return this.usuariosService.findByEmail(correo.correo);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  create(@Body() data: CreateUsuarioDto) {\n    console.log(\"asdfgh\")\n    return this.usuariosService.create(data);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Put(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  update(@Param('nombreUsuario') nombreUsuario: string, @Body() data: UpdateUsuarioDto) {\n    return this.usuariosService.update(nombreUsuario, data);\n  }\n\n  @Delete(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  delete(@Param('nombreUsuario') nombreUsuario: string) {\n    return this.usuariosService.delete(nombreUsuario);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UsuariosEntity.html":{"url":"entities/UsuariosEntity.html","title":"entity - UsuariosEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UsuariosEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/entities/usuarios.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contraseña\n                            \n                            \n                                correo\n                            \n                            \n                                inmuebles\n                            \n                            \n                                nombreUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contraseña\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inmuebles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InmueblesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, inmuebleEntity => inmuebleEntity.vendedor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { InmueblesEntity } from \"src/inmuebles/entities/inmuebles.entity\";\nimport { Column, Entity, OneToMany, PrimaryColumn } from \"typeorm\";\n\n@Entity({name: 'usuarios'})\nexport class UsuariosEntity{\n\n    @PrimaryColumn()\n    nombreUsuario: string;\n\n    @Column({type: 'varchar', length: 100, nullable: false})\n    contraseña: string;\n    \n    @Column({type: 'varchar', nullable: false})\n    correo: string;\n\n    @OneToMany(() => InmueblesEntity, (inmuebleEntity) => inmuebleEntity.vendedor)\n    inmuebles: InmueblesEntity[]; \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuariosModule.html":{"url":"modules/UsuariosModule.html","title":"module - UsuariosModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuariosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsuariosModule\n\n\n\ncluster_UsuariosModule_providers\n\n\n\n\nUsuariosService\n\nUsuariosService\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nUsuariosModule -->\n\nUsuariosService->UsuariosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/usuarios/usuarios.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsuariosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsuariosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { UsuariosController } from './usuarios.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuariosEntity } from './entities/usuarios.entity';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([UsuariosEntity])],\n  providers: [UsuariosService],\n  controllers: [UsuariosController]\n})\nexport class UsuariosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsuariosRepository.html":{"url":"classes/UsuariosRepository.html","title":"class - UsuariosRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsuariosRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { UsuariosEntity } from \"./entities/usuarios.entity\";\n\n@EntityRepository(UsuariosEntity)\nexport class UsuariosRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsuariosService.html":{"url":"injectables/UsuariosService.html","title":"injectable - UsuariosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsuariosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comprobarPassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findByNombre\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioRepository: UsuariosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/usuarios.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        UsuariosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        comprobarPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    comprobarPassword(usser: UpdateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usser\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(correo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByNombre\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByNombre(nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(nombreUsuario: string, data: UpdateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsuarioDto } from './dto/create-usuarios.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\nimport { UsuariosEntity } from './entities/usuarios.entity';\nimport { UsuariosRepository } from './usuarios.repository';\n//import * as bcrypt from 'bcrypt';\nimport * as bcrypt from 'bcryptjs';\n\n\n@Injectable()\nexport class UsuariosService {\n\n    constructor(\n        @InjectRepository(UsuariosEntity) private usuarioRepository: UsuariosRepository\n    ) { }\n\n    async findAll(): Promise {\n        const usuarios = await this.usuarioRepository.createQueryBuilder(\"usuario\").getMany();\n\n        if (!usuarios.length) {\n            throw new NotFoundException({ message: 'No hay usuarios' })\n        }\n        return usuarios;\n    }\n\n    async findByNombre(nombreUsuario: string): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: nombreUsuario\n            }\n        });\n\n        if(!usuario) throw new NotFoundException({ message: 'Usuario Incorrecto' });\n\n        return usuario;\n    }\n\n    async findByEmail(correo: string): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                correo: correo\n            }\n        });\n        \n        if (!usuario) {\n            throw new NotFoundException({ message: 'No hay usuario' })\n        }\n        return usuario;\n    }\n\n    async comprobarPassword(usser: UpdateUsuarioDto): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: usser.nombreUsuario,\n            }\n        });\n\n        if (!usuario) {\n            throw new NotFoundException({ message: 'No hay usuario' })\n        }\n        const isMatch = await bcrypt.compare(usser.contraseña, usuario.contraseña);\n        \n        return isMatch;\n    }\n\n    async create(data: CreateUsuarioDto): Promise {\n\n        const exists = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario: data.nombreUsuario\n            }\n        });\n\n        if(exists) throw new BadRequestException({message: 'Ese usuario ya existe'}) \n        \n        const contraseñaHash = await bcrypt.hash(data.contraseña, 10);\n        data.contraseña = contraseñaHash; \n        const newUsuario = this.usuarioRepository.create(data);\n        await this.usuarioRepository.save(newUsuario);\n        return newUsuario;\n    }\n\n    async update(nombreUsuario: string, data: UpdateUsuarioDto): Promise{\n        const usuario = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario: nombreUsuario\n            }\n        });\n        if(!usuario) throw new BadRequestException({message: 'Ese nombre de usuario ya existe'})\n        \n        if(data.nombreUsuario) {\n            usuario.nombreUsuario = data.nombreUsuario;        \n        }\n\n        if(data.contraseña) {\n            const contraseñaHash = await bcrypt.hash(data.contraseña, 10);\n            \n            data.contraseña = contraseñaHash;\n            \n            usuario.contraseña = data.contraseña;        \n        }\n\n        if(data.correo) {\n            usuario.correo = data.correo;        \n        }\n        await this.usuarioRepository.update({\n            nombreUsuario: nombreUsuario\n        },{\n            nombreUsuario: usuario.nombreUsuario,\n            contraseña: usuario.contraseña,\n            correo: usuario.correo\n        })\n\n        return {message: 'usuario modificado'};\n    }\n\n    async delete(nombreUsuario: string){\n        const usuario = await this.findByNombre(nombreUsuario);\n\n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'})\n        \n        await this.usuarioRepository.delete({\n            nombreUsuario: nombreUsuario\n        })\n     \n        return {message: 'usuario eliminado'};\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_DATABASE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            SERVER_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/dto/create-imagenes.dto.ts\n            \n            class\n            CreateImagenesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/imagenes/dto/update-imagenes.dto.ts\n            \n            class\n            UpdateInmuebleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/entities/imagenes.entity.ts\n            \n            entity\n            ImagenesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/helpers/imagenes.helper.ts\n            \n            variable\n            fileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/helpers/imagenes.helper.ts\n            \n            variable\n            renameImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.controller.ts\n            \n            controller\n            ImagenesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.repository.ts\n            \n            class\n            ImagenesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.service.ts\n            \n            injectable\n            ImagenesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/inmuebles/dto/create-inmueble.dto.ts\n            \n            class\n            CreateInmuebleDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/inmuebles/dto/update-inmueble.dto.ts\n            \n            class\n            UpdateInmuebleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/entities/inmuebles.entity.ts\n            \n            entity\n            InmueblesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.controller.ts\n            \n            controller\n            InmueblesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.repository.ts\n            \n            class\n            InmueblesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.service.ts\n            \n            injectable\n            InmueblesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/mails/mails.controller.ts\n            \n            controller\n            MailsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mails/mails.service.ts\n            \n            injectable\n            MailsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/dto/create-usuarios.dto.ts\n            \n            class\n            CreateUsuarioDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/usuarios/dto/update-usuario.dto.ts\n            \n            class\n            UpdateUsuarioDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/entities/usuarios.entity.ts\n            \n            entity\n            UsuariosEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.controller.ts\n            \n            controller\n            UsuariosController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.repository.ts\n            \n            class\n            UsuariosRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.service.ts\n            \n            injectable\n            UsuariosService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.6.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.4\n        \n            @types/nodemailer : ^6.4.4\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            mysql2 : ^2.3.3\n        \n            nodemailer : ^6.7.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagenesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InmueblesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuariosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ImagenesModule\n\n\n\ncluster_ImagenesModule_providers\n\n\n\ncluster_InmueblesModule\n\n\n\ncluster_InmueblesModule_providers\n\n\n\ncluster_UsuariosModule\n\n\n\ncluster_UsuariosModule_providers\n\n\n\n\nImagenesModule\n\nImagenesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nImagenesModule->AppModule\n\n\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nAppModule -->\n\nInmueblesModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nAppModule -->\n\nUsuariosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\nAppModule -->\n\nMailsService->AppModule\n\n\n\n\n\nImagenesService\n\nImagenesService\n\nImagenesModule -->\n\nImagenesService->ImagenesModule\n\n\n\n\n\nInmueblesService\n\nInmueblesService\n\nInmueblesModule -->\n\nInmueblesService->InmueblesModule\n\n\n\n\n\nUsuariosService\n\nUsuariosService\n\nUsuariosModule -->\n\nUsuariosService->UsuariosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DB_DATABASE   (src/.../constants.ts)\n                        \n                        \n                            DB_HOST   (src/.../constants.ts)\n                        \n                        \n                            DB_PASSWORD   (src/.../constants.ts)\n                        \n                        \n                            DB_PORT   (src/.../constants.ts)\n                        \n                        \n                            DB_USER   (src/.../constants.ts)\n                        \n                        \n                            fileFilter   (src/.../imagenes.helper.ts)\n                        \n                        \n                            renameImage   (src/.../imagenes.helper.ts)\n                        \n                        \n                            SERVER_PORT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_DATABASE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_HOST'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_PASSWORD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_PORT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_USER'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SERVER_PORT'\n                    \n                \n\n\n        \n    \n\n    src/imagenes/helpers/imagenes.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    if(!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)){\n        return callback (new Error('Invalid format type'), false);\n    }\n    callback(null, true);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renameImage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback)=>{\n    const name = file.originalname.split('.')[0];\n    const fileName = file.originalname;\n    const randomName = Array(4)\n    . fill(null)\n    .map(()=> Math.round(Math.random() * 16).toString(16))\n    .join('');\n\n    callback(null, `${name}-${randomName}${fileName}`);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
