var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.179,1,2.149]],["body/controllers/AppController.html",[0,1.914,1,3.487,2,1.546,3,0.365,4,0.317,5,0.27,6,3.614,7,0.831,8,2.066,9,5.076,10,1.546,11,0.029,12,1.057,13,4.306,14,1.669,15,1.308,16,0.452,17,1.057,18,3.118,19,3.614,20,0.365,21,0.085,22,2.319,23,2.319,24,1.669,25,4.306,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,1.273,29,2.149]],["body/modules/AppModule.html",[1,2.881,2,1.334,3,0.214,4,0.186,5,0.159,11,0.03,16,0.534,17,0.621,18,2.91,19,2.124,20,0.214,21,0.05,26,0.016,27,0.016,28,1.441,29,4.121,30,1.149,31,1.688,32,2.124,33,2.124,34,2.124,35,3.195,36,3.195,37,3.195,38,3.195,39,2.667,40,2.001,41,1.363,42,1.363,43,2.53,44,2.197,45,2.603,46,3.696,47,3.716,48,3.119,49,4.073,50,1.856,51,1.656,52,1.149,53,2.53,54,2.53,55,2.53,56,1.496,57,2.53,58,1.249,59,2.53,60,2.53,61,2.124,62,2.431,63,1.656,64,2.124,65,2.124,66,1.496,67,1.249,68,2.53,69,2.53,70,2.53,71,3.716,72,2.124,73,2.124,74,2.124,75,2.124,76,3.696,77,2.431,78,2.124,79,2.53,80,1.856,81,3.716,82,2.53,83,2.53,84,2.53,85,2.53,86,2.53,87,2.53,88,2.53,89,2.53,90,2.53,91,2.124,92,0.574,93,2.53,94,2.124,95,2.53,96,2.53,97,2.53,98,2.53,99,2.53,100,2.53,101,2.53,102,2.53,103,2.53,104,1.496,105,2.124,106,2.53,107,2.53,108,2.001,109,2.53,110,2.53,111,2.53,112,2.124]],["title/injectables/AppService.html",[18,1.769,113,1.179]],["body/injectables/AppService.html",[3,0.381,4,0.33,5,0.282,7,0.867,8,2.122,9,5.153,11,0.029,12,1.104,14,1.743,15,1.343,16,0.381,17,1.104,18,2.947,20,0.381,21,0.089,24,1.743,26,0.024,27,0.024,113,1.965,114,2.421,115,3.773,116,4.495,117,4.495,118,4.495]],["title/classes/CreateImagenesDto.html",[21,0.065,119,1.941]],["body/classes/CreateImagenesDto.html",[3,0.357,4,0.309,5,0.264,7,0.812,10,1.887,11,0.029,12,1.29,15,1.473,16,0.357,20,0.357,21,0.104,26,0.023,27,0.023,67,2.828,92,1.193,119,3.106,120,1.632,121,4.808,122,3.087,123,2.387,124,3.086,125,3.854,126,4.209,127,4.209,128,4.202,129,4.202,130,2.754]],["title/classes/CreateInmuebleDto.html",[21,0.065,131,1.769]],["body/classes/CreateInmuebleDto.html",[3,0.229,4,0.199,5,0.169,7,0.521,10,2.134,11,0.029,12,1.459,15,1.481,16,0.387,20,0.229,21,0.077,23,3.556,26,0.017,27,0.017,92,1.349,120,1.047,123,1.77,125,3.891,128,4.425,129,4.054,130,1.767,131,2.099,132,5.063,133,1.981,134,3.352,135,3.352,136,2.991,137,3.836,138,3.352,139,3.352,140,3.352,141,3.352,142,2.991,143,2.879,144,5.004,145,2.701,146,2.701,147,2.701,148,2.701,149,2.701,150,2.701,151,2.701,152,2.701,153,2.701,154,5.306,155,5.306,156,1.333,157,1.981,158,1.767,159,1.047,160,1.981]],["title/classes/CreateUsuarioDto.html",[21,0.065,156,1.621]],["body/classes/CreateUsuarioDto.html",[3,0.333,4,0.289,5,0.246,7,0.758,10,1.993,11,0.029,12,1.362,15,1.519,16,0.333,20,0.333,21,0.1,26,0.022,27,0.022,92,1.26,120,1.523,123,2.285,125,4.07,128,4.291,129,4.291,130,2.571,156,2.483,157,4.291,161,3.298,162,3.631,163,3.631,164,3.281,165,3.929,166,3.929,167,3.929,168,3.929,169,3.929,170,3.929,171,3.929]],["title/controllers/ImagenesController.html",[0,1.179,56,1.941]],["body/controllers/ImagenesController.html",[0,1.001,2,1.001,3,0.236,4,0.205,5,0.175,7,0.538,8,1.545,10,1.671,11,0.029,12,1.142,14,1.804,15,1.142,16,0.474,17,0.684,20,0.236,21,0.055,22,1.502,23,1.502,24,1.804,26,0.018,27,0.018,56,2.357,58,2.297,67,2.506,92,1.056,124,1.502,143,2.758,172,2.34,173,1.824,174,2.045,175,2.956,176,3.345,177,3.986,178,3.345,179,2.34,180,4.689,181,3.986,182,2.788,183,2.113,184,1.95,185,2.113,186,3.724,187,2.788,188,3.986,189,2.788,190,2.893,191,2.34,192,4.261,193,3.412,194,2.788,195,2.788,196,1.648,197,1.824,198,1.648,199,2.788,200,1.824,201,1.824,202,2.045,203,2.34,204,2.788,205,2.34,206,3.345,207,2.34,208,2.788,209,2.788,210,2.34,211,2.34,212,3.986,213,2.788,214,3.412,215,2.923,216,2.788,217,2.34,218,2.788,219,2.788,220,2.788,221,2.34,222,2.788,223,2.788,224,2.788,225,2.788,226,2.506,227,2.788,228,2.788,229,1.824,230,2.788,231,2.788,232,2.788,233,2.788]],["title/entities/ImagenesEntity.html",[234,1.621,235,1.621]],["body/entities/ImagenesEntity.html",[3,0.289,4,0.25,5,0.213,7,0.657,10,1.987,11,0.029,12,1.359,15,1.359,16,0.388,20,0.289,21,0.067,26,0.02,27,0.02,67,2.554,92,1.256,104,2.013,108,2.981,123,2.08,124,2.787,143,2.26,174,2.497,190,2.787,229,3.779,234,1.681,235,2.26,236,2.858,237,4.059,238,4.059,239,4.059,240,3.405,241,4.343,242,3.405,243,2.146,244,2.858,245,3.844,246,4.58,247,3.844,248,4.343,249,3.844,250,2.858,251,3.405,252,3.405,253,3.405,254,2.497,255,2.858,256,3.844,257,1.427,258,2.497,259,2.858]],["title/modules/ImagenesModule.html",[28,1.273,35,1.941]],["body/modules/ImagenesModule.html",[2,1.823,3,0.338,4,0.293,5,0.25,11,0.029,16,0.526,17,0.978,20,0.338,21,0.079,26,0.022,27,0.022,28,1.968,30,1.81,31,2.306,35,3.672,40,2.734,41,2.146,42,2.146,44,3.001,51,2.607,52,1.81,56,3.303,58,3.065,217,3.344,235,1.967,243,1.545,260,3.344,261,3.344,262,3.985,263,2.923,264,2.923,265,3.985,266,3.985]],["title/classes/ImagenesRepository.html",[21,0.065,267,2.149]],["body/classes/ImagenesRepository.html",[3,0.397,4,0.344,5,0.293,11,0.028,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.816,235,2.311,257,1.963,264,3.434,267,3.67,268,3.93,269,3.021,270,3.929,271,3.434,272,4.683]],["title/injectables/ImagenesService.html",[58,1.621,113,1.179]],["body/injectables/ImagenesService.html",[3,0.215,4,0.187,5,0.234,7,0.49,8,1.445,11,0.03,12,1.194,14,1.712,16,0.504,17,0.624,20,0.215,21,0.05,24,1.445,26,0.016,27,0.016,52,1.154,58,1.84,66,1.503,67,2.179,92,1.002,113,1.339,114,1.369,119,1.503,124,1.369,143,2.671,175,2.889,176,3.129,178,3.129,179,3.129,180,3.705,183,2.209,184,2.039,185,2.209,190,2.789,191,3.129,192,4.542,193,3.238,196,2.204,226,2.619,229,2.889,235,1.255,243,0.985,257,1.065,263,1.864,264,1.864,267,3.541,273,2.133,274,3.728,275,2.439,276,2.542,277,3.705,278,2.875,279,2.542,280,2.542,281,3.728,282,2.542,283,2.542,284,1.864,285,1.864,286,2.542,287,2.542,288,2.542,289,2.133,290,1.503,291,2.133,292,2.542,293,2.542,294,2.734,295,2.133,296,3.541,297,3.129,298,2.133,299,1.864,300,1.369,301,1.864,302,1.864,303,1.864,304,2.542,305,2.542,306,2.542,307,3.728,308,2.542,309,2.542,310,2.542,311,2.542,312,2.542,313,2.542,314,2.542,315,2.542,316,2.542,317,2.542]],["title/controllers/InmueblesController.html",[0,1.179,318,2.149]],["body/controllers/InmueblesController.html",[0,0.628,2,0.628,3,0.148,4,0.129,5,0.11,7,0.338,8,1.085,10,1.827,11,0.029,12,1.249,14,1.972,15,1.526,16,0.339,17,0.43,20,0.148,21,0.035,22,0.942,23,0.942,24,1.972,26,0.012,27,0.012,92,1.155,131,2.153,136,2.289,142,3.051,143,3.259,173,1.145,183,2.31,184,2.132,185,2.31,190,2.512,197,2.289,198,1.034,200,1.145,201,1.145,202,1.283,205,1.468,206,1.468,207,1.468,290,1.034,318,1.831,319,1.468,320,1.283,321,1.381,322,2.349,323,1.831,324,2.349,325,2.349,326,2.349,327,2.799,328,1.831,329,1.75,330,3.204,331,3.355,332,1.75,333,1.75,334,2.053,335,1.468,336,2.936,337,2.936,338,2.349,339,2.936,340,3.355,341,3.355,342,3.355,343,4.402,344,4.891,345,1.75,346,1.75,347,1.468,348,4.269,349,1.75,350,1.75,351,1.468,352,1.75,353,1.75,354,1.468,355,1.75,356,1.75,357,1.468,358,2.616,359,1.75,360,1.75,361,1.75,362,1.75,363,1.75,364,1.468,365,1.973,366,1.75,367,1.75,368,1.468,369,2.936,370,1.468,371,1.468,372,1.468,373,1.468,374,1.75,375,1.884,376,1.468,377,2.053,378,1.145,379,1.75,380,1.75,381,4.109,382,1.75,383,3.498,384,2.799,385,1.75,386,1.75,387,1.75,388,1.75,389,1.75,390,1.75,391,1.75,392,1.75,393,1.75,394,1.75,395,1.75,396,1.75,397,1.75,398,1.75,399,1.75,400,1.75,401,1.75,402,1.75,403,1.75,404,1.75,405,1.75,406,1.75,407,1.75,408,1.75,409,1.75,410,1.75,411,2.349,412,1.75,413,1.468,414,1.75,415,1.75,416,1.75,417,1.75,418,1.75,419,1.75,420,1.75,421,1.75]],["title/entities/InmueblesEntity.html",[234,1.621,243,1.273]],["body/entities/InmueblesEntity.html",[3,0.195,4,0.17,5,0.145,7,0.445,10,2.119,11,0.029,12,1.449,15,1.369,16,0.353,20,0.195,21,0.046,26,0.015,27,0.015,92,1.34,104,1.364,108,3.342,123,1.576,134,3.058,135,3.058,136,2.728,137,2.911,138,3.058,139,3.058,140,3.058,141,3.058,142,2.728,143,2.868,159,2.025,174,3.058,190,2.246,193,2.544,234,1.139,235,2.289,237,4.55,238,4.089,239,4.55,241,3.499,243,1.345,244,1.936,247,2.911,248,3.499,249,2.911,250,1.936,254,1.692,255,1.936,256,2.911,257,0.967,258,1.692,259,1.936,320,1.692,334,3.058,422,1.936,423,5.576,424,2.307,425,4.68,426,5.576,427,2.307,428,2.307,429,2.307,430,1.936,431,3.469,432,2.307,433,2.307,434,2.307,435,2.307,436,2.307,437,2.307,438,3.469,439,2.307,440,2.307,441,2.307,442,2.911]],["title/modules/InmueblesModule.html",[28,1.273,36,1.941]],["body/modules/InmueblesModule.html",[2,1.823,3,0.338,4,0.293,5,0.25,11,0.029,16,0.526,17,0.978,20,0.338,21,0.079,26,0.022,27,0.022,28,1.968,30,1.81,31,2.306,36,3.672,40,2.734,41,2.146,42,2.146,44,3.001,51,2.607,52,1.81,159,1.545,160,2.923,243,1.545,318,3.655,375,3.345,376,3.344,443,3.344,444,3.344,445,3.985,446,2.923,447,3.985,448,3.985]],["title/classes/InmueblesRepository.html",[21,0.065,278,1.941]],["body/classes/InmueblesRepository.html",[3,0.397,4,0.344,5,0.293,11,0.028,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.816,243,1.816,257,1.963,269,3.021,270,3.929,271,3.434,278,3.316,446,3.434,449,3.93,450,4.683]],["title/injectables/InmueblesService.html",[113,1.179,375,1.769]],["body/injectables/InmueblesService.html",[3,0.106,4,0.092,5,0.078,7,0.24,8,0.82,11,0.03,12,1.135,14,1.72,15,1.44,16,0.392,17,0.306,20,0.106,21,0.025,24,1.72,26,0.009,27,0.009,52,0.566,92,1.049,113,0.76,114,0.671,131,1.75,134,1.552,135,0.914,136,2.381,138,1.552,139,1.552,140,1.552,141,2.383,142,3.025,143,3.165,159,0.483,160,0.914,164,2.492,175,2.895,183,2.1,184,1.938,185,2.1,186,3.858,190,2.78,196,0.737,198,1.251,226,2.721,229,3.442,243,0.483,257,0.523,275,1.384,277,1.776,278,1.921,284,0.914,285,0.914,289,1.046,290,0.737,294,1.552,295,1.046,296,3.305,297,2.314,298,1.776,299,2.383,300,1.75,301,2.383,302,2.383,303,2.383,321,1.044,322,1.776,323,1.384,324,1.776,325,1.776,326,1.776,328,1.384,330,2.587,334,0.914,335,1.776,336,3.053,337,2.726,338,2.314,339,2.726,340,2.314,341,2.314,342,2.726,343,3.538,344,4.415,347,1.776,348,3.723,351,1.776,354,1.776,357,1.776,358,2.126,364,1.776,365,1.603,375,1.14,377,1.552,378,0.816,446,0.914,451,1.046,452,1.247,453,2.314,454,1.921,455,1.247,456,2.116,457,1.247,458,2.116,459,1.247,460,1.247,461,1.247,462,1.247,463,1.247,464,1.247,465,1.247,466,1.046,467,1.247,468,1.247,469,1.247,470,1.247,471,1.247,472,1.247,473,1.046,474,2.116,475,3.954,476,2.757,477,2.757,478,2.116,479,1.247,480,1.247,481,1.247,482,1.247,483,1.247,484,1.247,485,1.247,486,1.247,487,1.247,488,1.247,489,1.247,490,1.247,491,1.247,492,1.247,493,1.247,494,1.247,495,1.247,496,1.247,497,1.247,498,1.247,499,1.247,500,1.247,501,1.247,502,1.247,503,2.314,504,2.116,505,1.776,506,2.116,507,1.247,508,1.247,509,1.247,510,1.247,511,2.116,512,1.247,513,1.247,514,2.116,515,1.247,516,1.247,517,2.116,518,1.247,519,1.247,520,2.116,521,1.247,522,1.247,523,2.116,524,1.247,525,1.247,526,2.116,527,1.247,528,1.247,529,2.116,530,1.247,531,1.247,532,2.116,533,1.247,534,1.247,535,3.249,536,1.247]],["title/controllers/MailsController.html",[0,1.179,45,1.941]],["body/controllers/MailsController.html",[0,1.027,2,1.027,3,0.242,4,0.21,5,0.179,7,0.552,8,1.573,10,1.694,11,0.029,12,1.158,14,1.829,15,1.629,16,0.344,17,0.702,20,0.242,21,0.057,22,1.54,23,1.54,24,1.829,26,0.018,27,0.018,39,2.329,45,2.399,92,1.071,173,1.871,175,2.973,183,2.143,184,2.638,185,2.143,196,2.789,197,1.871,200,1.871,201,1.871,202,2.097,226,2.541,537,2.399,538,2.859,539,4.058,540,4.058,541,4.058,542,2.859,543,4.31,544,4.97,545,4.31,546,3.766,547,4.058,548,2.859,549,2.859,550,4.058,551,2.859,552,2.859,553,4.058,554,2.859,555,2.399,556,2.859,557,2.859,558,4.058,559,2.859,560,2.859,561,2.859,562,2.859,563,2.859,564,2.859,565,2.859,566,2.859,567,2.859]],["title/modules/MailsModule.html",[28,1.273,37,1.941]],["body/modules/MailsModule.html",[2,1.592,3,0.275,4,0.239,5,0.203,11,0.03,16,0.518,17,0.797,20,0.275,21,0.064,26,0.02,27,0.02,28,1.719,30,1.475,31,2.014,37,3.467,39,2.895,40,2.389,41,1.749,42,1.749,44,2.622,45,2.986,46,2.725,48,3.722,49,4.239,50,2.382,61,2.725,62,2.902,63,2.125,64,3.722,65,2.725,66,1.92,67,1.603,72,2.725,73,2.725,74,2.725,75,2.725,76,2.725,77,2.125,78,2.725,80,2.382,91,2.725,94,2.725,108,1.749,112,2.725,175,1.603,300,1.749,555,2.725,568,3.247,569,3.247,570,3.247,571,3.247,572,3.247,573,3.247,574,3.247,575,3.247,576,3.247,577,3.247,578,3.247,579,3.247,580,3.247,581,3.247,582,3.247,583,3.247,584,3.247,585,2.725,586,3.247,587,3.247,588,3.247,589,3.247,590,3.247,591,3.247]],["title/injectables/MailsService.html",[39,1.621,113,1.179]],["body/injectables/MailsService.html",[3,0.213,4,0.185,5,0.157,7,0.485,8,1.434,11,0.029,12,1.187,14,1.701,15,1.61,16,0.313,17,0.617,20,0.213,21,0.05,22,1.354,26,0.016,27,0.016,39,1.825,62,1.644,63,1.644,67,2.165,92,1.098,105,3.681,113,1.328,114,1.354,124,2.363,162,1.644,175,2.881,183,2.197,184,2.653,185,2.197,226,2.363,275,1.644,358,1.644,543,4.326,544,4.898,545,4.326,546,3.78,585,3.681,592,2.109,593,3.697,594,3.697,595,3.697,596,2.513,597,5.391,598,2.513,599,3.697,600,2.513,601,3.697,602,2.513,603,3.697,604,2.513,605,4.386,606,4.386,607,2.513,608,3.697,609,3.697,610,2.513,611,4.386,612,4.386,613,4.386,614,4.386,615,4.386,616,4.386,617,2.513,618,2.513,619,2.513,620,2.513,621,2.109,622,2.513,623,2.513]],["title/classes/UpdateInmuebleDto.html",[21,0.065,365,1.621]],["body/classes/UpdateInmuebleDto.html",[3,0.397,4,0.344,5,0.293,11,0.029,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,119,2.768,120,1.816,122,3.434,269,2.522,291,3.93,321,2.311,365,2.768,624,3.93,625,3.434,626,3.064,627,3.064,628,4.683]],["title/classes/UpdateInmuebleDto-1.html",[21,0.054,365,1.357,629,2.749]],["body/classes/UpdateInmuebleDto-1.html",[3,0.397,4,0.344,5,0.293,11,0.029,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.816,131,2.522,133,3.434,269,2.522,321,2.311,365,2.768,377,3.434,625,3.434,626,3.064,627,3.064,630,3.93,631,4.683]],["title/classes/UpdateUsuarioDto.html",[21,0.065,632,1.941]],["body/classes/UpdateUsuarioDto.html",[3,0.397,4,0.344,5,0.293,11,0.029,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.816,156,2.311,158,3.064,269,2.522,321,2.311,625,3.434,626,3.064,627,3.064,632,3.316,633,3.93,634,3.93,635,4.683]],["title/controllers/UsuariosController.html",[0,1.179,636,2.149]],["body/controllers/UsuariosController.html",[0,0.881,2,0.881,3,0.208,4,0.18,5,0.154,7,0.473,8,1.408,10,1.986,11,0.03,12,1.358,14,2.144,15,1.424,16,0.405,17,0.602,20,0.208,21,0.049,22,1.321,23,1.321,24,2.144,26,0.016,27,0.016,92,1.213,156,2.359,158,1.605,163,2.376,164,3.159,173,1.605,183,2.427,184,2.24,185,2.427,197,2.376,198,2.556,200,1.605,201,2.376,290,1.45,321,1.793,323,3.128,328,2.376,330,3.496,331,4.012,368,2.059,369,2.059,370,2.059,371,2.059,372,2.059,373,2.059,378,1.605,381,4.485,411,3.048,413,2.059,632,3.269,636,2.376,637,2.059,638,1.799,639,3.632,640,3.048,641,3.048,642,2.453,643,2.453,644,2.453,645,3.048,646,2.059,647,2.453,648,2.453,649,2.059,650,2.453,651,2.453,652,2.453,653,2.453,654,2.059,655,2.453,656,2.453,657,2.059,658,2.453,659,2.453,660,2.059,661,2.453,662,2.453,663,2.329,664,2.059,665,2.059,666,2.453,667,2.453,668,2.453,669,2.453,670,2.453,671,2.453,672,2.453,673,2.453,674,2.453,675,2.453,676,2.453,677,2.453,678,2.453,679,2.453,680,2.453,681,2.453,682,2.453,683,2.453,684,2.453]],["title/entities/UsuariosEntity.html",[159,1.273,234,1.621]],["body/entities/UsuariosEntity.html",[3,0.299,4,0.259,5,0.221,7,0.68,10,2.015,11,0.029,12,1.377,15,1.474,16,0.397,20,0.299,21,0.07,26,0.021,27,0.021,92,1.273,104,2.082,108,3.022,123,2.128,159,1.816,162,3.444,163,3.444,164,3.112,234,1.739,237,4.115,238,4.115,239,4.115,243,2.175,245,3.932,254,2.583,257,1.477,258,2.583,263,2.583,320,3.86,425,3.932,430,2.956,442,3.932,638,2.583,685,2.956,686,4.685,687,3.522,688,3.522,689,4.685,690,3.522,691,5.264,692,3.522]],["title/modules/UsuariosModule.html",[28,1.273,38,1.941]],["body/modules/UsuariosModule.html",[2,1.844,3,0.344,4,0.298,5,0.254,11,0.029,16,0.518,17,0.996,20,0.344,21,0.08,26,0.023,27,0.023,28,1.991,30,1.843,31,2.332,38,3.689,40,2.765,41,2.185,42,2.185,44,3.035,51,2.654,52,1.843,159,1.573,636,3.686,663,3.361,664,3.405,693,3.405,694,3.405,695,4.057,696,4.057,697,2.975,698,4.057]],["title/classes/UsuariosRepository.html",[21,0.065,454,1.941]],["body/classes/UsuariosRepository.html",[3,0.397,4,0.344,5,0.293,11,0.028,16,0.475,20,0.397,21,0.093,26,0.025,27,0.025,120,1.816,159,1.816,257,1.963,269,3.021,270,3.929,271,3.434,454,3.316,697,3.434,699,3.93,700,4.683]],["title/injectables/UsuariosService.html",[113,1.179,663,1.769]],["body/injectables/UsuariosService.html",[3,0.143,4,0.124,5,0.105,7,0.324,8,1.051,11,0.03,12,1.231,14,1.868,15,1.359,16,0.425,17,0.413,20,0.143,21,0.033,24,1.868,26,0.012,27,0.012,52,0.764,92,1.094,113,0.973,114,0.906,156,1.928,158,1.1,159,0.652,162,1.1,163,2.556,164,3.373,175,3,183,2.188,184,2.02,185,2.188,186,4.059,196,0.994,198,1.603,226,3.03,275,1.774,284,1.233,285,1.233,290,0.994,294,1.233,296,3.554,299,3.534,300,2.595,301,2.498,302,2.498,303,2.498,321,1.338,323,2.556,328,1.774,330,2.556,358,3.858,378,1.1,453,2.275,454,2.31,466,3.596,473,1.411,503,3.596,505,2.859,546,3.143,621,1.411,632,2.848,638,2.498,640,2.275,641,2.275,645,1.411,646,2.275,649,2.275,654,2.275,657,2.275,660,2.275,663,1.46,665,1.411,697,1.233,701,1.411,702,2.711,703,1.682,704,1.682,705,2.711,706,1.682,707,1.682,708,1.682,709,1.682,710,1.682,711,1.682,712,1.682,713,1.682,714,3.406,715,1.411,716,1.682,717,1.682,718,3.406,719,1.682,720,1.682,721,2.711,722,1.682,723,4.285,724,1.682,725,3.406,726,1.682,727,2.711,728,3.907,729,2.711,730,2.711,731,3.907,732,2.711,733,1.682,734,1.682,735,1.682,736,1.682,737,2.711,738,1.682,739,1.682,740,2.711,741,2.711,742,1.682,743,1.682,744,1.682,745,1.682]],["title/coverage.html",[746,3.278]],["body/coverage.html",[0,1.905,1,1.767,5,0.169,6,2.267,11,0.029,18,1.455,21,0.118,26,0.017,27,0.017,39,1.333,45,1.597,56,1.597,58,1.333,92,0.613,113,1.905,115,2.267,119,1.597,121,2.267,122,2.858,131,1.455,132,2.267,133,2.858,156,1.333,157,1.981,159,1.047,161,2.267,172,2.267,214,1.981,215,1.981,234,2.256,235,1.333,236,2.267,243,1.047,267,1.767,268,2.267,273,2.267,278,1.597,300,1.455,318,1.767,319,2.267,365,1.923,375,1.455,422,2.267,449,2.267,451,2.267,454,1.597,537,2.267,592,2.267,624,2.267,630,2.267,632,1.597,633,2.267,634,2.267,636,1.767,637,2.267,663,1.455,685,2.267,699,2.267,701,2.267,746,1.981,747,2.701,748,2.701,749,2.701,750,6.651,751,3.896,752,4.639,753,5.833,754,2.267,755,6.425,756,2.267,757,2.267,758,2.267,759,2.267,760,2.267,761,2.701,762,3.27,763,4.571,764,3.896,765,3.896,766,3.896,767,2.267,768,2.701,769,2.267,770,2.701,771,2.701,772,2.701]],["title/dependencies.html",[31,1.792,773,2.307]],["body/dependencies.html",[11,0.03,17,0.971,21,0.1,26,0.022,27,0.022,31,1.797,50,2.902,52,1.797,62,2.589,63,2.589,130,2.589,210,3.321,211,4.241,257,1.659,626,2.589,627,2.589,715,3.321,774,3.957,775,5.568,776,3.957,777,3.957,778,3.957,779,3.957,780,3.957,781,3.957,782,3.957,783,3.957,784,3.957,785,3.957,786,3.957,787,3.957,788,3.957,789,3.957,790,3.957,791,3.957,792,3.957,793,3.957,794,3.957,795,3.957,796,3.957,797,3.957,798,3.957,799,3.957,800,3.957,801,3.957,802,3.957,803,3.957,804,3.957]],["title/miscellaneous/functions.html",[805,1.799,806,3.312]],["body/miscellaneous/functions.html",[7,0.972,11,0.026,26,0.026,27,0.026,767,4.23,769,5.197,805,3.298,806,4.23,807,5.04]],["title/index.html",[7,0.53,808,2.749,809,2.749]],["body/index.html",[4,0.269,11,0.029,26,0.021,27,0.021,66,2.164,270,2.395,746,2.684,810,3.66,811,3.66,812,4.805,813,3.66,814,3.66,815,3.66,816,3.66,817,3.66,818,3.66,819,3.072,820,5.364,821,3.66,822,3.66,823,3.66,824,6.187,825,3.66,826,3.66,827,3.66,828,6.071,829,3.66,830,3.66,831,4.805,832,3.66,833,3.66,834,3.66,835,3.66,836,4.805,837,4.805,838,3.66,839,3.66,840,3.66,841,4.805,842,4.805,843,3.66,844,3.66,845,3.66,846,3.66,847,3.66,848,3.072,849,3.66,850,3.66,851,3.66,852,3.66,853,3.66,854,3.66,855,3.66,856,3.66,857,3.66,858,3.072,859,3.66,860,3.66,861,3.66,862,3.66,863,3.66,864,3.66,865,3.072]],["title/modules.html",[30,2.03]],["body/modules.html",[11,0.025,26,0.025,27,0.025,29,3.051,30,2.118,35,2.757,36,2.757,37,2.757,38,2.757,848,5.335,866,6.357,867,6.357,868,6.357]],["title/overview.html",[869,3.751]],["body/overview.html",[2,1.341,11,0.029,18,2.917,26,0.021,27,0.021,29,4.306,30,1.696,31,2.211,32,3.133,33,3.133,34,3.133,35,3.519,36,3.519,37,3.519,38,3.519,39,2.833,40,2.622,41,2.011,42,2.011,58,2.673,104,2.207,114,2.011,120,1.447,221,4.545,260,3.133,261,3.133,375,2.917,443,3.133,444,3.133,663,2.917,693,3.133,694,3.133,869,3.133,870,3.733,871,3.733]],["title/properties.html",[123,1.792,773,2.307]],["body/properties.html",[11,0.029,26,0.026,27,0.026,123,2.259,819,4.174,858,4.174,865,4.174,872,4.973,873,4.973,874,4.973]],["title/miscellaneous/variables.html",[77,2.582,805,1.799]],["body/miscellaneous/variables.html",[5,0.284,7,0.647,11,0.03,15,1.454,24,1.3,26,0.02,27,0.02,66,1.983,77,2.195,80,2.46,92,1.374,108,1.807,124,1.807,184,1.9,203,3.805,214,3.325,215,3.325,296,3.36,300,1.807,752,2.815,754,4.31,756,4.31,757,4.31,758,4.31,759,4.31,760,4.31,762,2.815,805,2.195,875,5.921,876,4.533,877,6.157,878,6.157,879,5.135,880,3.354,881,3.354,882,3.354,883,4.533,884,3.354,885,3.354,886,3.354,887,3.354,888,3.354,889,3.354,890,3.354,891,3.354,892,3.354]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":873,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":629,"title":{"classes/UpdateInmuebleDto-1.html":{}},"body":{}}],["1.0.1",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":730,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["100",{"_index":686,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["15",{"_index":426,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["16).tostring(16",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.1",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":870,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":221,"title":{},"body":{"controllers/ImagenesController.html":{},"overview.html":{}}}],["5.2.1",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["6.7.5",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":871,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailsService.html":{}}}],["adapter",{"_index":589,"title":{},"body":{"modules/MailsModule.html":{}}}],["amazing",{"_index":849,"title":{},"body":{"index.html":{}}}],["app",{"_index":826,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":818,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":193,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{}}}],["array(4",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":175,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["atributos",{"_index":171,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["attachments",{"_index":612,"title":{},"body":{"injectables/MailsService.html":{}}}],["auth",{"_index":579,"title":{},"body":{"modules/MailsModule.html":{}}}],["author",{"_index":858,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":226,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["backers",{"_index":850,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":284,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["badrequestexception({message",{"_index":301,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["banos",{"_index":340,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["banos=0",{"_index":494,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["baños",{"_index":134,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["bcrypt",{"_index":714,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.compare(usser.contraseña",{"_index":722,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.hash(data.contraseña",{"_index":729,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcryptjs",{"_index":715,"title":{},"body":{"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["between",{"_index":468,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["between(preciomin",{"_index":496,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["between(superficiemin",{"_index":499,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["body",{"_index":197,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["bootstrap",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":868,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":866,"title":{},"body":{"modules.html":{}}}],["building",{"_index":813,"title":{},"body":{"index.html":{}}}],["callback",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cascade",{"_index":248,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["cascade'})@joincolumn({name",{"_index":250,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["cid",{"_index":615,"title":{},"body":{"injectables/MailsService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":120,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_imagenesmodule",{"_index":260,"title":{},"body":{"modules/ImagenesModule.html":{},"overview.html":{}}}],["cluster_imagenesmodule_providers",{"_index":261,"title":{},"body":{"modules/ImagenesModule.html":{},"overview.html":{}}}],["cluster_inmueblesmodule",{"_index":443,"title":{},"body":{"modules/InmueblesModule.html":{},"overview.html":{}}}],["cluster_inmueblesmodule_providers",{"_index":444,"title":{},"body":{"modules/InmueblesModule.html":{},"overview.html":{}}}],["cluster_mailsmodule",{"_index":568,"title":{},"body":{"modules/MailsModule.html":{}}}],["cluster_mailsmodule_providers",{"_index":569,"title":{},"body":{"modules/MailsModule.html":{}}}],["cluster_usuariosmodule",{"_index":693,"title":{},"body":{"modules/UsuariosModule.html":{},"overview.html":{}}}],["cluster_usuariosmodule_providers",{"_index":694,"title":{},"body":{"modules/UsuariosModule.html":{},"overview.html":{}}}],["column",{"_index":254,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["column({type",{"_index":237,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["comprobarcontraseña",{"_index":639,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarcontraseña(@body",{"_index":669,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarcontraseña(usser",{"_index":642,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarpassword",{"_index":702,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["comprobarpassword(usser",{"_index":705,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["con",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["config",{"_index":574,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_host",{"_index":576,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_password",{"_index":583,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_user",{"_index":581,"title":{},"body":{"modules/MailsModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["configmodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["configservice.get('db_database",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_host",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_user",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(ubicacion",{"_index":479,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["const",{"_index":296,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":275,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["constructor(imagenesrepository",{"_index":276,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["constructor(inmueblerepository",{"_index":452,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["constructor(mailerservice",{"_index":596,"title":{},"body":{"injectables/MailsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{}}}],["constructor(usuariorepository",{"_index":703,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["contacto",{"_index":622,"title":{},"body":{"injectables/MailsService.html":{}}}],["context",{"_index":611,"title":{},"body":{"injectables/MailsService.html":{}}}],["contraseña",{"_index":162,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"injectables/MailsService.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["contraseñahash",{"_index":728,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["controller('imagenes",{"_index":218,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["controller('inmuebles",{"_index":379,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["controller('mails",{"_index":556,"title":{},"body":{"controllers/MailsController.html":{}}}],["controller('usuarios",{"_index":666,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["correo",{"_index":163,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["coverage",{"_index":746,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creacion",{"_index":607,"title":{},"body":{"injectables/MailsService.html":{}}}],["crear",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["create",{"_index":321,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["create(@body",{"_index":677,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["create(@param('vendedor",{"_index":414,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["create(data",{"_index":646,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["create(nombreusuario",{"_index":456,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["create(vendedor",{"_index":329,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["createimagenesdto",{"_index":119,"title":{"classes/CreateImagenesDto.html":{}},"body":{"classes/CreateImagenesDto.html":{},"injectables/ImagenesService.html":{},"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["createinmuebledto",{"_index":131,"title":{"classes/CreateInmuebleDto.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["createreadstream",{"_index":286,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["createreadstream(join(process.cwd",{"_index":315,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["createusuariodto",{"_index":156,"title":{"classes/CreateUsuarioDto.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["data",{"_index":330,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["data.baños",{"_index":512,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.contraseña",{"_index":731,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.correo",{"_index":740,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.descripcion",{"_index":515,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.habitaciones",{"_index":518,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.nombreusuario",{"_index":725,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.precio",{"_index":521,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.superficie",{"_index":524,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.tipoinmueble",{"_index":527,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.tipooperacion",{"_index":530,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.ubicacion",{"_index":533,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["database",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["db_database",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_host",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_password",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_port",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_user",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":621,"title":{},"body":{"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{}}}],["default",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":584,"title":{},"body":{"modules/MailsModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["del",{"_index":228,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["delete",{"_index":198,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["delete('/:id",{"_index":419,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["delete('/:id')@httpcode(httpstatus.ok",{"_index":362,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["delete(':nombreusuario",{"_index":682,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(':nombreusuario')@httpcode(httpstatus.ok",{"_index":650,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(@param('nombreusuario",{"_index":683,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(id",{"_index":458,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["delete(nombreusuario",{"_index":649,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descripcion",{"_index":135,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["description",{"_index":819,"title":{},"body":{"index.html":{},"properties.html":{}}}],["destination",{"_index":223,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["development",{"_index":827,"title":{},"body":{"index.html":{}}}],["dir",{"_index":586,"title":{},"body":{"modules/MailsModule.html":{}}}],["diskstorage",{"_index":212,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["documentation",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":290,"title":{},"body":{"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["dto/update",{"_index":378,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["e2e",{"_index":838,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":814,"title":{},"body":{"index.html":{}}}],["el",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["eliminado",{"_index":745,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["email",{"_index":544,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["emailbienvenida",{"_index":610,"title":{},"body":{"injectables/MailsService.html":{}}}],["emailcontraseña",{"_index":618,"title":{},"body":{"injectables/MailsService.html":{}}}],["emailform",{"_index":623,"title":{},"body":{"injectables/MailsService.html":{}}}],["en",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["entities",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"overview.html":{}}}],["entities/imagenes.entity",{"_index":264,"title":{},"body":{"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{}}}],["entities/inmuebles.entity",{"_index":446,"title":{},"body":{"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{}}}],["entities/usuarios.entity",{"_index":697,"title":{},"body":{"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["entity",{"_index":234,"title":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["entity({name",{"_index":258,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["entityrepository",{"_index":271,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UsuariosRepository.html":{}}}],["entityrepository(imagenesentity",{"_index":272,"title":{},"body":{"classes/ImagenesRepository.html":{}}}],["entityrepository(inmueblesentity",{"_index":450,"title":{},"body":{"classes/InmueblesRepository.html":{}}}],["entityrepository(usuariosentity",{"_index":700,"title":{},"body":{"classes/UsuariosRepository.html":{}}}],["entity{.ts,.js",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["envfilepath",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["error('invalid",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ese",{"_index":302,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["existe",{"_index":303,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["exists",{"_index":724,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["express",{"_index":211,"title":{},"body":{"controllers/ImagenesController.html":{},"dependencies.html":{}}}],["extends",{"_index":269,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{}}}],["false",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"modules/MailsModule.html":{},"entities/UsuariosEntity.html":{},"miscellaneous/variables.html":{}}}],["fichero",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":305,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["file.originalname",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.path",{"_index":306,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["filefilter",{"_index":214,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":208,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["filename",{"_index":124,"title":{},"body":{"classes/CreateImagenesDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"injectables/MailsService.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":192,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["filesinterceptor",{"_index":209,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["fill(null",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":322,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["filter(@query('ubicacion",{"_index":388,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["filter(ubicacion",{"_index":335,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findall",{"_index":323,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findall(@query('limit",{"_index":382,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findall(limit",{"_index":347,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyemail",{"_index":640,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyemail(@body",{"_index":675,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["findbyemail(correo",{"_index":654,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyid",{"_index":324,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyid(@param('id",{"_index":405,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyid(id",{"_index":351,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbynombre",{"_index":641,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbynombre(@param('nombreusuario",{"_index":672,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["findbynombre(nombreusuario",{"_index":657,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyubicacion",{"_index":325,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyubicacion(@query('limit",{"_index":408,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyubicacion(limit",{"_index":354,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyusuario",{"_index":326,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyusuario(@query('limit",{"_index":401,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyusuario(limit",{"_index":357,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["format",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formulario",{"_index":620,"title":{},"body":{"injectables/MailsService.html":{}}}],["framework",{"_index":812,"title":{},"body":{"index.html":{}}}],["fs",{"_index":287,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["function",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":806,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:ubicacion",{"_index":407,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/:ubicacion')@httpcode(httpstatus.ok",{"_index":355,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/filter",{"_index":387,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/filter')@httpcode(httpstatus.ok",{"_index":345,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getall",{"_index":380,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getall')@httpcode(httpstatus.ok",{"_index":349,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getimage/:path",{"_index":181,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["get('/getpaths/:id",{"_index":188,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["get('/id/:id",{"_index":404,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/id/:id')@httpcode(httpstatus.ok",{"_index":352,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/mostrar/:usuario",{"_index":400,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/mostrar/:usuario')@httpcode(httpstatus.ok",{"_index":359,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get(':nombreusuario",{"_index":671,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["get(':nombreusuario')@httpcode(httpstatus.ok",{"_index":658,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["get()@httpcode(httpstatus.ok",{"_index":652,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["getfile",{"_index":176,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["getfile(@query('path",{"_index":232,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getfile(path",{"_index":179,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpath",{"_index":274,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["getpath(id",{"_index":281,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["getpaths",{"_index":177,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getpaths(@param('id",{"_index":230,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getpaths(id",{"_index":187,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getrepository",{"_index":289,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["getting",{"_index":808,"title":{"index.html":{}},"body":{}}],["gldhouses@gmail.com",{"_index":619,"title":{},"body":{"injectables/MailsService.html":{}}}],["global",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["globales",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["globalmente",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["golden",{"_index":608,"title":{},"body":{"injectables/MailsService.html":{}}}],["grow",{"_index":845,"title":{},"body":{"index.html":{}}}],["habitaciones",{"_index":136,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["habitaciones=0",{"_index":492,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["handlebars",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["hay",{"_index":718,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["headers",{"_index":199,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["hello",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["helpers/imagenes.helper",{"_index":216,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["here",{"_index":855,"title":{},"body":{"index.html":{}}}],["host",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["houses",{"_index":609,"title":{},"body":{"injectables/MailsService.html":{}}}],["http://localhost:8080/inmuebles/filter?tipo=p&preciomin=&preciomax=&habitaciones=&banos=&superficiemin=&superficiemax=&limit=&skip",{"_index":386,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["httpcode",{"_index":371,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["httpcode(httpstatus.created",{"_index":413,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["httpcode(httpstatus.ok",{"_index":381,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["https://nestjs.com",{"_index":862,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":370,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["id",{"_index":190,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["id:id",{"_index":310,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["identifier",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["if(!banos",{"_index":493,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!file.originalname.match(/\\.(jpg|jpeg|png|gif",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(!habitaciones",{"_index":491,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!inmueble",{"_index":298,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["if(!opcion",{"_index":490,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!operacion",{"_index":474,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!preciomax",{"_index":483,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!preciomin",{"_index":481,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!superficiemax",{"_index":487,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!superficiemin",{"_index":485,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!tipo",{"_index":480,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!ubicacion",{"_index":489,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!usuario",{"_index":505,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["if(data.baños",{"_index":510,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.contraseña",{"_index":738,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.correo",{"_index":739,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.descripcion",{"_index":513,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.habitaciones",{"_index":516,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.nombreusuario",{"_index":736,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.precio",{"_index":519,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.superficie",{"_index":522,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.tipoinmueble",{"_index":525,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.tipooperacion",{"_index":528,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.ubicacion",{"_index":531,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(exists",{"_index":726,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["ilike",{"_index":469,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["imagenes",{"_index":174,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["imagenes.controller",{"_index":265,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["imagenes.dto",{"_index":291,"title":{},"body":{"injectables/ImagenesService.html":{},"classes/UpdateInmuebleDto.html":{}}}],["imagenes.dto.ts",{"_index":122,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["imagenes.dto.ts:12",{"_index":127,"title":{},"body":{"classes/CreateImagenesDto.html":{}}}],["imagenes.dto.ts:8",{"_index":126,"title":{},"body":{"classes/CreateImagenesDto.html":{}}}],["imagenes.repository",{"_index":292,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["imagenes.service",{"_index":217,"title":{},"body":{"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{}}}],["imagenes/imagenes.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenes/imagenes.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenes/imagenes.service",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenescontroller",{"_index":56,"title":{"controllers/ImagenesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"coverage.html":{}}}],["imagenesentity",{"_index":235,"title":{"entities/ImagenesEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"coverage.html":{}}}],["imagenesentity.inmueble",{"_index":431,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["imagenesmodule",{"_index":35,"title":{"modules/ImagenesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagenesrepository",{"_index":267,"title":{"classes/ImagenesRepository.html":{}},"body":{"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"coverage.html":{}}}],["imagenesservice",{"_index":58,"title":{"injectables/ImagenesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":307,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["img.inmueble",{"_index":309,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["img.pipe(res",{"_index":317,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["imports:[mailermodule.forrootasync",{"_index":573,"title":{},"body":{"modules/MailsModule.html":{}}}],["imports:[typeormmodule.forfeature([imagenesentity]),typeormmodule.forfeature([inmueblesentity",{"_index":266,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["imports:[typeormmodule.forfeature([inmueblesentity]),typeormmodule.forfeature([usuariosentity",{"_index":448,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["imports:[typeormmodule.forfeature([usuariosentity",{"_index":698,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["incorrecto",{"_index":719,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["inject",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["injectable",{"_index":113,"title":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["injectables",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"overview.html":{}}}],["injectrepository",{"_index":285,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["injectrepository(imagenesentity",{"_index":293,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["injectrepository(inmueblesentity",{"_index":295,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["injectrepository(usuariosentity",{"_index":473,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["inmueble",{"_index":229,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["inmueble.baños",{"_index":511,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.descripcion",{"_index":514,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.dto",{"_index":377,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto-1.html":{}}}],["inmueble.dto.ts",{"_index":133,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["inmueble.dto.ts:13",{"_index":151,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:17",{"_index":152,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:22",{"_index":150,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:27",{"_index":147,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:32",{"_index":145,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:37",{"_index":149,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:41",{"_index":146,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:45",{"_index":148,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:9",{"_index":153,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.habitaciones",{"_index":517,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.precio",{"_index":520,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.superficie",{"_index":523,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.tipoinmueble",{"_index":526,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.tipooperacion",{"_index":529,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.ubicacion",{"_index":532,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmuebleentity",{"_index":245,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["inmuebleentity.id",{"_index":246,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["inmuebleentity.vendedor",{"_index":689,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["inmueblerepository",{"_index":277,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["inmuebles",{"_index":320,"title":{},"body":{"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["inmuebles.controller",{"_index":447,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["inmuebles.repository",{"_index":467,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmuebles.service",{"_index":376,"title":{},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{}}}],["inmuebles/entities/inmuebles.entity",{"_index":253,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["inmuebles/inmuebles.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["inmueblescontroller",{"_index":318,"title":{"controllers/InmueblesController.html":{}},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"coverage.html":{}}}],["inmueblesentity",{"_index":243,"title":{"entities/InmueblesEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["inmueblesmodule",{"_index":36,"title":{"modules/InmueblesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InmueblesModule.html":{},"modules.html":{},"overview.html":{}}}],["inmueblesrepository",{"_index":278,"title":{"classes/InmueblesRepository.html":{}},"body":{"injectables/ImagenesService.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"coverage.html":{}}}],["inmueblesservice",{"_index":375,"title":{"injectables/InmueblesService.html":{}},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"coverage.html":{},"overview.html":{}}}],["installation",{"_index":823,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":825,"title":{},"body":{"index.html":{}}}],["int",{"_index":423,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["isglobal",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["ismatch",{"_index":721,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["isnotempty",{"_index":128,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["isnotempty()@isnumber()@ispositive",{"_index":144,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["isnotempty()@isstring",{"_index":125,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["isnumber",{"_index":154,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["ispositive",{"_index":155,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["isstring",{"_index":129,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["join",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/ImagenesService.html":{},"modules/MailsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":587,"title":{},"body":{"modules/MailsModule.html":{}}}],["joincolumn",{"_index":255,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["joincolumn({name",{"_index":259,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["kamil",{"_index":859,"title":{},"body":{"index.html":{}}}],["las",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["length",{"_index":425,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["lessthanorequal",{"_index":470,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["license",{"_index":865,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":842,"title":{},"body":{"index.html":{}}}],["like('%'+opcion",{"_index":501,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+operacion",{"_index":478,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+tipo",{"_index":495,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+ubicacion",{"_index":500,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["limit",{"_index":343,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["listainmuebles",{"_index":535,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["logging",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["logo",{"_index":616,"title":{},"body":{"injectables/MailsService.html":{}}}],["logo.png",{"_index":613,"title":{},"body":{"injectables/MailsService.html":{}}}],["mailermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["mailerservice",{"_index":597,"title":{},"body":{"injectables/MailsService.html":{}}}],["mails",{"_index":538,"title":{},"body":{"controllers/MailsController.html":{}}}],["mails.controller",{"_index":572,"title":{},"body":{"modules/MailsModule.html":{}}}],["mails.service",{"_index":555,"title":{},"body":{"controllers/MailsController.html":{},"modules/MailsModule.html":{}}}],["mails/mails.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mails/mails.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["mails/mails.service",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["mailscontroller",{"_index":45,"title":{"controllers/MailsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"coverage.html":{}}}],["mailsmodule",{"_index":37,"title":{"modules/MailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"modules.html":{},"overview.html":{}}}],["mailsservice",{"_index":39,"title":{"injectables/MailsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"coverage.html":{},"overview.html":{}}}],["manytoone",{"_index":256,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["manytoone(undefined",{"_index":244,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["map",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":546,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["message:'imágenes",{"_index":312,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["metadata",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["miscellaneous",{"_index":805,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":841,"title":{},"body":{"index.html":{}}}],["mode",{"_index":831,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["more",{"_index":854,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":471,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["morethanorequal(banos",{"_index":498,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["morethanorequal(habitaciones",{"_index":497,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["multer",{"_index":213,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["mysql",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":860,"title":{},"body":{"index.html":{}}}],["name",{"_index":184,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":820,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":864,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"dependencies.html":{}}}],["nestjs/config/dist/config.service",{"_index":571,"title":{},"body":{"modules/MailsModule.html":{}}}],["nestjs/core",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":626,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":210,"title":{},"body":{"controllers/ImagenesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["new",{"_index":300,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"modules/MailsModule.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newinmueble",{"_index":506,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["newinmueble.vendedor",{"_index":508,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["newusuario",{"_index":732,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["node.js",{"_index":811,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["nombre",{"_index":735,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["nombreusuario",{"_index":164,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["nombreusuario:nombreusuario",{"_index":504,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["nombrevendedor",{"_index":137,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{}}}],["notfoundexception",{"_index":466,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["npm",{"_index":824,"title":{},"body":{"index.html":{}}}],["nuestros",{"_index":170,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["nullable",{"_index":239,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["number",{"_index":143,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["ondelete",{"_index":247,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["onetomany",{"_index":442,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["onetomany(undefined",{"_index":430,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["onupdate",{"_index":249,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["opcion",{"_index":336,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["open",{"_index":843,"title":{},"body":{"index.html":{}}}],["operacion",{"_index":348,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["optional",{"_index":185,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["options",{"_index":590,"title":{},"body":{"modules/MailsModule.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["overview",{"_index":869,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":773,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":200,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["param('ubicacion",{"_index":409,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["param('usuario",{"_index":402,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["parameters",{"_index":183,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["parseintpipe",{"_index":369,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["partialtype",{"_index":625,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{}}}],["partialtype(createimagenesdto",{"_index":628,"title":{},"body":{"classes/UpdateInmuebleDto.html":{}}}],["partialtype(createinmuebledto",{"_index":631,"title":{},"body":{"classes/UpdateInmuebleDto-1.html":{}}}],["partialtype(createusuariodto",{"_index":635,"title":{},"body":{"classes/UpdateUsuarioDto.html":{}}}],["pass",{"_index":582,"title":{},"body":{"modules/MailsModule.html":{}}}],["password",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateImagenesDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{}}}],["path.path",{"_index":316,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["please",{"_index":852,"title":{},"body":{"index.html":{}}}],["port",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["port:465",{"_index":578,"title":{},"body":{"modules/MailsModule.html":{}}}],["post",{"_index":201,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["post('/:vendedor",{"_index":412,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["post('/form",{"_index":547,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('/password",{"_index":668,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('/password')@httpcode(httpstatus.ok",{"_index":643,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('/send",{"_index":550,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('/welcome",{"_index":553,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('email",{"_index":674,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('email')@httpcode(httpstatus.ok",{"_index":655,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('upload/:id",{"_index":219,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["post('upload/:id')@useinterceptors(undefined",{"_index":194,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["precio",{"_index":138,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["preciomax",{"_index":339,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["preciomax=number.max_value",{"_index":484,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["preciomin",{"_index":338,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["preciomin=0",{"_index":482,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["preconditionfailedexception",{"_index":374,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["prefix",{"_index":173,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["primarycolumn",{"_index":691,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["primarygeneratedcolumn",{"_index":241,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["private",{"_index":294,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["production",{"_index":833,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":810,"title":{},"body":{"index.html":{}}}],["project",{"_index":844,"title":{},"body":{"index.html":{}}}],["promise",{"_index":186,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["properties",{"_index":123,"title":{"properties.html":{}},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"properties.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}}}],["proyecto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["put",{"_index":368,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["put('/:id",{"_index":416,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["put(':nombreusuario",{"_index":679,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["que",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":202,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{}}}],["query('banos",{"_index":394,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('email",{"_index":564,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('habitaciones')habitaciones",{"_index":393,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('limit')limit",{"_index":397,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('message",{"_index":566,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('name",{"_index":558,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('opcion",{"_index":389,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('operacion",{"_index":384,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('preciomax')preciomax",{"_index":392,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('preciomin')preciomin",{"_index":391,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('reason",{"_index":565,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('skip",{"_index":383,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('skip')skip",{"_index":398,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('superficiemax",{"_index":396,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('superficiemin",{"_index":395,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('surname",{"_index":563,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('tipo",{"_index":390,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["randomname",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${filename",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":853,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateInmuebleDto.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["reason",{"_index":545,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["reconozcan",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["recuperar",{"_index":617,"title":{},"body":{"injectables/MailsService.html":{}}}],["reflect",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":327,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["remove(@param('id",{"_index":420,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["remove(id",{"_index":361,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["renameimage",{"_index":215,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":270,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UsuariosRepository.html":{},"index.html":{}}}],["req",{"_index":203,"title":{},"body":{"controllers/ImagenesController.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":180,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["rimraf",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":828,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":815,"title":{},"body":{"index.html":{}}}],["se",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["secure",{"_index":577,"title":{},"body":{"modules/MailsModule.html":{}}}],["sendemailform",{"_index":539,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailform(@query('name",{"_index":562,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailform(name",{"_index":542,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword",{"_index":540,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword(@query('email",{"_index":560,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword(email",{"_index":549,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome",{"_index":541,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome(@query('email",{"_index":557,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome(email",{"_index":552,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendmailform",{"_index":593,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailform(name",{"_index":599,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailpassword",{"_index":594,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailpassword(email",{"_index":601,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailwelcome",{"_index":595,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailwelcome(email",{"_index":603,"title":{},"body":{"injectables/MailsService.html":{}}}],["server",{"_index":816,"title":{},"body":{"index.html":{}}}],["server_port",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":817,"title":{},"body":{"index.html":{}}}],["skip",{"_index":344,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["skip:skip",{"_index":477,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"index.html":{}}}],["sponsors",{"_index":847,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imagenes.helper.ts",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/constants.ts",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imagenes/dto/create",{"_index":121,"title":{},"body":{"classes/CreateImagenesDto.html":{},"coverage.html":{}}}],["src/imagenes/dto/update",{"_index":624,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["src/imagenes/entities/imagenes.entity",{"_index":441,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts",{"_index":236,"title":{},"body":{"entities/ImagenesEntity.html":{},"coverage.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:11",{"_index":240,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:14",{"_index":252,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:21",{"_index":251,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:8",{"_index":242,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/helpers/imagenes.helper.ts",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imagenes/imagenes.controller.ts",{"_index":172,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.controller.ts:20",{"_index":195,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.controller.ts:25",{"_index":189,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.controller.ts:30",{"_index":182,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.module.ts",{"_index":262,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["src/imagenes/imagenes.repository.ts",{"_index":268,"title":{},"body":{"classes/ImagenesRepository.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.service.ts",{"_index":273,"title":{},"body":{"injectables/ImagenesService.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.service.ts:13",{"_index":279,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:20",{"_index":283,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:47",{"_index":282,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:58",{"_index":280,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/inmuebles/dto/create",{"_index":132,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"coverage.html":{}}}],["src/inmuebles/dto/update",{"_index":630,"title":{},"body":{"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["src/inmuebles/entities/inmuebles.entity",{"_index":263,"title":{},"body":{"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"entities/UsuariosEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts",{"_index":422,"title":{},"body":{"entities/InmueblesEntity.html":{},"coverage.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:12",{"_index":437,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:15",{"_index":435,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:18",{"_index":436,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:25",{"_index":439,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:28",{"_index":434,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:31",{"_index":428,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:34",{"_index":424,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:37",{"_index":433,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:40",{"_index":427,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:43",{"_index":432,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:9",{"_index":429,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/inmuebles.controller.ts",{"_index":319,"title":{},"body":{"controllers/InmueblesController.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.controller.ts:13",{"_index":350,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:20",{"_index":346,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:26",{"_index":360,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:32",{"_index":353,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:38",{"_index":356,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:45",{"_index":333,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:52",{"_index":367,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:58",{"_index":363,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.module.ts",{"_index":445,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["src/inmuebles/inmuebles.repository",{"_index":288,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/inmuebles/inmuebles.repository.ts",{"_index":449,"title":{},"body":{"classes/InmueblesRepository.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.service.ts",{"_index":451,"title":{},"body":{"injectables/InmueblesService.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.service.ts:116",{"_index":463,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:134",{"_index":457,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:14",{"_index":455,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:154",{"_index":465,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:21",{"_index":461,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:212",{"_index":459,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:39",{"_index":460,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:87",{"_index":462,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:96",{"_index":464,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/mails/mails.controller.ts",{"_index":537,"title":{},"body":{"controllers/MailsController.html":{},"coverage.html":{}}}],["src/mails/mails.controller.ts:10",{"_index":554,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.controller.ts:15",{"_index":551,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.controller.ts:20",{"_index":548,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.module.ts",{"_index":570,"title":{},"body":{"modules/MailsModule.html":{}}}],["src/mails/mails.service.ts",{"_index":592,"title":{},"body":{"injectables/MailsService.html":{},"coverage.html":{}}}],["src/mails/mails.service.ts:26",{"_index":602,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:44",{"_index":600,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:5",{"_index":598,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:9",{"_index":604,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/main.ts",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/usuarios/dto/create",{"_index":157,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"coverage.html":{}}}],["src/usuarios/dto/update",{"_index":633,"title":{},"body":{"classes/UpdateUsuarioDto.html":{},"coverage.html":{}}}],["src/usuarios/entities/usuarios.entity",{"_index":160,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{}}}],["src/usuarios/entities/usuarios.entity.ts",{"_index":685,"title":{},"body":{"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:11",{"_index":687,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:14",{"_index":688,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:17",{"_index":690,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:8",{"_index":692,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/usuarios.controller.ts",{"_index":637,"title":{},"body":{"controllers/UsuariosController.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.controller.ts:14",{"_index":653,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:20",{"_index":644,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:26",{"_index":659,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:32",{"_index":656,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:39",{"_index":648,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:46",{"_index":662,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:52",{"_index":651,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.module.ts",{"_index":695,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["src/usuarios/usuarios.repository",{"_index":472,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/usuarios/usuarios.repository.ts",{"_index":699,"title":{},"body":{"classes/UsuariosRepository.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.service.ts",{"_index":701,"title":{},"body":{"injectables/UsuariosService.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.service.ts:12",{"_index":704,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:127",{"_index":708,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:18",{"_index":709,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:27",{"_index":711,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:39",{"_index":710,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:52",{"_index":706,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:67",{"_index":707,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:84",{"_index":712,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["start",{"_index":829,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":832,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":834,"title":{},"body":{"index.html":{}}}],["started",{"_index":809,"title":{"index.html":{}},"body":{}}],["starter",{"_index":822,"title":{},"body":{"index.html":{}}}],["statements",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":856,"title":{},"body":{"index.html":{}}}],["storage",{"_index":222,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["streamablefile",{"_index":204,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["strict",{"_index":591,"title":{},"body":{"modules/MailsModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["subidas",{"_index":313,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["subject",{"_index":606,"title":{},"body":{"injectables/MailsService.html":{}}}],["superficie",{"_index":139,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["superficiemax",{"_index":342,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["superficiemax=number.max_value",{"_index":488,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["superficiemin",{"_index":341,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["superficiemin=0",{"_index":486,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["support",{"_index":848,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":543,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["svg",{"_index":867,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["tablas",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":502,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["take:limit",{"_index":476,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["template",{"_index":585,"title":{},"body":{"modules/MailsModule.html":{},"injectables/MailsService.html":{}}}],["templates",{"_index":588,"title":{},"body":{"modules/MailsModule.html":{}}}],["templates/logo.png",{"_index":614,"title":{},"body":{"injectables/MailsService.html":{}}}],["test",{"_index":837,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":840,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":839,"title":{},"body":{"index.html":{}}}],["tests",{"_index":836,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":846,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.findbynombre(nombreusuario",{"_index":743,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.imagenesrepository.create({filename,path",{"_index":308,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesrepository.find",{"_index":314,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesrepository.save(img",{"_index":311,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesservice.getfile(path",{"_index":233,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.imagenesservice.getpath(id",{"_index":231,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.imagenesservice.uploadfiles(id",{"_index":227,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.inmueblerepository.create(data",{"_index":507,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.delete",{"_index":536,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.findandcount",{"_index":475,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.findone",{"_index":297,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.save(newinmueble",{"_index":509,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.update",{"_index":534,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblesservice.create(vendedor",{"_index":415,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.delete(id",{"_index":421,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.filter(ubicacion,opcion,tipo,preciomin",{"_index":399,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findall(limit",{"_index":385,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyid(id",{"_index":406,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyubicacion(limit",{"_index":410,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyusuario(limit",{"_index":403,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.update(id,data",{"_index":418,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.mailerservice.sendmail",{"_index":605,"title":{},"body":{"injectables/MailsService.html":{}}}],["this.mailsservice.sendmailform(name",{"_index":567,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.mailsservice.sendmailpassword(email",{"_index":561,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.mailsservice.sendmailwelcome(email",{"_index":559,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.usuariorepository.create(data",{"_index":733,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.createquerybuilder(\"usuario\").getmany",{"_index":716,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.delete",{"_index":744,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.findone",{"_index":503,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["this.usuariorepository.save(newusuario",{"_index":734,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.update",{"_index":742,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariosservice.comprobarpassword(usser",{"_index":670,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.create(data",{"_index":678,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.delete(nombreusuario",{"_index":684,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findall",{"_index":667,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findbyemail(correo.correo",{"_index":676,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findbynombre(nombreusuario",{"_index":673,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.update(nombreusuario",{"_index":681,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["throw",{"_index":299,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["tipo",{"_index":337,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["tipoinmueble",{"_index":140,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["tipooperacion",{"_index":141,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["todo",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["touch",{"_index":857,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":575,"title":{},"body":{"modules/MailsModule.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":863,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":257,"title":{},"body":{"entities/ImagenesEntity.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"classes/UsuariosRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/UsuariosModule.html":{}}}],["typeormmodule.forrootasync",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":627,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"dependencies.html":{}}}],["types/nodemailer",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":821,"title":{},"body":{"index.html":{}}}],["ubicacion",{"_index":142,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["ui",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":835,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":196,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/UsuariosService.html":{}}}],["unlicensed",{"_index":874,"title":{},"body":{"properties.html":{}}}],["update",{"_index":328,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["update(@param('id",{"_index":417,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["update(@param('nombreusuario",{"_index":680,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["update(id",{"_index":364,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["update(nombreusuario",{"_index":660,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["updateinmuebledto",{"_index":365,"title":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{}},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["updateusuariodto",{"_index":632,"title":{"classes/UpdateUsuarioDto.html":{}},"body":{"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["upload",{"_index":224,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["uploadedfile",{"_index":205,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["uploadedfiles",{"_index":206,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["uploadfiles",{"_index":178,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["uploadfiles(@param('id",{"_index":225,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["uploadfiles(id",{"_index":191,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["usefactory",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["useinterceptors",{"_index":207,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":220,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["usepipes",{"_index":372,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["usepipes(new",{"_index":331,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["user",{"_index":580,"title":{},"body":{"modules/MailsModule.html":{}}}],["username",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["usser",{"_index":645,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usser.nombreusuario",{"_index":720,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario",{"_index":358,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["usuario.contraseña",{"_index":723,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario.correo",{"_index":741,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario.dto",{"_index":665,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuario.dto.ts",{"_index":634,"title":{},"body":{"classes/UpdateUsuarioDto.html":{},"coverage.html":{}}}],["usuario.nombreusuario",{"_index":737,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuariorepository",{"_index":453,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["usuarios",{"_index":638,"title":{},"body":{"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.controller",{"_index":696,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["usuarios.dto",{"_index":158,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.dto.ts",{"_index":161,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"coverage.html":{}}}],["usuarios.dto.ts:11",{"_index":165,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.dto.ts:15",{"_index":166,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.dto.ts:7",{"_index":167,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.length",{"_index":717,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios.repository",{"_index":713,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios.service",{"_index":664,"title":{},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{}}}],["usuarios/entities/usuarios.entity",{"_index":440,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["usuarios/usuarios.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarioscontroller",{"_index":636,"title":{"controllers/UsuariosController.html":{}},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"coverage.html":{}}}],["usuariosentity",{"_index":159,"title":{"entities/UsuariosEntity.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuariosentity.nombreusuario",{"_index":438,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["usuariosmodule",{"_index":38,"title":{"modules/UsuariosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsuariosModule.html":{},"modules.html":{},"overview.html":{}}}],["usuariosrepository",{"_index":454,"title":{"classes/UsuariosRepository.html":{}},"body":{"injectables/InmueblesService.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuariosservice",{"_index":663,"title":{"injectables/UsuariosService.html":{}},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"overview.html":{}}}],["validar",{"_index":169,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["validationpipe",{"_index":373,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["validationpipe())@post('/:vendedor')@httpcode(httpstatus.created",{"_index":332,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["validationpipe())@post()@httpcode(httpstatus.created",{"_index":647,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["validationpipe())@put('/:id')@httpcode(httpstatus.ok",{"_index":366,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["validationpipe())@put(':nombreusuario')@httpcode(httpstatus.ok",{"_index":661,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["validationpipe({whitelist:true",{"_index":411,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["validator",{"_index":130,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"dependencies.html":{}}}],["value",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["van",{"_index":168,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["var",{"_index":304,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["varchar",{"_index":238,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["variable",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":77,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["vendedor",{"_index":334,"title":{},"body":{"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["version",{"_index":872,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":830,"title":{},"body":{"index.html":{}}}],["website",{"_index":861,"title":{},"body":{"index.html":{}}}],["world",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["ya",{"_index":727,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["you'd",{"_index":851,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nImagenesModule\n\nImagenesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nImagenesModule->AppModule\n\n\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nAppModule -->\n\nInmueblesModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nAppModule -->\n\nUsuariosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nAppModule -->\n\nMailsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            MailsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImagenesModule\n                        \n                        \n                            InmueblesModule\n                        \n                        \n                            MailsModule\n                        \n                        \n                            UsuariosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsuariosModule } from './usuarios/usuarios.module';\nimport { InmueblesModule } from './inmuebles/inmuebles.module';\nimport { ImagenesController } from './imagenes/imagenes.controller';\nimport { ImagenesService } from './imagenes/imagenes.service';\nimport { ImagenesModule } from './imagenes/imagenes.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { join } from 'path';\nimport { MailsController } from './mails/mails.controller';\nimport { MailsService } from './mails/mails.service';\nimport { MailsModule } from './mails/mails.module';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env', //fichero con las variables globales\n      isGlobal: true // para que se reconozcan las variables globalmente en todo el proyecto\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('DB_HOST'),\n        port: +configService.get('DB_PORT'),\n        username: configService.get('DB_USER'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_DATABASE'),\n        entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: false,\n        logging: false //para crear las tablas\n      }),\n      inject: [ConfigService],\n    }),\n  ConfigModule.forRoot(),\n    UsuariosModule,\n    InmueblesModule,\n    ImagenesModule,\n    MailsModule,\n  ],\n  controllers: [AppController, MailsController],\n  providers: [AppService, MailsService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImagenesDto.html":{"url":"classes/CreateImagenesDto.html","title":"class - CreateImagenesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImagenesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/dto/create-imagenes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/dto/create-imagenes.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/dto/create-imagenes.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateImagenesDto {\n    \n    \n    @IsNotEmpty()\n    @IsString()\n    filename: string;\n\n    @IsNotEmpty()\n    @IsString()\n    path: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInmuebleDto.html":{"url":"classes/CreateInmuebleDto.html","title":"class - CreateInmuebleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/dto/create-inmueble.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baños\n                            \n                            \n                                    Readonly\n                                descripcion\n                            \n                            \n                                    Readonly\n                                habitaciones\n                            \n                            \n                                    Readonly\n                                nombreVendedor\n                            \n                            \n                                    Readonly\n                                precio\n                            \n                            \n                                    Readonly\n                                superficie\n                            \n                            \n                                    Readonly\n                                tipoInmueble\n                            \n                            \n                                    Readonly\n                                tipoOperacion\n                            \n                            \n                                    Readonly\n                                ubicacion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baños\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        habitaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        nombreVendedor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        precio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        superficie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tipoInmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tipoOperacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ubicacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsPositive, IsString } from \"class-validator\";\nimport { CreateUsuarioDto } from \"src/usuarios/dto/create-usuarios.dto\";\nimport { UsuariosEntity } from \"src/usuarios/entities/usuarios.entity\";\n\nexport class CreateInmuebleDto {\n    \n    @IsNotEmpty()\n    @IsString()\n    readonly ubicacion: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly tipoInmueble: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly tipoOperacion: string;\n    \n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly superficie: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly habitaciones: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly baños: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly precio: number;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly descripcion: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly nombreVendedor: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsuarioDto.html":{"url":"classes/CreateUsuarioDto.html","title":"class - CreateUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/dto/create-usuarios.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contraseña\n                            \n                            \n                                correo\n                            \n                            \n                                nombreUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contraseña\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator' //van a validar nuestros atributos\n\nexport class CreateUsuarioDto {\n\n    @IsNotEmpty()\n    @IsString()\n    nombreUsuario: string;\n\n    @IsNotEmpty()\n    @IsString()\n    contraseña: string;\n\n    @IsNotEmpty()\n    @IsString()\n    correo: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagenesController.html":{"url":"controllers/ImagenesController.html","title":"controller - ImagenesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagenesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                imagenes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getPaths\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(path: String, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getImage/:path')\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPaths\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPaths(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getPaths/:id')\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(id: number, files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Headers, Param, Post, Query, Req, Res, StreamableFile, UploadedFile, UploadedFiles, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport path from 'path';\nimport { fileFilter, renameImage } from './helpers/imagenes.helper';\nimport { ImagenesService } from './imagenes.service';\n\n@Controller('imagenes')\nexport class ImagenesController {\n    constructor(private readonly imagenesService: ImagenesService) {}\n\n    @Post('upload/:id')\n    @UseInterceptors(FilesInterceptor('files', 5, {\n        storage: diskStorage({\n            destination: './upload',\n            filename: renameImage\n        }),\n        fileFilter: fileFilter\n    }))\n    async uploadFiles(@Param('id') id: number, @UploadedFiles() files: Array){\n        return await this.imagenesService.uploadFiles(id, files);\n    }\n\n    @Get('/getPaths/:id') //id del inmueble\n    async getPaths(@Param('id') id: number): Promise {\n        return await this.imagenesService.getPath(id);\n    }\n\n    @Get('/getImage/:path') \n    async getFile(@Query('path') path: String, @Res() res): Promise {\n        return await this.imagenesService.getFile(path, res);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImagenesEntity.html":{"url":"entities/ImagenesEntity.html","title":"entity - ImagenesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImagenesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/entities/imagenes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                id\n                            \n                            \n                                inmueble\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InmueblesEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, inmuebleEntity => inmuebleEntity.id, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'inmueble'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { InmueblesEntity } from \"../../inmuebles/entities/inmuebles.entity\"; \nimport { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({name: 'Imagenes'})\nexport class ImagenesEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'varchar', nullable: false})\n    filename: string;\n\n    @Column({type: 'varchar', nullable: false})\n    path: string;\n\n    @ManyToOne(() => InmueblesEntity, (inmuebleEntity) => inmuebleEntity.id, {\n        onDelete: \"CASCADE\",\n        onUpdate: \"CASCADE\"\n    })\n    @JoinColumn({name: \"inmueble\"})\n    inmueble: InmueblesEntity\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagenesModule.html":{"url":"modules/ImagenesModule.html","title":"module - ImagenesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagenesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ImagenesModule\n\n\n\ncluster_ImagenesModule_providers\n\n\n\n\nImagenesService\n\nImagenesService\n\n\n\nImagenesModule\n\nImagenesModule\n\nImagenesModule -->\n\nImagenesService->ImagenesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/imagenes/imagenes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagenesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagenesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InmueblesEntity } from 'src/inmuebles/entities/inmuebles.entity';\nimport { ImagenesEntity } from './entities/imagenes.entity';\nimport { ImagenesController } from './imagenes.controller';\nimport { ImagenesService } from './imagenes.service';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([ImagenesEntity]),TypeOrmModule.forFeature([InmueblesEntity])],\n  controllers: [ImagenesController],\n  providers: [ImagenesService]\n})\nexport class ImagenesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagenesRepository.html":{"url":"classes/ImagenesRepository.html","title":"class - ImagenesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagenesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { ImagenesEntity } from \"./entities/imagenes.entity\";\n\n@EntityRepository(ImagenesEntity)\n\nexport class ImagenesRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagenesService.html":{"url":"injectables/ImagenesService.html","title":"injectable - ImagenesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagenesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getPath\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagenesRepository: ImagenesRepository, inmuebleRepository: InmueblesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/imagenes/imagenes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagenesRepository\n                                                  \n                                                        \n                                                                        ImagenesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inmuebleRepository\n                                                  \n                                                        \n                                                                        InmueblesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(path, res)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPath(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(id: number, files: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { createReadStream } from 'fs';\nimport { join } from 'path';\nimport { InmueblesEntity } from 'src/inmuebles/entities/inmuebles.entity';\nimport { InmueblesRepository } from 'src/inmuebles/inmuebles.repository';\nimport { getRepository } from 'typeorm';\nimport { CreateImagenesDto } from './dto/create-imagenes.dto';\nimport { ImagenesEntity } from './entities/imagenes.entity';\nimport { ImagenesRepository } from './imagenes.repository';\n\n@Injectable()\nexport class ImagenesService {\n\n    constructor(\n        @InjectRepository(ImagenesEntity) private imagenesRepository: ImagenesRepository,\n        @InjectRepository(InmueblesEntity) private inmuebleRepository: InmueblesRepository\n    ) { }\n\n    async uploadFiles(id: number, files: Array){\n                \n        const inmueble = await this.inmuebleRepository.findOne({\n            where:{\n                id: id\n            }\n        })\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'}) \n        \n        for( var file of files){\n            const filename = file.filename;\n            const path = file.path;\n            \n            const img = this.imagenesRepository.create({filename,path});\n            \n            img.inmueble = await this.inmuebleRepository.findOne({\n                where:{\n                    id:id\n                }\n            });\n\n            await this.imagenesRepository.save(img);\n        }\n\n        return {message:'Imágenes subidas'}\n    }\n\n    async getPath(id: number){\n        \n        const files = await this.imagenesRepository.find({\n            where: {\n                inmueble: id,\n            }\n        });\n\n        return files;\n    }\n\n    async getFile(path, res){\n        const img = createReadStream(join(process.cwd(), path.path));\n        img.pipe(res);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InmueblesController.html":{"url":"controllers/InmueblesController.html","title":"controller - InmueblesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InmueblesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                inmuebles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                filter\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByUbicacion\n                            \n                            \n                                findByUsuario\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(vendedor: string, data: CreateInmuebleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('/:vendedor')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vendedor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/filter')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    habitaciones\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    banos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, skip: number, operacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/id/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUbicacion\n                        \n                    \n                \n            \n            \n                \nfindByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:ubicacion')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUsuario\n                        \n                    \n                \n            \n            \n                \nfindByUsuario(limit: number, skip: number, usuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/mostrar/:usuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: UpdateInmuebleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Put('/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Put, ParseIntPipe, HttpStatus, HttpCode, UsePipes, ValidationPipe, UseInterceptors, UploadedFile, UploadedFiles, Query, PreconditionFailedException } from '@nestjs/common';\nimport { InmueblesService } from './inmuebles.service';\nimport { CreateInmuebleDto } from './dto/create-inmueble.dto';\nimport { UpdateInmuebleDto } from './dto/update-inmueble.dto';\n\n@Controller('inmuebles')\nexport class InmueblesController {\n  \n  constructor(private readonly inmueblesService: InmueblesService) {}\n\n  @Get('/getAll')\n  @HttpCode(HttpStatus.OK)\n  findAll(@Query('limit') limit: number, @Query('skip') skip: number, @Query('operacion') operacion: string) {\n    return this.inmueblesService.findAll(limit, skip, operacion);\n  }\n\n  //http://localhost:8080/inmuebles/filter?tipo=P&precioMin=&precioMax=&habitaciones=&banos=&superficieMin=&superficieMax=&limit=&skip=\n  @Get('/filter')\n  @HttpCode(HttpStatus.OK)\n  filter(@Query('ubicacion') ubicacion: string, @Query('opcion') opcion: string, @Query('tipo') tipo: string, @Query('precioMin')precioMin: number, @Query('precioMax')precioMax: number, @Query('habitaciones')habitaciones: number, @Query('banos') banos: number, @Query('superficieMin') superficieMin: number, @Query('superficieMax') superficieMax: number, @Query('limit')limit: number, @Query('skip')skip: number) {\n    return this.inmueblesService.filter(ubicacion,opcion,tipo,precioMin, precioMax, habitaciones, banos, superficieMin, superficieMax, limit, skip);\n  }\n \n  @Get('/mostrar/:usuario')\n  @HttpCode(HttpStatus.OK)\n  findByUsuario(@Query('limit') limit: number, @Query('skip') skip: number, @Param('usuario') usuario: string) {\n    return this.inmueblesService.findByUsuario(limit, skip, usuario);\n  }\n\n  @Get('/id/:id')\n  @HttpCode(HttpStatus.OK)\n  findById(@Param('id') id: number) {\n    return this.inmueblesService.findById(id);\n  }\n\n  @Get('/:ubicacion')\n  @HttpCode(HttpStatus.OK)\n  findByUbicacion(@Query('limit') limit: number, @Query('skip') skip: number, @Param('ubicacion') ubicacion: string, @Query('operacion') operacion: string) {\n    return this.inmueblesService.findByUbicacion(limit, skip, ubicacion, operacion);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Post('/:vendedor')\n  @HttpCode(HttpStatus.CREATED)\n  create(@Param('vendedor') vendedor: string, @Body() data: CreateInmuebleDto) {\n    return this.inmueblesService.create(vendedor, data);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Put('/:id')\n  @HttpCode(HttpStatus.OK)\n  update(@Param('id', ParseIntPipe) id: number, @Body() data: UpdateInmuebleDto) {\n    return this.inmueblesService.update(id,data);\n  }\n\n  @Delete('/:id')\n  @HttpCode(HttpStatus.OK)\n  remove(@Param('id', ParseIntPipe) id: number) {\n    return this.inmueblesService.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InmueblesEntity.html":{"url":"entities/InmueblesEntity.html","title":"entity - InmueblesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InmueblesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/entities/inmuebles.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baños\n                            \n                            \n                                descripcion\n                            \n                            \n                                habitaciones\n                            \n                            \n                                id\n                            \n                            \n                                imagenes\n                            \n                            \n                                precio\n                            \n                            \n                                superficie\n                            \n                            \n                                tipoInmueble\n                            \n                            \n                                tipoOperacion\n                            \n                            \n                                ubicacion\n                            \n                            \n                                vendedor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baños\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        habitaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagenes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, imagenesEntity => imagenesEntity.inmueble)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        precio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        superficie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoInmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoOperacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ubicacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendedor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsuariosEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, usuariosEntity => usuariosEntity.nombreUsuario, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'nombreVendedor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { UsuariosEntity } from \"../../usuarios/entities/usuarios.entity\"; \nimport { ImagenesEntity } from \"src/imagenes/entities/imagenes.entity\"; \nimport { Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({name: 'Inmuebles'})\nexport class InmueblesEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    ubicacion: string;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    tipoInmueble: string;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    tipoOperacion: string;\n\n    @ManyToOne(() => UsuariosEntity, (usuariosEntity) => usuariosEntity.nombreUsuario, {\n        onDelete: \"CASCADE\",\n        onUpdate: \"CASCADE\"\n    })\n    @JoinColumn({name: \"nombreVendedor\"})\n    vendedor: UsuariosEntity;\n\n    @Column({type: 'int', nullable: false})\n    superficie: number;\n\n    @Column({type: 'int', nullable: false})\n    habitaciones: number;\n\n    @Column({type: 'int', nullable: false})\n    baños: number;\n\n    @Column({type: 'int', nullable: false})\n    precio: number;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    descripcion: string;\n\n    @OneToMany(() => ImagenesEntity, (imagenesEntity) => imagenesEntity.inmueble)\n    imagenes: Array; \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InmueblesModule.html":{"url":"modules/InmueblesModule.html","title":"module - InmueblesModule","body":"\n                   \n\n\n\n\n    Modules\n    InmueblesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InmueblesModule\n\n\n\ncluster_InmueblesModule_providers\n\n\n\n\nInmueblesService\n\nInmueblesService\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nInmueblesModule -->\n\nInmueblesService->InmueblesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/inmuebles/inmuebles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InmueblesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InmueblesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuariosEntity } from 'src/usuarios/entities/usuarios.entity';\nimport { InmueblesEntity } from './entities/inmuebles.entity';\nimport { InmueblesController } from './inmuebles.controller';\nimport { InmueblesService } from './inmuebles.service';\n\n@Module({\n    imports:[TypeOrmModule.forFeature([InmueblesEntity]),TypeOrmModule.forFeature([UsuariosEntity])],\n    providers: [InmueblesService],\n    controllers: [InmueblesController]\n  })\nexport class InmueblesModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InmueblesRepository.html":{"url":"classes/InmueblesRepository.html","title":"class - InmueblesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InmueblesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { InmueblesEntity } from \"./entities/inmuebles.entity\";\n\n@EntityRepository(InmueblesEntity)\n\nexport class InmueblesRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InmueblesService.html":{"url":"injectables/InmueblesService.html","title":"injectable - InmueblesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InmueblesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                filter\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUbicacion\n                            \n                            \n                                    Async\n                                findByUsuario\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inmuebleRepository: InmueblesRepository, usuarioRepository: UsuariosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/inmuebles/inmuebles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inmuebleRepository\n                                                  \n                                                        \n                                                                        InmueblesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        UsuariosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(nombreUsuario: string, data: CreateInmuebleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    habitaciones\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    banos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, skip: number, operacion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUbicacion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsuario\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsuario(limit: number, skip: number, nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateInmuebleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InmueblesEntity } from './entities/inmuebles.entity';\nimport { InmueblesRepository } from './inmuebles.repository';\nimport { CreateInmuebleDto } from './dto/create-inmueble.dto';\nimport { UpdateInmuebleDto } from './dto/update-inmueble.dto';\nimport { Between, getRepository, ILike, LessThanOrEqual, Like, MoreThanOrEqual } from 'typeorm';\n\nimport { UsuariosEntity } from 'src/usuarios/entities/usuarios.entity';\nimport { UsuariosRepository } from 'src/usuarios/usuarios.repository';\n\n\n@Injectable()\nexport class InmueblesService {\n\n    constructor(\n        @InjectRepository(InmueblesEntity) private inmuebleRepository: InmueblesRepository,\n        @InjectRepository(UsuariosEntity) private usuarioRepository: UsuariosRepository\n    ) { }\n\n    async findAll(limit: number, skip: number, operacion: string): Promise {\n        \n        if(!operacion){\n            \n            operacion=\"%\";\n        }\n        const inmueble = await this.inmuebleRepository.findAndCount({\n            \n            take:limit,\n            skip:skip,\n            where:{\n                tipoOperacion: Like('%'+operacion+'%')\n            }\n        });\n      \n        return inmueble;\n    }\n\n    async filter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number): Promise {\n        //console.log(ubicacion, opcion)\n        if(!tipo){\n            tipo=\"%\";\n        }\n        if(!precioMin){\n            precioMin=0;\n        }\n        if(!precioMax){\n            precioMax=Number.MAX_VALUE;\n        }\n        if(!superficieMin){\n            superficieMin=0;\n        }\n        if(!superficieMax){\n            superficieMax=Number.MAX_VALUE;\n        }\n        if(!ubicacion){\n            ubicacion=\"%\";\n        }\n        if(!opcion){\n            opcion=\"%\";\n        }\n        if(!habitaciones){\n            habitaciones=0;\n        }\n        if(!banos){\n            banos=0;\n        }\n\n        const inmueble = await this.inmuebleRepository.findAndCount({\n            where:{\n                tipoInmueble: Like('%'+tipo+'%'),\n                precio: Between(precioMin, precioMax),\n                habitaciones: MoreThanOrEqual(habitaciones),\n                baños: MoreThanOrEqual(banos),\n                superficie: Between(superficieMin, superficieMax),\n                ubicacion: Like('%'+ubicacion+'%'),\n                tipoOperacion: Like('%'+opcion+'%')\n            },\n            take: limit,\n            skip: skip\n\n        });\n        \n       return inmueble;\n    }\n\n    async findById(id: number): Promise {\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n        return inmueble;\n    }\n\n    async findByUsuario(limit: number, skip: number, nombreUsuario: string): Promise {\n        \n        const usuario = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario:nombreUsuario\n            }\n        });\n        \n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'}) \n\n        const inmueble = this.inmuebleRepository.findAndCount({\n            where: {\n                vendedor: nombreUsuario\n            },\n            take:limit,\n            skip:skip\n        });\n        return inmueble;\n    }\n    \n    async findByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string): Promise {\n        \n        if(!operacion){\n            \n            operacion=\"%\";\n        }\n\n        const inmueble = this.inmuebleRepository.findAndCount({\n            where: {\n                ubicacion: ubicacion,\n                tipoOperacion: Like('%'+operacion+'%')\n            },\n            take:limit,\n            skip:skip\n        });        \n        return inmueble;\n    }\n\n    async create(nombreUsuario: string, data: CreateInmuebleDto): Promise {\n        const usuario = this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: nombreUsuario\n            }\n        });\n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'}) \n\n        const newInmueble = this.inmuebleRepository.create(data);\n        newInmueble.vendedor = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario:nombreUsuario\n            }\n        });\n        \n        await this.inmuebleRepository.save(newInmueble);\n        \n        return newInmueble;\n    }\n\n    async update(id: number, data: UpdateInmuebleDto): Promise{\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'})\n        \n        if(data.baños) {\n            inmueble.baños = data.baños;        \n        }\n\n        if(data.descripcion) {\n            inmueble.descripcion = data.descripcion;        \n        }\n\n        if(data.habitaciones) {\n            inmueble.habitaciones = data.habitaciones;        \n        }\n\n        if(data.precio) {\n            inmueble.precio = data.precio;        \n        }\n\n        if(data.superficie) {\n            inmueble.superficie = data.superficie;        \n        }\n\n        if(data.tipoInmueble) {\n            inmueble.tipoInmueble = data.tipoInmueble;        \n        }\n\n        if(data.tipoOperacion) {\n            inmueble.tipoOperacion = data.tipoOperacion;        \n        }\n\n        if(data.ubicacion) {\n            inmueble.ubicacion = data.ubicacion;        \n        }\n\n        await this.inmuebleRepository.update({\n                id: id\n            },\n            {\n                baños: inmueble.baños,\n                descripcion: inmueble.descripcion,\n                habitaciones: inmueble.habitaciones,\n                precio: inmueble.precio,\n                superficie: inmueble.superficie,\n                tipoInmueble: inmueble.tipoInmueble,\n                tipoOperacion: inmueble.tipoOperacion,\n                ubicacion: inmueble.ubicacion\n            });\n                        \n            const listaInmuebles = await this.inmuebleRepository.findAndCount();\n            return listaInmuebles;\n    }\n\n    async delete(id: number){\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'})\n        \n        await this.inmuebleRepository.delete({\n            id: id\n        });\n                \n        const listaInmuebles = await this.inmuebleRepository.findAndCount();\n        return listaInmuebles;\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailsController.html":{"url":"controllers/MailsController.html","title":"controller - MailsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mails/mails.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mails\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmailForm\n                            \n                            \n                                    Async\n                                sendEmailPassword\n                            \n                            \n                                    Async\n                                sendEmailWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailForm(name: string, surname: string, email: string, reason: string, message: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/form')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    surname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailPassword(email: string, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailWelcome\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailWelcome(email: string, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/welcome')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, Query } from '@nestjs/common';\nimport { MailsService } from './mails.service';\n\n@Controller('mails')\nexport class MailsController {\n    \n    constructor(private readonly mailsService: MailsService) {}\n\n    @Post('/welcome')\n    async sendEmailWelcome(@Query('email') email: string, @Query('name') name: string) {        \n        return await this.mailsService.sendMailWelcome(email, name);\n    }\n\n    @Post('/send')\n    async sendEmailPassword(@Query('email') email: string, @Query('name') name: string) {        \n        return await this.mailsService.sendMailPassword(email, name);\n    } \n\n    @Post('/form')\n    async sendEmailForm(@Query('name') name: string, @Query('surname') surname: string, @Query('email') email: string, @Query('reason') reason: string, @Query('message') message: string ) {        \n        return await this.mailsService.sendMailForm(name, surname, email, reason, message);\n    } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailsModule.html":{"url":"modules/MailsModule.html","title":"module - MailsModule","body":"\n                   \n\n\n\n\n    Modules\n    MailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailsModule\n\n\n\ncluster_MailsModule_providers\n\n\n\n\nMailsService\n\nMailsService\n\n\n\nMailsModule\n\nMailsModule\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mails/mails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config/dist/config.service';\nimport { join } from 'path';\nimport { MailsController } from './mails.controller';\nimport { MailsService } from './mails.service';\n\n@Module({\n    imports:[MailerModule.forRootAsync({\n        imports: [ConfigModule],\n        useFactory: async (config: ConfigService) => ({\n            envFilePath: '.env', //fichero con las variables globales\n            transport: {\n            host: config.get('EMAIL_HOST'),\n            secure: true,\n            port:465,\n            auth: {\n              user: config.get('EMAIL_USER'),\n              pass: config.get('EMAIL_PASSWORD'),\n            },\n          },\n          defaults: {\n            from: ''\n          },\n          template: {\n            dir: join(__dirname, './templates'),\n            adapter: new HandlebarsAdapter(),\n            options: {\n              strict: false\n            }\n          }\n        }),\n        inject: [ConfigService]\n      })],\n    providers: [MailsService],\n    controllers: [MailsController]\n})\n\nexport class MailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailsService.html":{"url":"injectables/MailsService.html","title":"injectable - MailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mails/mails.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMailForm\n                            \n                            \n                                    Async\n                                sendMailPassword\n                            \n                            \n                                    Async\n                                sendMailWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mails/mails.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailForm(name: string, surname: string, email: string, reason: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    surname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailPassword(email: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailWelcome\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailWelcome(email: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from \"@nestjs-modules/mailer\";\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailsService {\n\n    constructor(private mailerService: MailerService) {}\n\n    async sendMailWelcome(email: string, name: string) {\n\n        await this.mailerService.sendMail({\n            to: email,\n            subject: 'Creacion Usuario Golden Houses',\n            template: '/emailBienvenida',\n            context: {\n                name: name,\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n\n    async sendMailPassword(email: string, name: string) {\n        \n\n        await this.mailerService.sendMail({\n            to: email,\n            subject: 'Recuperar Contraseña Golden Houses',\n            template: '/emailContraseña',\n            context: {\n                name: name\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n\n    async sendMailForm(name: string, surname: string, email: string, reason: string, message: string) {\n        \n\n        await this.mailerService.sendMail({\n            to: \"gldhouses@gmail.com\",\n            subject: 'Formulario de Contacto',\n            template: '/emailForm',\n            context: {\n                name: name,\n                surname: surname,\n                email: email,\n                reason: reason,\n                message: message\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInmuebleDto.html":{"url":"classes/UpdateInmuebleDto.html","title":"class - UpdateInmuebleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/dto/update-imagenes.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateImagenesDto } from './create-imagenes.dto';\n\nexport class UpdateInmuebleDto extends PartialType(CreateImagenesDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInmuebleDto-1.html":{"url":"classes/UpdateInmuebleDto-1.html","title":"class - UpdateInmuebleDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/dto/update-inmueble.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateInmuebleDto } from './create-inmueble.dto';\n\nexport class UpdateInmuebleDto extends PartialType(CreateInmuebleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsuarioDto.html":{"url":"classes/UpdateUsuarioDto.html","title":"class - UpdateUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/dto/update-usuario.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUsuarioDto } from './create-usuarios.dto';\n\nexport class UpdateUsuarioDto extends PartialType(CreateUsuarioDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsuariosController.html":{"url":"controllers/UsuariosController.html","title":"controller - UsuariosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsuariosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                usuarios\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                comprobarContraseña\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findByNombre\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        comprobarContraseña\n                        \n                    \n                \n            \n            \n                \ncomprobarContraseña(usser: UpdateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usser\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(nombreUsuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(correo: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByNombre\n                        \n                    \n                \n            \n            \n                \nfindByNombre(nombreUsuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(nombreUsuario: string, data: UpdateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Put(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Put, ParseIntPipe, HttpStatus, HttpCode, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { CreateUsuarioDto } from './dto/create-usuarios.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\n\n@Controller('usuarios')\nexport class UsuariosController {\n  \n  constructor(private readonly usuariosService: UsuariosService) {}\n\n  \n  @Get()\n  @HttpCode(HttpStatus.OK)\n  findAll() {\n    return this.usuariosService.findAll();\n  }\n\n  @Post('/password')\n  @HttpCode(HttpStatus.OK)\n  comprobarContraseña(@Body() usser: UpdateUsuarioDto) {\n    return this.usuariosService.comprobarPassword(usser);\n  }\n  \n  @Get(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  findByNombre(@Param('nombreUsuario') nombreUsuario: string) {\n    return this.usuariosService.findByNombre(nombreUsuario);\n  }\n\n  @Post('email')\n  @HttpCode(HttpStatus.OK)\n  findByEmail(@Body() correo: any) {\n    return this.usuariosService.findByEmail(correo.correo);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  create(@Body() data: CreateUsuarioDto) {\n    return this.usuariosService.create(data);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Put(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  update(@Param('nombreUsuario') nombreUsuario: string, @Body() data: UpdateUsuarioDto) {\n    return this.usuariosService.update(nombreUsuario, data);\n  }\n\n  @Delete(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  delete(@Param('nombreUsuario') nombreUsuario: string) {\n    return this.usuariosService.delete(nombreUsuario);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UsuariosEntity.html":{"url":"entities/UsuariosEntity.html","title":"entity - UsuariosEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UsuariosEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/entities/usuarios.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contraseña\n                            \n                            \n                                correo\n                            \n                            \n                                inmuebles\n                            \n                            \n                                nombreUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contraseña\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inmuebles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InmueblesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, inmuebleEntity => inmuebleEntity.vendedor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { InmueblesEntity } from \"src/inmuebles/entities/inmuebles.entity\";\nimport { Column, Entity, OneToMany, PrimaryColumn } from \"typeorm\";\n\n@Entity({name: 'usuarios'})\nexport class UsuariosEntity{\n\n    @PrimaryColumn()\n    nombreUsuario: string;\n\n    @Column({type: 'varchar', length: 100, nullable: false})\n    contraseña: string;\n    \n    @Column({type: 'varchar', nullable: false})\n    correo: string;\n\n    @OneToMany(() => InmueblesEntity, (inmuebleEntity) => inmuebleEntity.vendedor)\n    inmuebles: InmueblesEntity[]; \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuariosModule.html":{"url":"modules/UsuariosModule.html","title":"module - UsuariosModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuariosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsuariosModule\n\n\n\ncluster_UsuariosModule_providers\n\n\n\n\nUsuariosService\n\nUsuariosService\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nUsuariosModule -->\n\nUsuariosService->UsuariosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/usuarios/usuarios.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsuariosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsuariosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { UsuariosController } from './usuarios.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuariosEntity } from './entities/usuarios.entity';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([UsuariosEntity])],\n  providers: [UsuariosService],\n  controllers: [UsuariosController]\n})\nexport class UsuariosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsuariosRepository.html":{"url":"classes/UsuariosRepository.html","title":"class - UsuariosRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsuariosRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { UsuariosEntity } from \"./entities/usuarios.entity\";\n\n@EntityRepository(UsuariosEntity)\nexport class UsuariosRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsuariosService.html":{"url":"injectables/UsuariosService.html","title":"injectable - UsuariosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsuariosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comprobarPassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findByNombre\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioRepository: UsuariosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/usuarios.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        UsuariosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        comprobarPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    comprobarPassword(usser: UpdateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usser\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(correo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByNombre\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByNombre(nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(nombreUsuario: string, data: UpdateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsuarioDto } from './dto/create-usuarios.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\nimport { UsuariosEntity } from './entities/usuarios.entity';\nimport { UsuariosRepository } from './usuarios.repository';\n//import * as bcrypt from 'bcrypt';\nimport * as bcrypt from 'bcryptjs';\n\n\n@Injectable()\nexport class UsuariosService {\n\n    constructor(\n        @InjectRepository(UsuariosEntity) private usuarioRepository: UsuariosRepository\n    ) { }\n\n    async findAll(): Promise {\n        const usuarios = await this.usuarioRepository.createQueryBuilder(\"usuario\").getMany();\n\n        if (!usuarios.length) {\n            throw new NotFoundException({ message: 'No hay usuarios' })\n        }\n        return usuarios;\n    }\n\n    async findByNombre(nombreUsuario: string): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: nombreUsuario\n            }\n        });\n\n        if(!usuario) throw new NotFoundException({ message: 'Usuario Incorrecto' });\n\n        return usuario;\n    }\n\n    async findByEmail(correo: string): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                correo: correo\n            }\n        });\n        \n        if (!usuario) {\n            throw new NotFoundException({ message: 'No hay usuario' })\n        }\n        return usuario;\n    }\n\n    async comprobarPassword(usser: UpdateUsuarioDto): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: usser.nombreUsuario,\n            }\n        });\n\n        if (!usuario) {\n            throw new NotFoundException({ message: 'No hay usuario' })\n        }\n        const isMatch = await bcrypt.compare(usser.contraseña, usuario.contraseña);\n        \n        return isMatch;\n    }\n\n    async create(data: CreateUsuarioDto): Promise {\n\n        const exists = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario: data.nombreUsuario\n            }\n        });\n\n        if(exists) throw new BadRequestException({message: 'Ese usuario ya existe'}) \n        \n        const contraseñaHash = await bcrypt.hash(data.contraseña, 10);\n        data.contraseña = contraseñaHash; \n        const newUsuario = this.usuarioRepository.create(data);\n        await this.usuarioRepository.save(newUsuario);\n        return newUsuario;\n    }\n\n    async update(nombreUsuario: string, data: UpdateUsuarioDto): Promise{\n\n        const usuario = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario: nombreUsuario\n            }\n        });\n        \n        if(!usuario) throw new BadRequestException({message: 'Ese nombre de usuario ya existe'})\n        \n        if(data.nombreUsuario && data.nombreUsuario !== '') {\n            usuario.nombreUsuario = data.nombreUsuario;        \n        }\n        \n        if(data.contraseña === usuario.contraseña){\n            \n            usuario.contraseña = data.contraseña;\n\n        }else{\n\n            const contraseñaHash = await bcrypt.hash(data.contraseña, 10);\n            \n            data.contraseña = contraseñaHash;\n            \n            usuario.contraseña = data.contraseña;        \n        }\n\n        if(data.correo && data.correo !== '') {\n\n            usuario.correo = data.correo;        \n        }\n\n        await this.usuarioRepository.update({\n            nombreUsuario: nombreUsuario\n        },{\n            nombreUsuario: usuario.nombreUsuario,\n            contraseña: usuario.contraseña,\n            correo: usuario.correo\n        })\n      \n        return usuario;\n    }\n\n    async delete(nombreUsuario: string){\n        const usuario = await this.findByNombre(nombreUsuario);\n\n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'})\n        \n        await this.usuarioRepository.delete({\n            nombreUsuario: nombreUsuario\n        })\n     \n        return {message: 'usuario eliminado'};\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_DATABASE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            SERVER_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/dto/create-imagenes.dto.ts\n            \n            class\n            CreateImagenesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/imagenes/dto/update-imagenes.dto.ts\n            \n            class\n            UpdateInmuebleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/entities/imagenes.entity.ts\n            \n            entity\n            ImagenesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/helpers/imagenes.helper.ts\n            \n            variable\n            fileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/helpers/imagenes.helper.ts\n            \n            variable\n            renameImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.controller.ts\n            \n            controller\n            ImagenesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.repository.ts\n            \n            class\n            ImagenesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.service.ts\n            \n            injectable\n            ImagenesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/inmuebles/dto/create-inmueble.dto.ts\n            \n            class\n            CreateInmuebleDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/inmuebles/dto/update-inmueble.dto.ts\n            \n            class\n            UpdateInmuebleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/entities/inmuebles.entity.ts\n            \n            entity\n            InmueblesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.controller.ts\n            \n            controller\n            InmueblesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.repository.ts\n            \n            class\n            InmueblesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.service.ts\n            \n            injectable\n            InmueblesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/mails/mails.controller.ts\n            \n            controller\n            MailsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mails/mails.service.ts\n            \n            injectable\n            MailsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/dto/create-usuarios.dto.ts\n            \n            class\n            CreateUsuarioDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/usuarios/dto/update-usuario.dto.ts\n            \n            class\n            UpdateUsuarioDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/entities/usuarios.entity.ts\n            \n            entity\n            UsuariosEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.controller.ts\n            \n            controller\n            UsuariosController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.repository.ts\n            \n            class\n            UsuariosRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.service.ts\n            \n            injectable\n            UsuariosService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.6.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.4\n        \n            @types/nodemailer : ^6.4.4\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            mysql2 : ^2.3.3\n        \n            nodemailer : ^6.7.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagenesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InmueblesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuariosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ImagenesModule\n\n\n\ncluster_ImagenesModule_providers\n\n\n\ncluster_InmueblesModule\n\n\n\ncluster_InmueblesModule_providers\n\n\n\ncluster_UsuariosModule\n\n\n\ncluster_UsuariosModule_providers\n\n\n\n\nImagenesModule\n\nImagenesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nImagenesModule->AppModule\n\n\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nAppModule -->\n\nInmueblesModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nAppModule -->\n\nUsuariosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\nAppModule -->\n\nMailsService->AppModule\n\n\n\n\n\nImagenesService\n\nImagenesService\n\nImagenesModule -->\n\nImagenesService->ImagenesModule\n\n\n\n\n\nInmueblesService\n\nInmueblesService\n\nInmueblesModule -->\n\nInmueblesService->InmueblesModule\n\n\n\n\n\nUsuariosService\n\nUsuariosService\n\nUsuariosModule -->\n\nUsuariosService->UsuariosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DB_DATABASE   (src/.../constants.ts)\n                        \n                        \n                            DB_HOST   (src/.../constants.ts)\n                        \n                        \n                            DB_PASSWORD   (src/.../constants.ts)\n                        \n                        \n                            DB_PORT   (src/.../constants.ts)\n                        \n                        \n                            DB_USER   (src/.../constants.ts)\n                        \n                        \n                            fileFilter   (src/.../imagenes.helper.ts)\n                        \n                        \n                            renameImage   (src/.../imagenes.helper.ts)\n                        \n                        \n                            SERVER_PORT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_DATABASE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_HOST'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_PASSWORD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_PORT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_USER'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SERVER_PORT'\n                    \n                \n\n\n        \n    \n\n    src/imagenes/helpers/imagenes.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    if(!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)){\n        return callback (new Error('Invalid format type'), false);\n    }\n    callback(null, true);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renameImage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback)=>{\n    const name = file.originalname.split('.')[0];\n    const fileName = file.originalname;\n    const randomName = Array(4)\n    . fill(null)\n    .map(()=> Math.round(Math.random() * 16).toString(16))\n    .join('');\n\n    callback(null, `${name}-${randomName}${fileName}`);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
