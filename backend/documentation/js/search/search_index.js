var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.179,1,2.149]],["body/controllers/AppController.html",[0,1.907,1,3.474,2,1.537,3,0.363,4,0.315,5,0.268,6,3.592,7,0.826,8,2.059,9,5.066,10,1.537,11,0.029,12,1.051,13,4.28,14,1.66,15,1.408,16,0.45,17,1.051,18,3.109,19,3.592,20,0.363,21,0.085,22,2.305,23,2.305,24,1.66,25,4.28,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,1.273,29,2.149]],["body/modules/AppModule.html",[1,2.855,2,1.319,3,0.211,4,0.183,5,0.156,11,0.03,16,0.532,17,0.612,18,2.894,19,2.091,20,0.211,21,0.049,26,0.016,27,0.016,28,1.424,29,4.111,30,1.131,31,1.668,32,2.091,33,2.091,34,2.091,35,3.177,36,3.177,37,3.177,38,3.177,39,2.652,40,1.978,41,1.342,42,1.342,43,2.491,44,2.172,45,2.58,46,3.662,47,3.673,48,3.083,49,4.042,50,1.827,51,1.63,52,1.131,53,2.491,54,2.491,55,2.491,56,1.473,57,2.491,58,1.23,59,2.491,60,2.491,61,2.091,62,2.404,63,1.63,64,2.091,65,2.091,66,1.473,67,1.23,68,2.491,69,2.491,70,2.491,71,3.673,72,2.091,73,2.091,74,2.091,75,2.091,76,3.662,77,2.404,78,2.091,79,2.491,80,1.827,81,3.673,82,2.491,83,2.491,84,2.491,85,2.491,86,2.491,87,2.491,88,2.491,89,2.491,90,2.491,91,2.091,92,0.565,93,2.491,94,2.091,95,2.491,96,2.491,97,2.491,98,2.491,99,2.491,100,2.091,101,2.491,102,2.491,103,2.491,104,1.473,105,2.091,106,2.491,107,2.491,108,1.978,109,2.491,110,2.491,111,2.491,112,2.091]],["title/injectables/AppService.html",[18,1.769,113,1.179]],["body/injectables/AppService.html",[3,0.379,4,0.329,5,0.28,7,0.863,8,2.115,9,5.144,11,0.029,12,1.098,14,1.734,15,1.447,16,0.379,17,1.098,18,2.939,20,0.379,21,0.089,24,1.734,26,0.024,27,0.024,113,1.959,114,2.41,115,3.755,116,4.474,117,4.474,118,4.474]],["title/classes/CreateImagenesDto.html",[21,0.065,119,1.941]],["body/classes/CreateImagenesDto.html",[3,0.354,4,0.307,5,0.262,7,0.807,10,1.879,11,0.029,12,1.285,15,1.587,16,0.354,20,0.354,21,0.104,26,0.023,27,0.023,67,2.82,92,1.188,119,3.094,120,1.621,121,4.794,122,3.067,123,2.377,124,3.077,125,3.838,126,4.182,127,4.182,128,4.189,129,4.189,130,2.736]],["title/classes/CreateInmuebleDto.html",[21,0.065,131,1.769]],["body/classes/CreateInmuebleDto.html",[3,0.226,4,0.196,5,0.167,7,0.513,10,2.126,11,0.029,12,1.454,15,1.594,16,0.384,20,0.226,21,0.076,23,3.552,26,0.017,27,0.017,92,1.344,120,1.032,123,1.751,125,3.869,128,4.41,129,4.034,130,1.741,131,2.076,132,5.047,133,1.952,134,3.324,135,3.324,136,2.966,137,3.804,138,3.324,139,3.324,140,3.324,141,3.324,142,2.966,143,2.868,144,4.97,145,2.661,146,2.661,147,2.661,148,2.661,149,2.661,150,2.661,151,2.661,152,2.661,153,2.661,154,5.275,155,5.275,156,1.314,157,1.952,158,1.741,159,1.032,160,1.952]],["title/classes/CreateUsuarioDto.html",[21,0.065,156,1.621]],["body/classes/CreateUsuarioDto.html",[3,0.33,4,0.287,5,0.244,7,0.752,10,1.985,11,0.029,12,1.357,15,1.637,16,0.33,20,0.33,21,0.099,26,0.022,27,0.022,92,1.255,120,1.511,123,2.273,125,4.055,128,4.279,129,4.279,130,2.55,156,2.471,157,4.279,161,3.271,162,3.618,163,3.618,164,3.269,165,3.898,166,3.898,167,3.898,168,3.898,169,3.898,170,3.898,171,3.898]],["title/controllers/ImagenesController.html",[0,1.179,56,1.941]],["body/controllers/ImagenesController.html",[0,1.01,2,1.01,3,0.238,4,0.207,5,0.176,7,0.543,8,1.555,10,1.679,11,0.029,12,1.148,14,1.813,16,0.457,17,0.69,20,0.238,21,0.056,22,1.515,23,1.515,24,1.813,26,0.018,27,0.018,56,2.371,58,2.308,67,1.98,92,0.91,124,1.515,143,2.766,172,2.36,173,1.84,174,2.063,175,2.962,176,3.366,177,4.011,178,3.366,179,2.36,180,4.703,181,4.011,182,2.812,183,2.124,184,1.96,185,2.124,186,3.739,187,2.812,188,4.011,189,2.812,190,2.903,191,2.36,192,4.278,193,3.429,194,2.812,195,2.812,196,1.663,197,2.063,198,2.812,199,1.84,200,1.84,201,2.36,202,2.812,203,2.36,204,3.366,205,2.36,206,2.36,207,2.36,208,2.063,209,2.063,210,4.011,211,2.36,212,3.429,213,2.942,214,2.812,215,2.36,216,2.812,217,2.812,218,2.812,219,2.36,220,2.812,221,2.812,222,2.812,223,2.812,224,2.518,225,2.812,226,2.812,227,1.84,228,2.812,229,2.812,230,2.812,231,2.812]],["title/entities/ImagenesEntity.html",[232,1.621,233,1.621]],["body/entities/ImagenesEntity.html",[3,0.285,4,0.248,5,0.211,7,0.65,10,1.978,11,0.029,12,1.353,15,1.461,16,0.385,20,0.285,21,0.067,26,0.02,27,0.02,67,2.54,92,1.251,104,1.991,108,2.968,123,2.065,124,2.772,143,2.244,174,2.47,190,2.772,227,3.765,232,1.662,233,2.244,234,2.827,235,4.041,236,4.041,237,4.041,238,3.368,239,4.319,240,3.368,241,2.136,242,2.827,243,3.816,244,4.546,245,3.816,246,4.319,247,3.816,248,2.827,249,3.368,250,3.368,251,3.368,252,2.47,253,2.827,254,3.816,255,1.412,256,2.47,257,2.827]],["title/modules/ImagenesModule.html",[28,1.273,35,1.941]],["body/modules/ImagenesModule.html",[2,1.814,3,0.335,4,0.291,5,0.248,11,0.029,16,0.525,17,0.971,20,0.335,21,0.078,26,0.022,27,0.022,28,1.959,30,1.796,31,2.294,35,3.664,40,2.721,41,2.13,42,2.13,44,2.986,51,2.587,52,1.796,56,3.291,58,3.059,215,3.319,233,1.952,241,1.533,258,3.319,259,3.319,260,3.954,261,2.9,262,2.9,263,3.954,264,3.954]],["title/classes/ImagenesRepository.html",[21,0.065,265,2.149]],["body/classes/ImagenesRepository.html",[3,0.395,4,0.343,5,0.292,11,0.028,16,0.474,20,0.395,21,0.092,26,0.025,27,0.025,120,1.809,233,2.303,255,1.956,262,3.421,265,3.662,266,3.915,267,3.014,268,3.923,269,3.421,270,4.665]],["title/injectables/ImagenesService.html",[58,1.621,113,1.179]],["body/injectables/ImagenesService.html",[3,0.213,4,0.184,5,0.231,7,0.484,8,1.431,11,0.03,12,1.186,14,1.699,16,0.503,17,0.616,20,0.213,21,0.05,24,1.431,26,0.016,27,0.016,52,1.139,58,1.822,66,1.483,67,2.162,92,0.994,113,1.326,114,1.351,119,1.483,124,1.351,143,2.659,175,2.879,176,3.099,178,3.099,179,3.099,180,3.677,183,2.195,184,2.026,185,2.195,190,2.774,191,3.099,192,4.521,193,3.213,196,2.183,224,2.36,227,2.867,233,1.238,241,0.972,255,1.051,261,1.84,262,1.84,265,3.525,271,2.105,272,3.692,273,2.416,274,2.508,275,3.677,276,2.857,277,2.508,278,2.508,279,3.692,280,2.508,281,2.508,282,1.84,283,1.84,284,2.508,285,2.508,286,2.508,287,2.105,288,1.483,289,2.105,290,2.508,291,2.508,292,2.708,293,2.105,294,3.185,295,3.099,296,2.105,297,1.84,298,1.351,299,1.84,300,1.84,301,1.84,302,2.508,303,2.508,304,2.508,305,3.692,306,2.508,307,2.508,308,2.508,309,2.508,310,2.508,311,2.508,312,2.508,313,2.508,314,2.508,315,2.508]],["title/controllers/InmueblesController.html",[0,1.179,316,2.149]],["body/controllers/InmueblesController.html",[0,0.605,2,0.605,3,0.143,4,0.124,5,0.105,7,0.325,8,1.052,10,1.801,11,0.029,12,1.231,14,1.944,15,1.639,16,0.388,17,0.413,20,0.143,21,0.033,22,0.907,23,0.907,24,1.944,26,0.012,27,0.012,92,1.138,131,2.106,136,2.23,142,2.999,143,3.25,173,1.102,183,2.278,184,2.102,185,2.278,190,2.469,197,2.5,199,1.102,200,1.102,203,1.413,204,1.413,205,1.413,206,1.413,207,1.413,208,1.235,209,1.235,211,2.277,288,0.995,316,1.776,317,1.413,318,1.235,319,1.339,320,2.277,321,1.776,322,2.277,323,2.277,324,2.277,325,2.714,326,1.776,327,1.683,328,3.154,329,3.281,330,1.683,331,1.683,332,1.99,333,1.413,334,2.861,335,2.861,336,2.277,337,2.861,338,3.281,339,3.281,340,3.281,341,4.345,342,4.849,343,1.683,344,1.683,345,1.413,346,4.209,347,1.683,348,1.683,349,1.413,350,1.683,351,1.683,352,1.413,353,1.683,354,1.683,355,1.413,356,2.558,357,1.683,358,1.683,359,1.683,360,1.683,361,1.683,362,1.413,363,1.93,364,1.683,365,1.683,366,1.102,367,1.413,368,2.861,369,1.413,370,1.413,371,1.413,372,1.413,373,1.413,374,1.683,375,1.836,376,1.413,377,1.99,378,1.102,379,1.683,380,1.683,381,4.046,382,1.683,383,3.409,384,2.714,385,1.683,386,1.683,387,1.683,388,1.683,389,1.683,390,1.683,391,1.683,392,1.683,393,1.683,394,1.683,395,1.683,396,1.683,397,1.683,398,1.683,399,1.683,400,1.683,401,1.683,402,1.683,403,1.683,404,1.683,405,1.683,406,1.683,407,1.683,408,1.683,409,1.683,410,1.683,411,2.277,412,1.683,413,1.413,414,1.683,415,1.683,416,1.683,417,1.683,418,1.683,419,1.683,420,1.683,421,1.683]],["title/entities/InmueblesEntity.html",[232,1.621,241,1.273]],["body/entities/InmueblesEntity.html",[3,0.192,4,0.167,5,0.142,7,0.438,10,2.111,11,0.029,12,1.443,15,1.471,16,0.35,20,0.192,21,0.045,26,0.015,27,0.015,92,1.334,104,1.341,108,3.332,123,1.556,134,3.027,135,3.027,136,2.7,137,2.875,138,3.027,139,3.027,140,3.027,141,3.027,142,2.7,143,2.856,159,2.012,174,3.027,190,2.223,193,2.512,232,1.12,233,2.269,235,4.537,236,4.069,237,4.537,239,3.464,241,1.328,242,1.904,245,2.875,246,3.464,247,2.875,248,1.904,252,1.664,253,1.904,254,2.875,255,0.951,256,1.664,257,1.904,318,1.664,332,3.027,422,1.904,423,5.548,424,2.268,425,4.656,426,5.548,427,2.268,428,2.268,429,2.268,430,1.904,431,3.425,432,2.268,433,2.268,434,2.268,435,2.268,436,2.268,437,2.268,438,3.425,439,2.268,440,2.268,441,2.268,442,2.875]],["title/modules/InmueblesModule.html",[28,1.273,36,1.941]],["body/modules/InmueblesModule.html",[2,1.814,3,0.335,4,0.291,5,0.248,11,0.029,16,0.525,17,0.971,20,0.335,21,0.078,26,0.022,27,0.022,28,1.959,30,1.796,31,2.294,36,3.664,40,2.721,41,2.13,42,2.13,44,2.986,51,2.587,52,1.796,159,1.533,160,2.9,241,1.533,316,3.642,375,3.338,376,3.319,443,3.319,444,3.319,445,3.954,446,2.9,447,3.954,448,3.954]],["title/classes/InmueblesRepository.html",[21,0.065,276,1.941]],["body/classes/InmueblesRepository.html",[3,0.395,4,0.343,5,0.292,11,0.028,16,0.474,20,0.395,21,0.092,26,0.025,27,0.025,120,1.809,241,1.809,255,1.956,267,3.014,268,3.923,269,3.421,276,3.308,446,3.421,449,3.915,450,4.665]],["title/injectables/InmueblesService.html",[113,1.179,375,1.769]],["body/injectables/InmueblesService.html",[3,0.103,4,0.09,5,0.076,7,0.235,8,0.805,11,0.03,12,1.125,14,1.703,15,1.548,16,0.388,17,0.299,20,0.103,21,0.024,24,1.703,26,0.009,27,0.009,52,0.554,92,1.04,113,0.745,114,0.656,131,1.724,134,1.522,135,0.894,136,2.349,138,1.522,139,1.522,140,1.522,141,2.348,142,2.997,143,3.158,159,0.473,160,0.894,164,2.465,175,2.882,183,2.081,184,1.92,185,2.081,186,3.831,190,2.76,196,0.72,224,2.7,227,3.418,241,0.473,255,0.511,273,1.358,275,1.742,276,1.892,282,0.894,283,0.894,287,1.023,288,0.72,292,1.522,293,1.023,294,2.964,295,2.275,296,1.742,297,2.348,298,1.724,299,2.348,300,2.348,301,2.348,319,1.025,320,1.742,321,1.358,322,1.742,323,1.742,324,1.742,326,1.358,328,2.556,332,0.894,333,1.742,334,3.013,335,2.687,336,2.275,337,2.687,338,2.275,339,2.275,340,2.687,341,3.5,342,4.384,345,1.742,346,3.686,349,1.742,352,1.742,355,1.742,356,2.094,362,1.742,363,1.58,366,1.358,375,1.118,377,1.522,378,0.797,446,0.894,451,1.023,452,1.219,453,2.275,454,1.892,455,1.219,456,2.076,457,1.219,458,2.076,459,1.219,460,1.219,461,1.219,462,1.219,463,1.219,464,1.219,465,1.219,466,1.023,467,1.219,468,1.219,469,1.219,470,1.219,471,1.219,472,1.219,473,1.023,474,2.076,475,3.907,476,2.711,477,2.711,478,2.076,479,1.219,480,1.219,481,1.219,482,1.219,483,1.219,484,1.219,485,1.219,486,1.219,487,1.219,488,1.219,489,1.219,490,1.219,491,1.219,492,1.219,493,1.219,494,1.219,495,1.219,496,1.219,497,1.219,498,1.219,499,1.219,500,1.219,501,1.219,502,1.219,503,2.275,504,2.076,505,1.742,506,2.076,507,1.219,508,1.219,509,1.219,510,1.219,511,2.076,512,1.219,513,1.219,514,2.076,515,1.219,516,1.219,517,2.076,518,1.219,519,1.219,520,2.076,521,1.219,522,1.219,523,2.076,524,1.219,525,1.219,526,2.076,527,1.219,528,1.219,529,2.076,530,1.219,531,1.219,532,2.076,533,1.219,534,1.219,535,3.201,536,1.219]],["title/controllers/MailsController.html",[0,1.179,45,1.941]],["body/controllers/MailsController.html",[0,1.217,2,1.217,3,0.287,4,0.249,5,0.212,7,0.654,8,1.77,10,1.639,11,0.029,12,1.121,14,1.77,15,1.703,16,0.387,17,0.832,20,0.287,21,0.067,22,1.825,23,1.825,24,1.77,26,0.02,27,0.02,39,2.548,45,2.699,92,1.036,173,2.218,175,2.932,183,2.074,184,2.649,185,2.074,196,2.699,199,2.218,200,2.218,224,2.459,373,2.844,537,2.844,538,3.389,539,4.565,540,4.565,541,3.389,542,4.565,543,3.389,544,4.636,545,3.389,546,4.565,547,3.389,548,2.844,549,3.389,550,3.389,551,4.565,552,3.389,553,3.389,554,3.389]],["title/modules/MailsModule.html",[28,1.273,37,1.941]],["body/modules/MailsModule.html",[2,1.58,3,0.272,4,0.236,5,0.201,11,0.03,16,0.516,17,0.788,20,0.272,21,0.064,26,0.019,27,0.019,28,1.706,30,1.458,31,1.998,37,3.455,39,2.884,40,2.37,41,1.729,42,1.729,44,2.601,45,2.968,46,2.694,48,3.692,49,4.213,50,2.354,61,2.694,62,2.879,63,2.1,64,3.692,65,2.694,66,1.897,67,1.584,72,2.694,73,2.694,74,2.694,75,2.694,76,2.694,77,2.1,78,2.694,80,2.354,91,2.694,94,2.694,108,1.729,112,2.694,175,1.584,298,1.729,548,2.694,555,3.21,556,3.21,557,3.21,558,3.21,559,3.21,560,3.21,561,3.21,562,3.21,563,3.21,564,3.21,565,3.21,566,3.21,567,3.21,568,3.21,569,3.21,570,3.21,571,3.21,572,2.694,573,3.21,574,3.21,575,3.21,576,3.21,577,3.21,578,3.21]],["title/injectables/MailsService.html",[39,1.621,113,1.179]],["body/injectables/MailsService.html",[3,0.252,4,0.219,5,0.186,7,0.574,8,1.618,11,0.029,12,1.183,14,1.618,15,1.666,16,0.354,17,0.73,20,0.252,21,0.059,22,1.601,26,0.018,27,0.018,39,2.059,62,1.945,63,1.945,67,2.059,92,1.094,100,4.045,105,3.502,113,1.498,114,1.601,124,2.247,162,1.945,175,2.817,183,2.189,184,2.655,185,2.189,224,2.247,273,1.945,294,1.758,356,1.945,544,4.386,572,3.502,579,2.495,580,4.172,581,4.172,582,2.973,583,5.706,584,2.973,585,4.172,586,2.973,587,4.172,588,2.973,589,4.172,590,4.172,591,2.973,592,4.172,593,4.172,594,2.973,595,4.172,596,4.172,597,4.172,598,4.172,599,4.172,600,4.172,601,2.495,602,2.973,603,2.973]],["title/classes/UpdateInmuebleDto.html",[21,0.065,363,1.621]],["body/classes/UpdateInmuebleDto.html",[3,0.395,4,0.343,5,0.292,11,0.029,16,0.474,20,0.395,21,0.092,26,0.025,27,0.025,119,2.758,120,1.809,122,3.421,267,2.513,289,3.915,319,2.303,363,2.762,604,3.915,605,3.421,606,3.052,607,3.052,608,4.665]],["title/classes/UpdateInmuebleDto-1.html",[21,0.054,363,1.357,601,2.307]],["body/classes/UpdateInmuebleDto-1.html",[3,0.395,4,0.343,5,0.292,11,0.029,16,0.474,20,0.395,21,0.092,26,0.025,27,0.025,120,1.809,131,2.513,133,3.421,267,2.513,319,2.303,363,2.762,377,3.421,605,3.421,606,3.052,607,3.052,609,3.915,610,4.665]],["title/classes/UpdateUsuarioDto.html",[21,0.065,611,1.941]],["body/classes/UpdateUsuarioDto.html",[3,0.395,4,0.343,5,0.292,11,0.029,16,0.474,20,0.395,21,0.092,26,0.025,27,0.025,120,1.809,156,2.303,158,3.052,267,2.513,319,2.303,605,3.421,606,3.052,607,3.052,611,3.308,612,3.915,613,3.915,614,4.665]],["title/controllers/UsuariosController.html",[0,1.179,615,2.149]],["body/controllers/UsuariosController.html",[0,0.865,2,0.865,3,0.204,4,0.177,5,0.151,7,0.465,8,1.389,10,1.974,11,0.03,12,1.349,14,2.131,15,1.53,16,0.402,17,0.591,20,0.204,21,0.048,22,1.297,23,1.297,24,2.131,26,0.016,27,0.016,92,1.205,156,2.338,158,1.576,163,2.344,164,3.138,173,1.576,183,2.411,184,2.225,185,2.411,197,2.628,199,1.576,200,2.344,288,1.424,319,1.768,321,3.1,326,2.344,328,3.473,329,3.976,366,2.799,367,2.021,368,2.021,369,2.021,370,2.021,371,2.021,372,2.021,378,1.576,381,4.455,411,3.007,413,2.021,611,3.25,615,2.344,616,2.021,617,1.766,618,3.583,619,3.007,620,3.007,621,2.409,622,2.409,623,2.409,624,3.007,625,2.021,626,2.409,627,2.409,628,2.021,629,2.409,630,2.409,631,2.409,632,2.409,633,2.021,634,2.409,635,2.409,636,2.021,637,2.409,638,2.409,639,2.021,640,2.409,641,2.409,642,2.304,643,2.021,644,2.021,645,2.409,646,2.409,647,2.409,648,2.409,649,2.409,650,2.409,651,2.409,652,2.409,653,2.409,654,2.409,655,2.409,656,2.409,657,2.409,658,2.409,659,2.409,660,2.409,661,2.409,662,2.409,663,2.409,664,2.409]],["title/entities/UsuariosEntity.html",[159,1.273,232,1.621]],["body/entities/UsuariosEntity.html",[3,0.295,4,0.256,5,0.218,7,0.673,10,2.006,11,0.029,12,1.372,15,1.588,16,0.394,20,0.295,21,0.069,26,0.02,27,0.02,92,1.268,104,2.061,108,3.009,123,2.113,159,1.804,162,3.427,163,3.427,164,3.096,232,1.721,235,4.098,236,4.098,237,4.098,241,2.166,243,3.905,252,2.557,255,1.462,256,2.557,261,2.557,318,3.841,425,3.905,430,2.926,442,3.905,617,2.557,665,2.926,666,4.653,667,3.487,668,3.487,669,4.653,670,3.487,671,5.237,672,3.487]],["title/modules/UsuariosModule.html",[28,1.273,38,1.941]],["body/modules/UsuariosModule.html",[2,1.835,3,0.341,4,0.296,5,0.252,11,0.029,16,0.517,17,0.989,20,0.341,21,0.08,26,0.022,27,0.022,28,1.982,30,1.829,31,2.321,38,3.682,40,2.753,41,2.169,42,2.169,44,3.021,51,2.635,52,1.829,159,1.561,615,3.674,642,3.354,643,3.38,673,3.38,674,3.38,675,4.028,676,4.028,677,2.954,678,4.028]],["title/classes/UsuariosRepository.html",[21,0.065,454,1.941]],["body/classes/UsuariosRepository.html",[3,0.395,4,0.343,5,0.292,11,0.028,16,0.474,20,0.395,21,0.092,26,0.025,27,0.025,120,1.809,159,1.809,255,1.956,267,3.014,268,3.923,269,3.421,454,3.308,677,3.421,679,3.915,680,4.665]],["title/injectables/UsuariosService.html",[113,1.179,642,1.769]],["body/injectables/UsuariosService.html",[3,0.142,4,0.123,5,0.105,7,0.323,8,1.047,11,0.03,12,1.228,14,1.864,15,1.466,16,0.424,17,0.411,20,0.142,21,0.033,24,1.864,26,0.012,27,0.012,52,0.76,92,1.091,113,0.97,114,0.901,156,1.923,158,1.095,159,0.649,162,1.095,163,2.549,164,3.368,175,2.997,183,2.184,184,2.016,185,2.184,186,4.054,196,0.989,224,3.026,273,1.767,282,1.227,283,1.227,288,0.989,292,1.227,294,3.207,297,3.526,298,2.59,299,2.49,300,2.49,301,2.49,319,1.333,321,2.549,326,1.767,328,2.549,356,3.854,366,1.767,378,1.095,453,2.266,454,2.303,466,3.587,473,1.404,503,3.587,505,2.849,611,2.842,617,2.49,619,2.266,620,2.266,624,1.404,625,2.266,628,2.266,633,2.266,636,2.266,639,2.266,642,1.454,644,1.404,677,1.227,681,1.404,682,2.7,683,1.673,684,1.673,685,2.7,686,1.673,687,1.673,688,1.673,689,1.673,690,1.673,691,1.673,692,1.673,693,1.673,694,3.395,695,1.404,696,1.673,697,1.673,698,4.57,699,3.395,700,1.673,701,1.673,702,2.7,703,1.673,704,3.395,705,1.673,706,2.7,707,1.673,708,2.7,709,3.896,710,2.7,711,2.7,712,3.395,713,2.7,714,1.673,715,1.673,716,1.673,717,1.673,718,1.673,719,2.7,720,1.673,721,1.673,722,2.7,723,1.673,724,1.673,725,1.673,726,1.673,727,1.673,728,1.673]],["title/coverage.html",[729,3.278]],["body/coverage.html",[0,1.894,1,1.741,5,0.167,6,2.234,11,0.029,18,1.433,21,0.117,26,0.017,27,0.017,39,1.314,45,1.573,56,1.573,58,1.314,92,0.604,113,1.894,115,2.234,119,1.573,121,2.234,122,2.827,131,1.433,132,2.234,133,2.827,156,1.314,157,1.952,159,1.032,161,2.234,172,2.234,212,1.952,213,1.952,232,2.237,233,1.314,234,2.234,241,1.032,265,1.741,266,2.234,271,2.234,276,1.573,298,1.433,316,1.741,317,2.234,363,1.903,375,1.433,422,2.234,449,2.234,451,2.234,454,1.573,537,2.234,579,2.234,604,2.234,609,2.234,611,1.573,612,2.234,613,2.234,615,1.741,616,2.234,642,1.433,665,2.234,679,2.234,681,2.234,729,1.952,730,2.661,731,2.661,732,2.661,733,6.643,734,3.855,735,4.616,736,5.81,737,2.234,738,6.412,739,2.234,740,2.234,741,2.234,742,2.234,743,2.234,744,3.855,745,3.236,746,4.533,747,2.661,748,3.855,749,3.855,750,2.234,751,2.661,752,2.234,753,2.661,754,2.661,755,2.661]],["title/dependencies.html",[31,1.792,756,2.307]],["body/dependencies.html",[11,0.03,17,0.964,21,0.1,26,0.022,27,0.022,31,1.783,50,2.879,52,1.783,62,2.569,63,2.569,130,2.569,208,2.879,209,3.688,255,1.646,606,2.569,607,2.569,695,3.295,757,3.926,758,5.548,759,3.926,760,3.926,761,3.926,762,3.926,763,3.926,764,3.926,765,3.926,766,3.926,767,3.926,768,3.926,769,3.926,770,3.926,771,3.926,772,3.926,773,3.926,774,3.926,775,3.926,776,3.926,777,3.926,778,3.926,779,3.926,780,3.926,781,3.926,782,3.926,783,3.926,784,3.926,785,3.926,786,3.926,787,3.926]],["title/miscellaneous/functions.html",[788,1.799,789,3.312]],["body/miscellaneous/functions.html",[7,0.971,11,0.026,26,0.026,27,0.026,750,4.222,752,5.193,788,3.292,789,4.222,790,5.031]],["title/index.html",[7,0.53,791,2.749,792,2.749]],["body/index.html",[4,0.267,11,0.029,26,0.021,27,0.021,66,2.143,268,2.372,729,2.659,793,3.626,794,3.626,795,4.775,796,3.626,797,3.626,798,3.626,799,3.626,800,3.626,801,3.626,802,3.043,803,5.339,804,3.626,805,3.626,806,3.626,807,6.173,808,3.626,809,3.626,810,3.626,811,6.055,812,3.626,813,3.626,814,4.775,815,3.626,816,3.626,817,3.626,818,3.626,819,4.775,820,4.775,821,3.626,822,3.626,823,3.626,824,4.775,825,4.775,826,3.626,827,3.626,828,3.626,829,3.626,830,3.626,831,3.043,832,3.626,833,3.626,834,3.626,835,3.626,836,3.626,837,3.626,838,3.626,839,3.626,840,3.626,841,3.043,842,3.626,843,3.626,844,3.626,845,3.626,846,3.626,847,3.626,848,3.043]],["title/modules.html",[30,2.03]],["body/modules.html",[11,0.025,26,0.025,27,0.025,29,3.039,30,2.11,35,2.746,36,2.746,37,2.746,38,2.746,831,5.329,849,6.35,850,6.35,851,6.35]],["title/overview.html",[852,3.751]],["body/overview.html",[2,1.328,11,0.029,18,2.904,26,0.021,27,0.021,29,4.301,30,1.68,31,2.198,32,3.105,33,3.105,34,3.105,35,3.509,36,3.509,37,3.509,38,3.509,39,2.823,40,2.606,41,1.993,42,1.993,58,2.661,104,2.187,114,1.993,120,1.434,219,4.526,258,3.105,259,3.105,375,2.904,443,3.105,444,3.105,642,2.904,673,3.105,674,3.105,852,3.105,853,3.7,854,3.7]],["title/properties.html",[123,1.792,756,2.307]],["body/properties.html",[11,0.029,26,0.026,27,0.026,123,2.254,802,4.165,841,4.165,848,4.165,855,4.962,856,4.962,857,4.962]],["title/miscellaneous/variables.html",[77,2.582,788,1.799]],["body/miscellaneous/variables.html",[5,0.282,7,0.64,11,0.03,15,1.565,24,1.286,26,0.02,27,0.02,66,1.961,77,2.17,80,2.433,92,1.37,108,1.787,124,1.787,184,1.886,201,3.776,212,3.3,213,3.3,294,3.019,298,1.787,735,2.784,737,4.285,739,4.285,740,4.285,741,4.285,742,4.285,743,4.285,745,2.784,788,2.17,858,5.902,859,4.499,860,6.141,861,6.141,862,5.106,863,3.317,864,3.317,865,3.317,866,4.499,867,3.317,868,3.317,869,3.317,870,3.317,871,3.317,872,3.317,873,3.317,874,3.317,875,3.317]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":856,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":601,"title":{"classes/UpdateInmuebleDto-1.html":{}},"body":{"injectables/MailsService.html":{}}}],["1.0.1",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":711,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["100",{"_index":666,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["15",{"_index":426,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["16).tostring(16",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.1",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":853,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":219,"title":{},"body":{"controllers/ImagenesController.html":{},"overview.html":{}}}],["5.2.1",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["6.7.5",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":854,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailsService.html":{}}}],["adapter",{"_index":576,"title":{},"body":{"modules/MailsModule.html":{}}}],["amazing",{"_index":832,"title":{},"body":{"index.html":{}}}],["app",{"_index":809,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":801,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":193,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{}}}],["array(4",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":175,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["atributos",{"_index":171,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["attachments",{"_index":596,"title":{},"body":{"injectables/MailsService.html":{}}}],["auth",{"_index":566,"title":{},"body":{"modules/MailsModule.html":{}}}],["author",{"_index":841,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":224,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["backers",{"_index":833,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":282,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["badrequestexception({message",{"_index":299,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["banos",{"_index":338,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["banos=0",{"_index":494,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["baños",{"_index":134,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["bcrypt",{"_index":694,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.compare(usser.contraseña",{"_index":703,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcrypt.hash(data.contraseña",{"_index":710,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["bcryptjs",{"_index":695,"title":{},"body":{"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["between",{"_index":468,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["between(preciomin",{"_index":496,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["between(superficiemin",{"_index":499,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["body",{"_index":197,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["bootstrap",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":851,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":849,"title":{},"body":{"modules.html":{}}}],["building",{"_index":796,"title":{},"body":{"index.html":{}}}],["callback",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cascade",{"_index":246,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["cascade'})@joincolumn({name",{"_index":248,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["cid",{"_index":599,"title":{},"body":{"injectables/MailsService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":120,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_imagenesmodule",{"_index":258,"title":{},"body":{"modules/ImagenesModule.html":{},"overview.html":{}}}],["cluster_imagenesmodule_providers",{"_index":259,"title":{},"body":{"modules/ImagenesModule.html":{},"overview.html":{}}}],["cluster_inmueblesmodule",{"_index":443,"title":{},"body":{"modules/InmueblesModule.html":{},"overview.html":{}}}],["cluster_inmueblesmodule_providers",{"_index":444,"title":{},"body":{"modules/InmueblesModule.html":{},"overview.html":{}}}],["cluster_mailsmodule",{"_index":555,"title":{},"body":{"modules/MailsModule.html":{}}}],["cluster_mailsmodule_providers",{"_index":556,"title":{},"body":{"modules/MailsModule.html":{}}}],["cluster_usuariosmodule",{"_index":673,"title":{},"body":{"modules/UsuariosModule.html":{},"overview.html":{}}}],["cluster_usuariosmodule_providers",{"_index":674,"title":{},"body":{"modules/UsuariosModule.html":{},"overview.html":{}}}],["column",{"_index":252,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["column({type",{"_index":235,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["comprobarcontraseña",{"_index":618,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarcontraseña(@body",{"_index":648,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarcontraseña(usser",{"_index":621,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["comprobarpassword",{"_index":682,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["comprobarpassword(usser",{"_index":685,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["con",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["config",{"_index":561,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_host",{"_index":563,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_password",{"_index":570,"title":{},"body":{"modules/MailsModule.html":{}}}],["config.get('email_user",{"_index":568,"title":{},"body":{"modules/MailsModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["configmodule.forroot",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["configservice.get('db_database",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_host",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_user",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"asdfgh",{"_index":657,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["console.log(ubicacion",{"_index":479,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["const",{"_index":294,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":273,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["constructor(imagenesrepository",{"_index":274,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["constructor(inmueblerepository",{"_index":452,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["constructor(mailerservice",{"_index":582,"title":{},"body":{"injectables/MailsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{}}}],["constructor(usuariorepository",{"_index":683,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["context",{"_index":595,"title":{},"body":{"injectables/MailsService.html":{}}}],["contraseña",{"_index":162,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"injectables/MailsService.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["contraseñahash",{"_index":709,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"coverage.html":{}}}],["controller('imagenes",{"_index":216,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["controller('inmuebles",{"_index":379,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["controller('mails",{"_index":549,"title":{},"body":{"controllers/MailsController.html":{}}}],["controller('usuarios",{"_index":645,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["correo",{"_index":163,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["coverage",{"_index":729,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creacion",{"_index":591,"title":{},"body":{"injectables/MailsService.html":{}}}],["crear",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["create",{"_index":319,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["create(@body",{"_index":656,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["create(@param('vendedor",{"_index":414,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["create(data",{"_index":625,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["create(nombreusuario",{"_index":456,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["create(vendedor",{"_index":327,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["createimagenesdto",{"_index":119,"title":{"classes/CreateImagenesDto.html":{}},"body":{"classes/CreateImagenesDto.html":{},"injectables/ImagenesService.html":{},"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["createinmuebledto",{"_index":131,"title":{"classes/CreateInmuebleDto.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["createreadstream",{"_index":284,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["createreadstream(join(process.cwd",{"_index":313,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["createusuariodto",{"_index":156,"title":{"classes/CreateUsuarioDto.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["data",{"_index":328,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["data.baños",{"_index":512,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.contraseña",{"_index":712,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.correo",{"_index":723,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.descripcion",{"_index":515,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.habitaciones",{"_index":518,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.nombreusuario",{"_index":706,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["data.precio",{"_index":521,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.superficie",{"_index":524,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.tipoinmueble",{"_index":527,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.tipooperacion",{"_index":530,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["data.ubicacion",{"_index":533,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["database",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["db_database",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_host",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_password",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_port",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_user",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":717,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{}}}],["default",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":571,"title":{},"body":{"modules/MailsModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["del",{"_index":226,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["delete",{"_index":366,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["delete('/:id",{"_index":419,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["delete('/:id')@httpcode(httpstatus.ok",{"_index":360,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["delete(':nombreusuario",{"_index":662,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(':nombreusuario')@httpcode(httpstatus.ok",{"_index":629,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(@param('nombreusuario",{"_index":663,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["delete(id",{"_index":458,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["delete(nombreusuario",{"_index":628,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descripcion",{"_index":135,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["description",{"_index":802,"title":{},"body":{"index.html":{},"properties.html":{}}}],["destination",{"_index":221,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["development",{"_index":810,"title":{},"body":{"index.html":{}}}],["dir",{"_index":573,"title":{},"body":{"modules/MailsModule.html":{}}}],["diskstorage",{"_index":210,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["documentation",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":288,"title":{},"body":{"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["dto/update",{"_index":378,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["e2e",{"_index":821,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":797,"title":{},"body":{"index.html":{}}}],["el",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["eliminado",{"_index":728,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["email",{"_index":544,"title":{},"body":{"controllers/MailsController.html":{},"injectables/MailsService.html":{}}}],["emailbienvenida",{"_index":594,"title":{},"body":{"injectables/MailsService.html":{}}}],["emailcontraseña",{"_index":603,"title":{},"body":{"injectables/MailsService.html":{}}}],["en",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["entities",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"overview.html":{}}}],["entities/imagenes.entity",{"_index":262,"title":{},"body":{"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{}}}],["entities/inmuebles.entity",{"_index":446,"title":{},"body":{"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{}}}],["entities/usuarios.entity",{"_index":677,"title":{},"body":{"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["entity",{"_index":232,"title":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["entity({name",{"_index":256,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["entityrepository",{"_index":269,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UsuariosRepository.html":{}}}],["entityrepository(imagenesentity",{"_index":270,"title":{},"body":{"classes/ImagenesRepository.html":{}}}],["entityrepository(inmueblesentity",{"_index":450,"title":{},"body":{"classes/InmueblesRepository.html":{}}}],["entityrepository(usuariosentity",{"_index":680,"title":{},"body":{"classes/UsuariosRepository.html":{}}}],["entity{.ts,.js",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["envfilepath",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["error('invalid",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ese",{"_index":300,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["existe",{"_index":301,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["exists",{"_index":705,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["express",{"_index":209,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"dependencies.html":{}}}],["extends",{"_index":267,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"classes/UsuariosRepository.html":{}}}],["false",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"modules/MailsModule.html":{},"entities/UsuariosEntity.html":{},"miscellaneous/variables.html":{}}}],["fichero",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":303,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["file.originalname",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.path",{"_index":304,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["filefilter",{"_index":212,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":206,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["filename",{"_index":124,"title":{},"body":{"classes/CreateImagenesDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"injectables/MailsService.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":192,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["filesinterceptor",{"_index":207,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["fill(null",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":320,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["filter(@query('ubicacion",{"_index":388,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["filter(ubicacion",{"_index":333,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findall",{"_index":321,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findall(@query('limit",{"_index":382,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findall(limit",{"_index":345,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyemail",{"_index":619,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyemail(@body",{"_index":654,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["findbyemail(correo",{"_index":633,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyid",{"_index":322,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyid(@param('id",{"_index":405,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyid(id",{"_index":349,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbynombre",{"_index":620,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbynombre(@param('nombreusuario",{"_index":651,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["findbynombre(nombreusuario",{"_index":636,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["findbyubicacion",{"_index":323,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyubicacion(@query('limit",{"_index":408,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyubicacion(limit",{"_index":352,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyusuario",{"_index":324,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["findbyusuario(@query('limit",{"_index":401,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["findbyusuario(limit",{"_index":355,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["format",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":795,"title":{},"body":{"index.html":{}}}],["fs",{"_index":285,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["function",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":789,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:ubicacion",{"_index":407,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/:ubicacion')@httpcode(httpstatus.ok",{"_index":353,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/filter",{"_index":387,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/filter')@httpcode(httpstatus.ok",{"_index":343,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getall",{"_index":380,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getall')@httpcode(httpstatus.ok",{"_index":347,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/getimage",{"_index":181,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["get('/getpaths/:id",{"_index":188,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["get('/id/:id",{"_index":404,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/id/:id')@httpcode(httpstatus.ok",{"_index":350,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/mostrar/:usuario",{"_index":400,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get('/mostrar/:usuario')@httpcode(httpstatus.ok",{"_index":357,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["get(':nombreusuario",{"_index":650,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["get(':nombreusuario')@httpcode(httpstatus.ok",{"_index":637,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["get()@httpcode(httpstatus.ok",{"_index":631,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["getfile",{"_index":176,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["getfile(@body",{"_index":230,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getfile(path",{"_index":179,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpath",{"_index":272,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["getpath(id",{"_index":279,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["getpaths",{"_index":177,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getpaths(@param('id",{"_index":228,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getpaths(id",{"_index":187,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["getrepository",{"_index":287,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["getting",{"_index":791,"title":{"index.html":{}},"body":{}}],["global",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["globales",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["globalmente",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["golden",{"_index":592,"title":{},"body":{"injectables/MailsService.html":{}}}],["grow",{"_index":828,"title":{},"body":{"index.html":{}}}],["habitaciones",{"_index":136,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["habitaciones=0",{"_index":492,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["handlebars",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["hay",{"_index":699,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["headers",{"_index":198,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["hello",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["helpers/imagenes.helper",{"_index":214,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["here",{"_index":838,"title":{},"body":{"index.html":{}}}],["host",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["houses",{"_index":593,"title":{},"body":{"injectables/MailsService.html":{}}}],["http://localhost:8080/inmuebles/filter?tipo=p&preciomin=&preciomax=&habitaciones=&banos=&superficiemin=&superficiemax=&limit=&skip",{"_index":386,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["httpcode",{"_index":370,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["httpcode(httpstatus.created",{"_index":413,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["httpcode(httpstatus.ok",{"_index":381,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["https://nestjs.com",{"_index":845,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":369,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["id",{"_index":190,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["id:id",{"_index":308,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["identifier",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["if(!banos",{"_index":493,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!file.originalname.match(/\\.(jpg|jpeg|png|gif",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(!habitaciones",{"_index":491,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!inmueble",{"_index":296,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["if(!opcion",{"_index":490,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!operacion",{"_index":474,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!preciomax",{"_index":483,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!preciomin",{"_index":481,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!superficiemax",{"_index":487,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!superficiemin",{"_index":485,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!tipo",{"_index":480,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!ubicacion",{"_index":489,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(!usuario",{"_index":505,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["if(data.baños",{"_index":510,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.contraseña",{"_index":720,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.correo",{"_index":721,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.descripcion",{"_index":513,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.habitaciones",{"_index":516,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.nombreusuario",{"_index":718,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["if(data.precio",{"_index":519,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.superficie",{"_index":522,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.tipoinmueble",{"_index":525,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.tipooperacion",{"_index":528,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(data.ubicacion",{"_index":531,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["if(exists",{"_index":707,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["ilike",{"_index":469,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["imagenes",{"_index":174,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["imagenes.controller",{"_index":263,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["imagenes.dto",{"_index":289,"title":{},"body":{"injectables/ImagenesService.html":{},"classes/UpdateInmuebleDto.html":{}}}],["imagenes.dto.ts",{"_index":122,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["imagenes.dto.ts:12",{"_index":127,"title":{},"body":{"classes/CreateImagenesDto.html":{}}}],["imagenes.dto.ts:8",{"_index":126,"title":{},"body":{"classes/CreateImagenesDto.html":{}}}],["imagenes.repository",{"_index":290,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["imagenes.service",{"_index":215,"title":{},"body":{"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{}}}],["imagenes/imagenes.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenes/imagenes.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenes/imagenes.service",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["imagenescontroller",{"_index":56,"title":{"controllers/ImagenesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"coverage.html":{}}}],["imagenesentity",{"_index":233,"title":{"entities/ImagenesEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"coverage.html":{}}}],["imagenesentity.inmueble",{"_index":431,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["imagenesmodule",{"_index":35,"title":{"modules/ImagenesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagenesrepository",{"_index":265,"title":{"classes/ImagenesRepository.html":{}},"body":{"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"coverage.html":{}}}],["imagenesservice",{"_index":58,"title":{"injectables/ImagenesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":305,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["img.inmueble",{"_index":307,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["img.pipe(res",{"_index":315,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["imports:[mailermodule.forrootasync",{"_index":560,"title":{},"body":{"modules/MailsModule.html":{}}}],["imports:[typeormmodule.forfeature([imagenesentity]),typeormmodule.forfeature([inmueblesentity",{"_index":264,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["imports:[typeormmodule.forfeature([inmueblesentity]),typeormmodule.forfeature([usuariosentity",{"_index":448,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["imports:[typeormmodule.forfeature([usuariosentity",{"_index":678,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["incorrecto",{"_index":700,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{}}}],["inject",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["injectable",{"_index":113,"title":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["injectables",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{},"overview.html":{}}}],["injectrepository",{"_index":283,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["injectrepository(imagenesentity",{"_index":291,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["injectrepository(inmueblesentity",{"_index":293,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["injectrepository(usuariosentity",{"_index":473,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["inmueble",{"_index":227,"title":{},"body":{"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["inmueble.baños",{"_index":511,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.descripcion",{"_index":514,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.dto",{"_index":377,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto-1.html":{}}}],["inmueble.dto.ts",{"_index":133,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["inmueble.dto.ts:13",{"_index":151,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:17",{"_index":152,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:22",{"_index":150,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:27",{"_index":147,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:32",{"_index":145,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:37",{"_index":149,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:41",{"_index":146,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:45",{"_index":148,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.dto.ts:9",{"_index":153,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["inmueble.habitaciones",{"_index":517,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.precio",{"_index":520,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.superficie",{"_index":523,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.tipoinmueble",{"_index":526,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.tipooperacion",{"_index":529,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmueble.ubicacion",{"_index":532,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmuebleentity",{"_index":243,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["inmuebleentity.id",{"_index":244,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["inmuebleentity.vendedor",{"_index":669,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["inmueblerepository",{"_index":275,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["inmuebles",{"_index":318,"title":{},"body":{"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["inmuebles.controller",{"_index":447,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["inmuebles.repository",{"_index":467,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["inmuebles.service",{"_index":376,"title":{},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{}}}],["inmuebles/entities/inmuebles.entity",{"_index":251,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["inmuebles/inmuebles.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["inmueblescontroller",{"_index":316,"title":{"controllers/InmueblesController.html":{}},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"coverage.html":{}}}],["inmueblesentity",{"_index":241,"title":{"entities/InmueblesEntity.html":{}},"body":{"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["inmueblesmodule",{"_index":36,"title":{"modules/InmueblesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InmueblesModule.html":{},"modules.html":{},"overview.html":{}}}],["inmueblesrepository",{"_index":276,"title":{"classes/InmueblesRepository.html":{}},"body":{"injectables/ImagenesService.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"coverage.html":{}}}],["inmueblesservice",{"_index":375,"title":{"injectables/InmueblesService.html":{}},"body":{"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"coverage.html":{},"overview.html":{}}}],["installation",{"_index":806,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":808,"title":{},"body":{"index.html":{}}}],["int",{"_index":423,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["isglobal",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["ismatch",{"_index":702,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["isnotempty",{"_index":128,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["isnotempty()@isnumber()@ispositive",{"_index":144,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["isnotempty()@isstring",{"_index":125,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["isnumber",{"_index":154,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["ispositive",{"_index":155,"title":{},"body":{"classes/CreateInmuebleDto.html":{}}}],["isstring",{"_index":129,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{}}}],["join",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/ImagenesService.html":{},"modules/MailsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":574,"title":{},"body":{"modules/MailsModule.html":{}}}],["joincolumn",{"_index":253,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["joincolumn({name",{"_index":257,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["kamil",{"_index":842,"title":{},"body":{"index.html":{}}}],["las",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["length",{"_index":425,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["lessthanorequal",{"_index":470,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["license",{"_index":848,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":825,"title":{},"body":{"index.html":{}}}],["like('%'+opcion",{"_index":501,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+operacion",{"_index":478,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+tipo",{"_index":495,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["like('%'+ubicacion",{"_index":500,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["limit",{"_index":341,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["listainmuebles",{"_index":535,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["logging",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["logo",{"_index":600,"title":{},"body":{"injectables/MailsService.html":{}}}],["logo.png",{"_index":597,"title":{},"body":{"injectables/MailsService.html":{}}}],["mailermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["mailerservice",{"_index":583,"title":{},"body":{"injectables/MailsService.html":{}}}],["mails",{"_index":538,"title":{},"body":{"controllers/MailsController.html":{}}}],["mails.controller",{"_index":559,"title":{},"body":{"modules/MailsModule.html":{}}}],["mails.service",{"_index":548,"title":{},"body":{"controllers/MailsController.html":{},"modules/MailsModule.html":{}}}],["mails/mails.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mails/mails.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["mails/mails.service",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["mailscontroller",{"_index":45,"title":{"controllers/MailsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"coverage.html":{}}}],["mailsmodule",{"_index":37,"title":{"modules/MailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"modules.html":{},"overview.html":{}}}],["mailsservice",{"_index":39,"title":{"injectables/MailsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"coverage.html":{},"overview.html":{}}}],["manytoone",{"_index":254,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["manytoone(undefined",{"_index":242,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["map",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":698,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["message:'imágenes",{"_index":310,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["metadata",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["miscellaneous",{"_index":788,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":824,"title":{},"body":{"index.html":{}}}],["mode",{"_index":814,"title":{},"body":{"index.html":{}}}],["modificado",{"_index":725,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["more",{"_index":837,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":471,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["morethanorequal(banos",{"_index":498,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["morethanorequal(habitaciones",{"_index":497,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["multer",{"_index":211,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["mysql",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":843,"title":{},"body":{"index.html":{}}}],["name",{"_index":184,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":803,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":847,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"dependencies.html":{}}}],["nestjs/config/dist/config.service",{"_index":558,"title":{},"body":{"modules/MailsModule.html":{}}}],["nestjs/core",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":606,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":208,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"dependencies.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"modules/MailsModule.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newinmueble",{"_index":506,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["newinmueble.vendedor",{"_index":508,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["newusuario",{"_index":713,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["node.js",{"_index":794,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["nombre",{"_index":716,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["nombreusuario",{"_index":164,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["nombreusuario:nombreusuario",{"_index":504,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["nombrevendedor",{"_index":137,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{}}}],["notfoundexception",{"_index":466,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["npm",{"_index":807,"title":{},"body":{"index.html":{}}}],["nuestros",{"_index":170,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["nullable",{"_index":237,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["number",{"_index":143,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["ondelete",{"_index":245,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["onetomany",{"_index":442,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["onetomany(undefined",{"_index":430,"title":{},"body":{"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["onupdate",{"_index":247,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["opcion",{"_index":334,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["open",{"_index":826,"title":{},"body":{"index.html":{}}}],["operacion",{"_index":346,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["optional",{"_index":185,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["options",{"_index":577,"title":{},"body":{"modules/MailsModule.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["overview",{"_index":852,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":756,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":199,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["param('ubicacion",{"_index":409,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["param('usuario",{"_index":402,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["parameters",{"_index":183,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["parseintpipe",{"_index":368,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["partialtype",{"_index":605,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{}}}],["partialtype(createimagenesdto",{"_index":608,"title":{},"body":{"classes/UpdateInmuebleDto.html":{}}}],["partialtype(createinmuebledto",{"_index":610,"title":{},"body":{"classes/UpdateInmuebleDto-1.html":{}}}],["partialtype(createusuariodto",{"_index":614,"title":{},"body":{"classes/UpdateUsuarioDto.html":{}}}],["pass",{"_index":569,"title":{},"body":{"modules/MailsModule.html":{}}}],["password",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailsService.html":{}}}],["path",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateImagenesDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{}}}],["path.path",{"_index":314,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["please",{"_index":835,"title":{},"body":{"index.html":{}}}],["port",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["port:465",{"_index":565,"title":{},"body":{"modules/MailsModule.html":{}}}],["post",{"_index":200,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["post('/:vendedor",{"_index":412,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["post('/password",{"_index":647,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('/password')@httpcode(httpstatus.ok",{"_index":622,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('/send",{"_index":542,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('/welcome",{"_index":546,"title":{},"body":{"controllers/MailsController.html":{}}}],["post('email",{"_index":653,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('email')@httpcode(httpstatus.ok",{"_index":634,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["post('upload/:id",{"_index":217,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["post('upload/:id')@useinterceptors(undefined",{"_index":194,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["precio",{"_index":138,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["preciomax",{"_index":337,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["preciomax=number.max_value",{"_index":484,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["preciomin",{"_index":336,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["preciomin=0",{"_index":482,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["preconditionfailedexception",{"_index":374,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["prefix",{"_index":173,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["primarycolumn",{"_index":671,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["primarygeneratedcolumn",{"_index":239,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{}}}],["private",{"_index":292,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["production",{"_index":816,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":793,"title":{},"body":{"index.html":{}}}],["project",{"_index":827,"title":{},"body":{"index.html":{}}}],["promise",{"_index":186,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["properties",{"_index":123,"title":{"properties.html":{}},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{},"properties.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{}}}],["proyecto",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["put",{"_index":367,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["put('/:id",{"_index":416,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["put(':nombreusuario",{"_index":659,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["que",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":373,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/MailsController.html":{}}}],["query('banos",{"_index":394,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('habitaciones')habitaciones",{"_index":393,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('limit')limit",{"_index":397,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('name",{"_index":551,"title":{},"body":{"controllers/MailsController.html":{}}}],["query('opcion",{"_index":389,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('operacion",{"_index":384,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('preciomax')preciomax",{"_index":392,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('preciomin')preciomin",{"_index":391,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('skip",{"_index":383,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('skip')skip",{"_index":398,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('superficiemax",{"_index":396,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('superficiemin",{"_index":395,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["query('tipo",{"_index":390,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["randomname",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${filename",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":836,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateInmuebleDto.html":{},"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{}}}],["reconozcan",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["recuperar",{"_index":602,"title":{},"body":{"injectables/MailsService.html":{}}}],["reflect",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":325,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["remove(@param('id",{"_index":420,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["remove(id",{"_index":359,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["renameimage",{"_index":213,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":268,"title":{},"body":{"classes/ImagenesRepository.html":{},"classes/InmueblesRepository.html":{},"classes/UsuariosRepository.html":{},"index.html":{}}}],["req",{"_index":201,"title":{},"body":{"controllers/ImagenesController.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":180,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["rimraf",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":811,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":798,"title":{},"body":{"index.html":{}}}],["se",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["secure",{"_index":564,"title":{},"body":{"modules/MailsModule.html":{}}}],["sendemailpassword",{"_index":539,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword(@query('email",{"_index":553,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailpassword(email",{"_index":541,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome",{"_index":540,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome(@query('email",{"_index":550,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendemailwelcome(email",{"_index":545,"title":{},"body":{"controllers/MailsController.html":{}}}],["sendmailpassword",{"_index":580,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailpassword(email",{"_index":585,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailwelcome",{"_index":581,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendmailwelcome(email",{"_index":587,"title":{},"body":{"injectables/MailsService.html":{}}}],["server",{"_index":799,"title":{},"body":{"index.html":{}}}],["server_port",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":800,"title":{},"body":{"index.html":{}}}],["skip",{"_index":342,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["skip:skip",{"_index":477,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"modules/ImagenesModule.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"index.html":{}}}],["sponsors",{"_index":830,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imagenes.helper.ts",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/constants.ts",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imagenes/dto/create",{"_index":121,"title":{},"body":{"classes/CreateImagenesDto.html":{},"coverage.html":{}}}],["src/imagenes/dto/update",{"_index":604,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"coverage.html":{}}}],["src/imagenes/entities/imagenes.entity",{"_index":441,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts",{"_index":234,"title":{},"body":{"entities/ImagenesEntity.html":{},"coverage.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:11",{"_index":238,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:14",{"_index":250,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:21",{"_index":249,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/entities/imagenes.entity.ts:8",{"_index":240,"title":{},"body":{"entities/ImagenesEntity.html":{}}}],["src/imagenes/helpers/imagenes.helper.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imagenes/imagenes.controller.ts",{"_index":172,"title":{},"body":{"controllers/ImagenesController.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.controller.ts:19",{"_index":195,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.controller.ts:24",{"_index":189,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.controller.ts:29",{"_index":182,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["src/imagenes/imagenes.module.ts",{"_index":260,"title":{},"body":{"modules/ImagenesModule.html":{}}}],["src/imagenes/imagenes.repository.ts",{"_index":266,"title":{},"body":{"classes/ImagenesRepository.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.service.ts",{"_index":271,"title":{},"body":{"injectables/ImagenesService.html":{},"coverage.html":{}}}],["src/imagenes/imagenes.service.ts:13",{"_index":277,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:20",{"_index":281,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:47",{"_index":280,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/imagenes/imagenes.service.ts:58",{"_index":278,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/inmuebles/dto/create",{"_index":132,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"coverage.html":{}}}],["src/inmuebles/dto/update",{"_index":609,"title":{},"body":{"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["src/inmuebles/entities/inmuebles.entity",{"_index":261,"title":{},"body":{"modules/ImagenesModule.html":{},"injectables/ImagenesService.html":{},"entities/UsuariosEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts",{"_index":422,"title":{},"body":{"entities/InmueblesEntity.html":{},"coverage.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:12",{"_index":437,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:15",{"_index":435,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:18",{"_index":436,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:25",{"_index":439,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:28",{"_index":434,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:31",{"_index":428,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:34",{"_index":424,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:37",{"_index":433,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:40",{"_index":427,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:43",{"_index":432,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/entities/inmuebles.entity.ts:9",{"_index":429,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["src/inmuebles/inmuebles.controller.ts",{"_index":317,"title":{},"body":{"controllers/InmueblesController.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.controller.ts:15",{"_index":348,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:22",{"_index":344,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:28",{"_index":358,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:34",{"_index":351,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:40",{"_index":354,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:47",{"_index":331,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:54",{"_index":365,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.controller.ts:60",{"_index":361,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["src/inmuebles/inmuebles.module.ts",{"_index":445,"title":{},"body":{"modules/InmueblesModule.html":{}}}],["src/inmuebles/inmuebles.repository",{"_index":286,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["src/inmuebles/inmuebles.repository.ts",{"_index":449,"title":{},"body":{"classes/InmueblesRepository.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.service.ts",{"_index":451,"title":{},"body":{"injectables/InmueblesService.html":{},"coverage.html":{}}}],["src/inmuebles/inmuebles.service.ts:116",{"_index":463,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:134",{"_index":457,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:14",{"_index":455,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:154",{"_index":465,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:21",{"_index":461,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:212",{"_index":459,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:39",{"_index":460,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:87",{"_index":462,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/inmuebles/inmuebles.service.ts:96",{"_index":464,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/mails/mails.controller.ts",{"_index":537,"title":{},"body":{"controllers/MailsController.html":{},"coverage.html":{}}}],["src/mails/mails.controller.ts:10",{"_index":547,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.controller.ts:15",{"_index":543,"title":{},"body":{"controllers/MailsController.html":{}}}],["src/mails/mails.module.ts",{"_index":557,"title":{},"body":{"modules/MailsModule.html":{}}}],["src/mails/mails.service.ts",{"_index":579,"title":{},"body":{"injectables/MailsService.html":{},"coverage.html":{}}}],["src/mails/mails.service.ts:26",{"_index":586,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:5",{"_index":584,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/mails/mails.service.ts:9",{"_index":588,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/main.ts",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/usuarios/dto/create",{"_index":157,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"coverage.html":{}}}],["src/usuarios/dto/update",{"_index":612,"title":{},"body":{"classes/UpdateUsuarioDto.html":{},"coverage.html":{}}}],["src/usuarios/entities/usuarios.entity",{"_index":160,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{}}}],["src/usuarios/entities/usuarios.entity.ts",{"_index":665,"title":{},"body":{"entities/UsuariosEntity.html":{},"coverage.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:11",{"_index":667,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:14",{"_index":668,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:17",{"_index":670,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/entities/usuarios.entity.ts:8",{"_index":672,"title":{},"body":{"entities/UsuariosEntity.html":{}}}],["src/usuarios/usuarios.controller.ts",{"_index":616,"title":{},"body":{"controllers/UsuariosController.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.controller.ts:14",{"_index":632,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:20",{"_index":623,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:26",{"_index":638,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:32",{"_index":635,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:39",{"_index":627,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:47",{"_index":641,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.controller.ts:53",{"_index":630,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["src/usuarios/usuarios.module.ts",{"_index":675,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["src/usuarios/usuarios.repository",{"_index":472,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["src/usuarios/usuarios.repository.ts",{"_index":679,"title":{},"body":{"classes/UsuariosRepository.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.service.ts",{"_index":681,"title":{},"body":{"injectables/UsuariosService.html":{},"coverage.html":{}}}],["src/usuarios/usuarios.service.ts:118",{"_index":688,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:12",{"_index":684,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:18",{"_index":689,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:27",{"_index":691,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:39",{"_index":690,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:52",{"_index":686,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:67",{"_index":687,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["src/usuarios/usuarios.service.ts:84",{"_index":692,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["start",{"_index":812,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":815,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":817,"title":{},"body":{"index.html":{}}}],["started",{"_index":792,"title":{"index.html":{}},"body":{}}],["starter",{"_index":805,"title":{},"body":{"index.html":{}}}],["statements",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":839,"title":{},"body":{"index.html":{}}}],["storage",{"_index":220,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["streamablefile",{"_index":202,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["strict",{"_index":578,"title":{},"body":{"modules/MailsModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"entities/ImagenesEntity.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"miscellaneous/variables.html":{}}}],["subidas",{"_index":311,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["subject",{"_index":590,"title":{},"body":{"injectables/MailsService.html":{}}}],["superficie",{"_index":139,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["superficiemax",{"_index":340,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["superficiemax=number.max_value",{"_index":488,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["superficiemin",{"_index":339,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["superficiemin=0",{"_index":486,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["support",{"_index":831,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":850,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["tablas",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":502,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["take:limit",{"_index":476,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["template",{"_index":572,"title":{},"body":{"modules/MailsModule.html":{},"injectables/MailsService.html":{}}}],["templates",{"_index":575,"title":{},"body":{"modules/MailsModule.html":{}}}],["templates/logo.png",{"_index":598,"title":{},"body":{"injectables/MailsService.html":{}}}],["test",{"_index":820,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":823,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":822,"title":{},"body":{"index.html":{}}}],["tests",{"_index":819,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":829,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.findbynombre(nombreusuario",{"_index":726,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.imagenesrepository.create({filename,path",{"_index":306,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesrepository.find",{"_index":312,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesrepository.save(img",{"_index":309,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["this.imagenesservice.getfile(path",{"_index":231,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.imagenesservice.getpath(id",{"_index":229,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.imagenesservice.uploadfiles(id",{"_index":225,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["this.inmueblerepository.create(data",{"_index":507,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.delete",{"_index":536,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.findandcount",{"_index":475,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.findone",{"_index":295,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.save(newinmueble",{"_index":509,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblerepository.update",{"_index":534,"title":{},"body":{"injectables/InmueblesService.html":{}}}],["this.inmueblesservice.create(vendedor",{"_index":415,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.delete(id",{"_index":421,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.filter(ubicacion,opcion,tipo,preciomin",{"_index":399,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findall(limit",{"_index":385,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyid(id",{"_index":406,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyubicacion(limit",{"_index":410,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.findbyusuario(limit",{"_index":403,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.inmueblesservice.update(id,data",{"_index":418,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["this.mailerservice.sendmail",{"_index":589,"title":{},"body":{"injectables/MailsService.html":{}}}],["this.mailsservice.sendmailpassword(email",{"_index":554,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.mailsservice.sendmailwelcome(email",{"_index":552,"title":{},"body":{"controllers/MailsController.html":{}}}],["this.usuariorepository.create(data",{"_index":714,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.createquerybuilder(\"usuario\").getmany",{"_index":696,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.delete",{"_index":727,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.findone",{"_index":503,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["this.usuariorepository.save(newusuario",{"_index":715,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariorepository.update",{"_index":724,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["this.usuariosservice.comprobarpassword(usser",{"_index":649,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.create(data",{"_index":658,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.delete(nombreusuario",{"_index":664,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findall",{"_index":646,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findbyemail(correo.correo",{"_index":655,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.findbynombre(nombreusuario",{"_index":652,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["this.usuariosservice.update(nombreusuario",{"_index":661,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["throw",{"_index":297,"title":{},"body":{"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["tipo",{"_index":335,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["tipoinmueble",{"_index":140,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["tipooperacion",{"_index":141,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["todo",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["touch",{"_index":840,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":562,"title":{},"body":{"modules/MailsModule.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":846,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"controllers/ImagenesController.html":{},"entities/ImagenesEntity.html":{},"injectables/ImagenesService.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/MailsService.html":{},"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":255,"title":{},"body":{"entities/ImagenesEntity.html":{},"classes/ImagenesRepository.html":{},"injectables/ImagenesService.html":{},"entities/InmueblesEntity.html":{},"classes/InmueblesRepository.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"classes/UsuariosRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/UsuariosModule.html":{}}}],["typeormmodule.forrootasync",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":607,"title":{},"body":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"classes/UpdateUsuarioDto.html":{},"dependencies.html":{}}}],["types/nodemailer",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":804,"title":{},"body":{"index.html":{}}}],["ubicacion",{"_index":142,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["ui",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":818,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":196,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{},"injectables/InmueblesService.html":{},"controllers/MailsController.html":{},"injectables/UsuariosService.html":{}}}],["unlicensed",{"_index":857,"title":{},"body":{"properties.html":{}}}],["update",{"_index":326,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["update(@param('id",{"_index":417,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["update(@param('nombreusuario",{"_index":660,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["update(id",{"_index":362,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{}}}],["update(nombreusuario",{"_index":639,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["updateinmuebledto",{"_index":363,"title":{"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{}},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"classes/UpdateInmuebleDto.html":{},"classes/UpdateInmuebleDto-1.html":{},"coverage.html":{}}}],["updateusuariodto",{"_index":611,"title":{"classes/UpdateUsuarioDto.html":{}},"body":{"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["upload",{"_index":222,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["uploadedfile",{"_index":203,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["uploadedfiles",{"_index":204,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["uploadfiles",{"_index":178,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["uploadfiles(@param('id",{"_index":223,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["uploadfiles(id",{"_index":191,"title":{},"body":{"controllers/ImagenesController.html":{},"injectables/ImagenesService.html":{}}}],["usefactory",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{}}}],["useinterceptors",{"_index":205,"title":{},"body":{"controllers/ImagenesController.html":{},"controllers/InmueblesController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":218,"title":{},"body":{"controllers/ImagenesController.html":{}}}],["usepipes",{"_index":371,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["usepipes(new",{"_index":329,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["user",{"_index":567,"title":{},"body":{"modules/MailsModule.html":{}}}],["username",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["usser",{"_index":624,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usser.nombreusuario",{"_index":701,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario",{"_index":356,"title":{},"body":{"controllers/InmueblesController.html":{},"injectables/InmueblesService.html":{},"injectables/MailsService.html":{},"injectables/UsuariosService.html":{}}}],["usuario.contraseña",{"_index":704,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario.correo",{"_index":722,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuario.dto",{"_index":644,"title":{},"body":{"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuario.dto.ts",{"_index":613,"title":{},"body":{"classes/UpdateUsuarioDto.html":{},"coverage.html":{}}}],["usuario.nombreusuario",{"_index":719,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuariorepository",{"_index":453,"title":{},"body":{"injectables/InmueblesService.html":{},"injectables/UsuariosService.html":{}}}],["usuarios",{"_index":617,"title":{},"body":{"controllers/UsuariosController.html":{},"entities/UsuariosEntity.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.controller",{"_index":676,"title":{},"body":{"modules/UsuariosModule.html":{}}}],["usuarios.dto",{"_index":158,"title":{},"body":{"classes/CreateInmuebleDto.html":{},"classes/UpdateUsuarioDto.html":{},"controllers/UsuariosController.html":{},"injectables/UsuariosService.html":{}}}],["usuarios.dto.ts",{"_index":161,"title":{},"body":{"classes/CreateUsuarioDto.html":{},"coverage.html":{}}}],["usuarios.dto.ts:11",{"_index":165,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.dto.ts:15",{"_index":166,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.dto.ts:7",{"_index":167,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["usuarios.length",{"_index":697,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios.repository",{"_index":693,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["usuarios.service",{"_index":643,"title":{},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{}}}],["usuarios/entities/usuarios.entity",{"_index":440,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["usuarios/usuarios.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["usuarioscontroller",{"_index":615,"title":{"controllers/UsuariosController.html":{}},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"coverage.html":{}}}],["usuariosentity",{"_index":159,"title":{"entities/UsuariosEntity.html":{}},"body":{"classes/CreateInmuebleDto.html":{},"entities/InmueblesEntity.html":{},"modules/InmueblesModule.html":{},"injectables/InmueblesService.html":{},"entities/UsuariosEntity.html":{},"modules/UsuariosModule.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuariosentity.nombreusuario",{"_index":438,"title":{},"body":{"entities/InmueblesEntity.html":{}}}],["usuariosmodule",{"_index":38,"title":{"modules/UsuariosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsuariosModule.html":{},"modules.html":{},"overview.html":{}}}],["usuariosrepository",{"_index":454,"title":{"classes/UsuariosRepository.html":{}},"body":{"injectables/InmueblesService.html":{},"classes/UsuariosRepository.html":{},"injectables/UsuariosService.html":{},"coverage.html":{}}}],["usuariosservice",{"_index":642,"title":{"injectables/UsuariosService.html":{}},"body":{"controllers/UsuariosController.html":{},"modules/UsuariosModule.html":{},"injectables/UsuariosService.html":{},"coverage.html":{},"overview.html":{}}}],["validar",{"_index":169,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["validationpipe",{"_index":372,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["validationpipe())@post('/:vendedor')@httpcode(httpstatus.created",{"_index":330,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["validationpipe())@post()@httpcode(httpstatus.created",{"_index":626,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["validationpipe())@put('/:id')@httpcode(httpstatus.ok",{"_index":364,"title":{},"body":{"controllers/InmueblesController.html":{}}}],["validationpipe())@put(':nombreusuario')@httpcode(httpstatus.ok",{"_index":640,"title":{},"body":{"controllers/UsuariosController.html":{}}}],["validationpipe({whitelist:true",{"_index":411,"title":{},"body":{"controllers/InmueblesController.html":{},"controllers/UsuariosController.html":{}}}],["validator",{"_index":130,"title":{},"body":{"classes/CreateImagenesDto.html":{},"classes/CreateInmuebleDto.html":{},"classes/CreateUsuarioDto.html":{},"dependencies.html":{}}}],["value",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["van",{"_index":168,"title":{},"body":{"classes/CreateUsuarioDto.html":{}}}],["var",{"_index":302,"title":{},"body":{"injectables/ImagenesService.html":{}}}],["varchar",{"_index":236,"title":{},"body":{"entities/ImagenesEntity.html":{},"entities/InmueblesEntity.html":{},"entities/UsuariosEntity.html":{}}}],["variable",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":77,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["vendedor",{"_index":332,"title":{},"body":{"controllers/InmueblesController.html":{},"entities/InmueblesEntity.html":{},"injectables/InmueblesService.html":{}}}],["version",{"_index":855,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":813,"title":{},"body":{"index.html":{}}}],["website",{"_index":844,"title":{},"body":{"index.html":{}}}],["world",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["ya",{"_index":708,"title":{},"body":{"injectables/UsuariosService.html":{}}}],["you'd",{"_index":834,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagenesModule.html":{},"modules/InmueblesModule.html":{},"modules/MailsModule.html":{},"modules/UsuariosModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nImagenesModule\n\nImagenesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nImagenesModule->AppModule\n\n\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nAppModule -->\n\nInmueblesModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nAppModule -->\n\nUsuariosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nAppModule -->\n\nMailsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            MailsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImagenesModule\n                        \n                        \n                            InmueblesModule\n                        \n                        \n                            MailsModule\n                        \n                        \n                            UsuariosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsuariosModule } from './usuarios/usuarios.module';\nimport { InmueblesModule } from './inmuebles/inmuebles.module';\nimport { ImagenesController } from './imagenes/imagenes.controller';\nimport { ImagenesService } from './imagenes/imagenes.service';\nimport { ImagenesModule } from './imagenes/imagenes.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { join } from 'path';\nimport { MailsController } from './mails/mails.controller';\nimport { MailsService } from './mails/mails.service';\nimport { MailsModule } from './mails/mails.module';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env', //fichero con las variables globales\n      isGlobal: true // para que se reconozcan las variables globalmente en todo el proyecto\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('DB_HOST'),\n        port: +configService.get('DB_PORT'),\n        username: configService.get('DB_USER'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_DATABASE'),\n        entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: false,\n        logging: false //para crear las tablas\n      }),\n      inject: [ConfigService],\n    }),\n  ConfigModule.forRoot(),\n    UsuariosModule,\n    InmueblesModule,\n    ImagenesModule,\n    MailsModule,\n  ],\n  controllers: [AppController, MailsController],\n  providers: [AppService, MailsService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImagenesDto.html":{"url":"classes/CreateImagenesDto.html","title":"class - CreateImagenesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImagenesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/dto/create-imagenes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/dto/create-imagenes.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/dto/create-imagenes.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateImagenesDto {\n    \n    \n    @IsNotEmpty()\n    @IsString()\n    filename: string;\n\n    @IsNotEmpty()\n    @IsString()\n    path: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInmuebleDto.html":{"url":"classes/CreateInmuebleDto.html","title":"class - CreateInmuebleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/dto/create-inmueble.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baños\n                            \n                            \n                                    Readonly\n                                descripcion\n                            \n                            \n                                    Readonly\n                                habitaciones\n                            \n                            \n                                    Readonly\n                                nombreVendedor\n                            \n                            \n                                    Readonly\n                                precio\n                            \n                            \n                                    Readonly\n                                superficie\n                            \n                            \n                                    Readonly\n                                tipoInmueble\n                            \n                            \n                                    Readonly\n                                tipoOperacion\n                            \n                            \n                                    Readonly\n                                ubicacion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baños\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        habitaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        nombreVendedor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        precio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        superficie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tipoInmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tipoOperacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ubicacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/dto/create-inmueble.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsPositive, IsString } from \"class-validator\";\nimport { CreateUsuarioDto } from \"src/usuarios/dto/create-usuarios.dto\";\nimport { UsuariosEntity } from \"src/usuarios/entities/usuarios.entity\";\n\nexport class CreateInmuebleDto {\n    \n    @IsNotEmpty()\n    @IsString()\n    readonly ubicacion: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly tipoInmueble: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly tipoOperacion: string;\n    \n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly superficie: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly habitaciones: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly baños: number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @IsPositive()\n    readonly precio: number;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly descripcion: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly nombreVendedor: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsuarioDto.html":{"url":"classes/CreateUsuarioDto.html","title":"class - CreateUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/dto/create-usuarios.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contraseña\n                            \n                            \n                                correo\n                            \n                            \n                                nombreUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contraseña\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/dto/create-usuarios.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator' //van a validar nuestros atributos\n\nexport class CreateUsuarioDto {\n\n    @IsNotEmpty()\n    @IsString()\n    nombreUsuario: string;\n\n    @IsNotEmpty()\n    @IsString()\n    contraseña: string;\n\n    @IsNotEmpty()\n    @IsString()\n    correo: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagenesController.html":{"url":"controllers/ImagenesController.html","title":"controller - ImagenesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagenesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                imagenes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getPaths\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(path, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getImage')\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPaths\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPaths(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getPaths/:id')\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(id: number, files: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/imagenes/imagenes.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Headers, Param, Post, Req, Res, StreamableFile, UploadedFile, UploadedFiles, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { fileFilter, renameImage } from './helpers/imagenes.helper';\nimport { ImagenesService } from './imagenes.service';\n\n@Controller('imagenes')\nexport class ImagenesController {\n    constructor(private readonly imagenesService: ImagenesService) {}\n\n    @Post('upload/:id')\n    @UseInterceptors(FilesInterceptor('files', 5, {\n        storage: diskStorage({\n            destination: './upload',\n            filename: renameImage\n        }),\n        fileFilter: fileFilter\n    }))\n    async uploadFiles(@Param('id') id: number, @UploadedFiles() files: Array){\n        return await this.imagenesService.uploadFiles(id, files);\n    }\n\n    @Get('/getPaths/:id') //id del inmueble\n    async getPaths(@Param('id') id: number): Promise {\n        return await this.imagenesService.getPath(id);\n    }\n\n    @Get('/getImage') \n    async getFile(@Body() path, @Res() res): Promise {\n        return await this.imagenesService.getFile(path, res);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImagenesEntity.html":{"url":"entities/ImagenesEntity.html","title":"entity - ImagenesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImagenesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/entities/imagenes.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                id\n                            \n                            \n                                inmueble\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InmueblesEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, inmuebleEntity => inmuebleEntity.id, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'inmueble'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/imagenes/entities/imagenes.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { InmueblesEntity } from \"../../inmuebles/entities/inmuebles.entity\"; \nimport { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({name: 'Imagenes'})\nexport class ImagenesEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'varchar', nullable: false})\n    filename: string;\n\n    @Column({type: 'varchar', nullable: false})\n    path: string;\n\n    @ManyToOne(() => InmueblesEntity, (inmuebleEntity) => inmuebleEntity.id, {\n        onDelete: \"CASCADE\",\n        onUpdate: \"CASCADE\"\n    })\n    @JoinColumn({name: \"inmueble\"})\n    inmueble: InmueblesEntity\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagenesModule.html":{"url":"modules/ImagenesModule.html","title":"module - ImagenesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagenesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ImagenesModule\n\n\n\ncluster_ImagenesModule_providers\n\n\n\n\nImagenesService\n\nImagenesService\n\n\n\nImagenesModule\n\nImagenesModule\n\nImagenesModule -->\n\nImagenesService->ImagenesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/imagenes/imagenes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagenesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagenesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InmueblesEntity } from 'src/inmuebles/entities/inmuebles.entity';\nimport { ImagenesEntity } from './entities/imagenes.entity';\nimport { ImagenesController } from './imagenes.controller';\nimport { ImagenesService } from './imagenes.service';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([ImagenesEntity]),TypeOrmModule.forFeature([InmueblesEntity])],\n  controllers: [ImagenesController],\n  providers: [ImagenesService]\n})\nexport class ImagenesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagenesRepository.html":{"url":"classes/ImagenesRepository.html","title":"class - ImagenesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagenesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { ImagenesEntity } from \"./entities/imagenes.entity\";\n\n@EntityRepository(ImagenesEntity)\n\nexport class ImagenesRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagenesService.html":{"url":"injectables/ImagenesService.html","title":"injectable - ImagenesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagenesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/imagenes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getPath\n                            \n                            \n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imagenesRepository: ImagenesRepository, inmuebleRepository: InmueblesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/imagenes/imagenes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagenesRepository\n                                                  \n                                                        \n                                                                        ImagenesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inmuebleRepository\n                                                  \n                                                        \n                                                                        InmueblesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(path, res)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPath(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(id: number, files: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/imagenes/imagenes.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { createReadStream } from 'fs';\nimport { join } from 'path';\nimport { InmueblesEntity } from 'src/inmuebles/entities/inmuebles.entity';\nimport { InmueblesRepository } from 'src/inmuebles/inmuebles.repository';\nimport { getRepository } from 'typeorm';\nimport { CreateImagenesDto } from './dto/create-imagenes.dto';\nimport { ImagenesEntity } from './entities/imagenes.entity';\nimport { ImagenesRepository } from './imagenes.repository';\n\n@Injectable()\nexport class ImagenesService {\n\n    constructor(\n        @InjectRepository(ImagenesEntity) private imagenesRepository: ImagenesRepository,\n        @InjectRepository(InmueblesEntity) private inmuebleRepository: InmueblesRepository\n    ) { }\n\n    async uploadFiles(id: number, files: Array){\n                \n        const inmueble = this.inmuebleRepository.findOne({\n            where:{\n                id: id\n            }\n        })\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'}) \n            \n            for( var file of files){\n            const filename = file.filename;\n            const path = file.path;\n            \n            const img = this.imagenesRepository.create({filename,path});\n            \n            img.inmueble = await this.inmuebleRepository.findOne({\n                where:{\n                    id:id\n                }\n            });\n\n            await this.imagenesRepository.save(img);\n        }\n\n        return {message:'Imágenes subidas'}\n    }\n\n    async getPath(id: number){\n        \n        const files = await this.imagenesRepository.find({\n            where: {\n                inmueble: id,\n            }\n        });\n\n        return files;\n    }\n\n    async getFile(path, res){\n        const img = createReadStream(join(process.cwd(), path.path));\n        img.pipe(res);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InmueblesController.html":{"url":"controllers/InmueblesController.html","title":"controller - InmueblesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InmueblesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                inmuebles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                filter\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByUbicacion\n                            \n                            \n                                findByUsuario\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(vendedor: string, data: CreateInmuebleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('/:vendedor')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vendedor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/filter')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    habitaciones\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    banos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, skip: number, operacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/id/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUbicacion\n                        \n                    \n                \n            \n            \n                \nfindByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:ubicacion')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUsuario\n                        \n                    \n                \n            \n            \n                \nfindByUsuario(limit: number, skip: number, usuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/mostrar/:usuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: UpdateInmuebleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Put('/:id')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/inmuebles/inmuebles.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Put, ParseIntPipe, HttpStatus, HttpCode, UsePipes, ValidationPipe, UseInterceptors, UploadedFile, UploadedFiles, Query, PreconditionFailedException } from '@nestjs/common';\nimport { InmueblesService } from './inmuebles.service';\nimport { CreateInmuebleDto } from './dto/create-inmueble.dto';\nimport { UpdateInmuebleDto } from './dto/update-inmueble.dto';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { Multer } from 'multer';\n\n@Controller('inmuebles')\nexport class InmueblesController {\n  \n  constructor(private readonly inmueblesService: InmueblesService) {}\n\n  @Get('/getAll')\n  @HttpCode(HttpStatus.OK)\n  findAll(@Query('limit') limit: number, @Query('skip') skip: number, @Query('operacion') operacion: string) {\n    return this.inmueblesService.findAll(limit, skip, operacion);\n  }\n\n  //http://localhost:8080/inmuebles/filter?tipo=P&precioMin=&precioMax=&habitaciones=&banos=&superficieMin=&superficieMax=&limit=&skip=\n  @Get('/filter')\n  @HttpCode(HttpStatus.OK)\n  filter(@Query('ubicacion') ubicacion: string, @Query('opcion') opcion: string, @Query('tipo') tipo: string, @Query('precioMin')precioMin: number, @Query('precioMax')precioMax: number, @Query('habitaciones')habitaciones: number, @Query('banos') banos: number, @Query('superficieMin') superficieMin: number, @Query('superficieMax') superficieMax: number, @Query('limit')limit: number, @Query('skip')skip: number) {\n    return this.inmueblesService.filter(ubicacion,opcion,tipo,precioMin, precioMax, habitaciones, banos, superficieMin, superficieMax, limit, skip);\n  }\n \n  @Get('/mostrar/:usuario')\n  @HttpCode(HttpStatus.OK)\n  findByUsuario(@Query('limit') limit: number, @Query('skip') skip: number, @Param('usuario') usuario: string) {\n    return this.inmueblesService.findByUsuario(limit, skip, usuario);\n  }\n\n  @Get('/id/:id')\n  @HttpCode(HttpStatus.OK)\n  findById(@Param('id') id: number) {\n    return this.inmueblesService.findById(id);\n  }\n\n  @Get('/:ubicacion')\n  @HttpCode(HttpStatus.OK)\n  findByUbicacion(@Query('limit') limit: number, @Query('skip') skip: number, @Param('ubicacion') ubicacion: string, @Query('operacion') operacion: string) {\n    return this.inmueblesService.findByUbicacion(limit, skip, ubicacion, operacion);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Post('/:vendedor')\n  @HttpCode(HttpStatus.CREATED)\n  create(@Param('vendedor') vendedor: string, @Body() data: CreateInmuebleDto) {\n    return this.inmueblesService.create(vendedor, data);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Put('/:id')\n  @HttpCode(HttpStatus.OK)\n  update(@Param('id', ParseIntPipe) id: number, @Body() data: UpdateInmuebleDto) {\n    return this.inmueblesService.update(id,data);\n  }\n\n  @Delete('/:id')\n  @HttpCode(HttpStatus.OK)\n  remove(@Param('id', ParseIntPipe) id: number) {\n    return this.inmueblesService.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InmueblesEntity.html":{"url":"entities/InmueblesEntity.html","title":"entity - InmueblesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InmueblesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/entities/inmuebles.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baños\n                            \n                            \n                                descripcion\n                            \n                            \n                                habitaciones\n                            \n                            \n                                id\n                            \n                            \n                                imagenes\n                            \n                            \n                                precio\n                            \n                            \n                                superficie\n                            \n                            \n                                tipoInmueble\n                            \n                            \n                                tipoOperacion\n                            \n                            \n                                ubicacion\n                            \n                            \n                                vendedor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baños\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descripcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        habitaciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagenes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, imagenesEntity => imagenesEntity.inmueble)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        precio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        superficie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoInmueble\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoOperacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ubicacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 15, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendedor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsuariosEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, usuariosEntity => usuariosEntity.nombreUsuario, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'nombreVendedor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/inmuebles/entities/inmuebles.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { UsuariosEntity } from \"../../usuarios/entities/usuarios.entity\"; \nimport { ImagenesEntity } from \"src/imagenes/entities/imagenes.entity\"; \nimport { Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity({name: 'Inmuebles'})\nexport class InmueblesEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    ubicacion: string;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    tipoInmueble: string;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    tipoOperacion: string;\n\n    @ManyToOne(() => UsuariosEntity, (usuariosEntity) => usuariosEntity.nombreUsuario, {\n        onDelete: \"CASCADE\",\n        onUpdate: \"CASCADE\"\n    })\n    @JoinColumn({name: \"nombreVendedor\"})\n    vendedor: UsuariosEntity;\n\n    @Column({type: 'int', nullable: false})\n    superficie: number;\n\n    @Column({type: 'int', nullable: false})\n    habitaciones: number;\n\n    @Column({type: 'int', nullable: false})\n    baños: number;\n\n    @Column({type: 'int', nullable: false})\n    precio: number;\n\n    @Column({type: 'varchar', length: 15, nullable: false})\n    descripcion: string;\n\n    @OneToMany(() => ImagenesEntity, (imagenesEntity) => imagenesEntity.inmueble)\n    imagenes: Array; \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InmueblesModule.html":{"url":"modules/InmueblesModule.html","title":"module - InmueblesModule","body":"\n                   \n\n\n\n\n    Modules\n    InmueblesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InmueblesModule\n\n\n\ncluster_InmueblesModule_providers\n\n\n\n\nInmueblesService\n\nInmueblesService\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nInmueblesModule -->\n\nInmueblesService->InmueblesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/inmuebles/inmuebles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InmueblesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InmueblesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuariosEntity } from 'src/usuarios/entities/usuarios.entity';\nimport { InmueblesEntity } from './entities/inmuebles.entity';\nimport { InmueblesController } from './inmuebles.controller';\nimport { InmueblesService } from './inmuebles.service';\n\n@Module({\n    imports:[TypeOrmModule.forFeature([InmueblesEntity]),TypeOrmModule.forFeature([UsuariosEntity])],\n    providers: [InmueblesService],\n    controllers: [InmueblesController]\n  })\nexport class InmueblesModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InmueblesRepository.html":{"url":"classes/InmueblesRepository.html","title":"class - InmueblesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InmueblesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { InmueblesEntity } from \"./entities/inmuebles.entity\";\n\n@EntityRepository(InmueblesEntity)\n\nexport class InmueblesRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InmueblesService.html":{"url":"injectables/InmueblesService.html","title":"injectable - InmueblesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InmueblesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/inmuebles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                filter\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUbicacion\n                            \n                            \n                                    Async\n                                findByUsuario\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inmuebleRepository: InmueblesRepository, usuarioRepository: UsuariosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/inmuebles/inmuebles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inmuebleRepository\n                                                  \n                                                        \n                                                                        InmueblesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        UsuariosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(nombreUsuario: string, data: CreateInmuebleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opcion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    precioMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    habitaciones\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    banos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    superficieMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, skip: number, operacion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUbicacion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubicacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    operacion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsuario\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsuario(limit: number, skip: number, nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateInmuebleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/inmuebles/inmuebles.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateInmuebleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InmueblesEntity } from './entities/inmuebles.entity';\nimport { InmueblesRepository } from './inmuebles.repository';\nimport { CreateInmuebleDto } from './dto/create-inmueble.dto';\nimport { UpdateInmuebleDto } from './dto/update-inmueble.dto';\nimport { Between, getRepository, ILike, LessThanOrEqual, Like, MoreThanOrEqual } from 'typeorm';\n\nimport { UsuariosEntity } from 'src/usuarios/entities/usuarios.entity';\nimport { UsuariosRepository } from 'src/usuarios/usuarios.repository';\n\n\n@Injectable()\nexport class InmueblesService {\n\n    constructor(\n        @InjectRepository(InmueblesEntity) private inmuebleRepository: InmueblesRepository,\n        @InjectRepository(UsuariosEntity) private usuarioRepository: UsuariosRepository\n    ) { }\n\n    async findAll(limit: number, skip: number, operacion: string): Promise {\n        \n        if(!operacion){\n            \n            operacion=\"%\";\n        }\n        const inmueble = await this.inmuebleRepository.findAndCount({\n            \n            take:limit,\n            skip:skip,\n            where:{\n                tipoOperacion: Like('%'+operacion+'%')\n            }\n        });\n      \n        return inmueble;\n    }\n\n    async filter(ubicacion: string, opcion: string, tipo: string, precioMin: number, precioMax: number, habitaciones: number, banos: number, superficieMin: number, superficieMax: number, limit: number, skip: number): Promise {\n        //console.log(ubicacion, opcion)\n        if(!tipo){\n            tipo=\"%\";\n        }\n        if(!precioMin){\n            precioMin=0;\n        }\n        if(!precioMax){\n            precioMax=Number.MAX_VALUE;\n        }\n        if(!superficieMin){\n            superficieMin=0;\n        }\n        if(!superficieMax){\n            superficieMax=Number.MAX_VALUE;\n        }\n        if(!ubicacion){\n            ubicacion=\"%\";\n        }\n        if(!opcion){\n            opcion=\"%\";\n        }\n        if(!habitaciones){\n            habitaciones=0;\n        }\n        if(!banos){\n            banos=0;\n        }\n\n        const inmueble = await this.inmuebleRepository.findAndCount({\n            where:{\n                tipoInmueble: Like('%'+tipo+'%'),\n                precio: Between(precioMin, precioMax),\n                habitaciones: MoreThanOrEqual(habitaciones),\n                baños: MoreThanOrEqual(banos),\n                superficie: Between(superficieMin, superficieMax),\n                ubicacion: Like('%'+ubicacion+'%'),\n                tipoOperacion: Like('%'+opcion+'%')\n            },\n            take: limit,\n            skip: skip\n\n        });\n        \n       return inmueble;\n    }\n\n    async findById(id: number): Promise {\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n        return inmueble;\n    }\n\n    async findByUsuario(limit: number, skip: number, nombreUsuario: string): Promise {\n        \n        const usuario = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario:nombreUsuario\n            }\n        });\n        \n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'}) \n\n        const inmueble = this.inmuebleRepository.findAndCount({\n            where: {\n                vendedor: nombreUsuario\n            },\n            take:limit,\n            skip:skip\n        });\n        return inmueble;\n    }\n    \n    async findByUbicacion(limit: number, skip: number, ubicacion: string, operacion: string): Promise {\n        \n        if(!operacion){\n            \n            operacion=\"%\";\n        }\n\n        const inmueble = this.inmuebleRepository.findAndCount({\n            where: {\n                ubicacion: ubicacion,\n                tipoOperacion: Like('%'+operacion+'%')\n            },\n            take:limit,\n            skip:skip\n        });        \n        return inmueble;\n    }\n\n    async create(nombreUsuario: string, data: CreateInmuebleDto): Promise {\n        const usuario = this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: nombreUsuario\n            }\n        });\n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'}) \n\n        const newInmueble = this.inmuebleRepository.create(data);\n        newInmueble.vendedor = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario:nombreUsuario\n            }\n        });\n        \n        await this.inmuebleRepository.save(newInmueble);\n        \n        return newInmueble;\n    }\n\n    async update(id: number, data: UpdateInmuebleDto): Promise{\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'})\n        \n        if(data.baños) {\n            inmueble.baños = data.baños;        \n        }\n\n        if(data.descripcion) {\n            inmueble.descripcion = data.descripcion;        \n        }\n\n        if(data.habitaciones) {\n            inmueble.habitaciones = data.habitaciones;        \n        }\n\n        if(data.precio) {\n            inmueble.precio = data.precio;        \n        }\n\n        if(data.superficie) {\n            inmueble.superficie = data.superficie;        \n        }\n\n        if(data.tipoInmueble) {\n            inmueble.tipoInmueble = data.tipoInmueble;        \n        }\n\n        if(data.tipoOperacion) {\n            inmueble.tipoOperacion = data.tipoOperacion;        \n        }\n\n        if(data.ubicacion) {\n            inmueble.ubicacion = data.ubicacion;        \n        }\n\n        await this.inmuebleRepository.update({\n                id: id\n            },\n            {\n                baños: inmueble.baños,\n                descripcion: inmueble.descripcion,\n                habitaciones: inmueble.habitaciones,\n                precio: inmueble.precio,\n                superficie: inmueble.superficie,\n                tipoInmueble: inmueble.tipoInmueble,\n                tipoOperacion: inmueble.tipoOperacion,\n                ubicacion: inmueble.ubicacion\n            });\n                        \n            const listaInmuebles = await this.inmuebleRepository.findAndCount();\n            return listaInmuebles;\n    }\n\n    async delete(id: number){\n        const inmueble = await this.inmuebleRepository.findOne({\n            where: {\n                id: id\n            }\n        });\n\n        if(!inmueble) throw new BadRequestException({message: 'Ese inmueble no existe'})\n        \n        await this.inmuebleRepository.delete({\n            id: id\n        });\n                \n        const listaInmuebles = await this.inmuebleRepository.findAndCount();\n        return listaInmuebles;\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailsController.html":{"url":"controllers/MailsController.html","title":"controller - MailsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mails/mails.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mails\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmailPassword\n                            \n                            \n                                    Async\n                                sendEmailWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailPassword(email: string, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailWelcome\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailWelcome(email: string, name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/welcome')\n                \n            \n\n            \n                \n                    Defined in src/mails/mails.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post, Query } from '@nestjs/common';\nimport { MailsService } from './mails.service';\n\n@Controller('mails')\nexport class MailsController {\n    \n    constructor(private readonly mailsService: MailsService) {}\n\n    @Post('/welcome')\n    async sendEmailWelcome(@Query('email') email: string, @Query('name') name: string) {        \n        return await this.mailsService.sendMailWelcome(email, name);\n    }\n\n    @Post('/send')\n    async sendEmailPassword(@Query('email') email: string, @Query('name') name: string) {        \n        return await this.mailsService.sendMailPassword(email, name);\n    } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailsModule.html":{"url":"modules/MailsModule.html","title":"module - MailsModule","body":"\n                   \n\n\n\n\n    Modules\n    MailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailsModule\n\n\n\ncluster_MailsModule_providers\n\n\n\n\nMailsService\n\nMailsService\n\n\n\nMailsModule\n\nMailsModule\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mails/mails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config/dist/config.service';\nimport { join } from 'path';\nimport { MailsController } from './mails.controller';\nimport { MailsService } from './mails.service';\n\n@Module({\n    imports:[MailerModule.forRootAsync({\n        imports: [ConfigModule],\n        useFactory: async (config: ConfigService) => ({\n            envFilePath: '.env', //fichero con las variables globales\n            transport: {\n            host: config.get('EMAIL_HOST'),\n            secure: true,\n            port:465,\n            auth: {\n              user: config.get('EMAIL_USER'),\n              pass: config.get('EMAIL_PASSWORD'),\n            },\n          },\n          defaults: {\n            from: ''\n          },\n          template: {\n            dir: join(__dirname, './templates'),\n            adapter: new HandlebarsAdapter(),\n            options: {\n              strict: false\n            }\n          }\n        }),\n        inject: [ConfigService]\n      })],\n    providers: [MailsService],\n    controllers: [MailsController]\n})\n\nexport class MailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailsService.html":{"url":"injectables/MailsService.html","title":"injectable - MailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mails/mails.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMailPassword\n                            \n                            \n                                    Async\n                                sendMailWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mails/mails.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailPassword(email: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMailWelcome\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailWelcome(email: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mails/mails.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from \"@nestjs-modules/mailer\";\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailsService {\n\n    constructor(private mailerService: MailerService) {}\n\n    async sendMailWelcome(email: string, name: string) {\n\n        await this.mailerService.sendMail({\n            to: email,\n            subject: 'Creacion Usuario Golden Houses',\n            template: '/emailBienvenida',\n            context: {\n                name: name,\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n\n    async sendMailPassword(email: string, name: string) {\n        \n        const password = 1;\n\n        await this.mailerService.sendMail({\n            to: email,\n            subject: 'Recuperar Contraseña Golden Houses',\n            template: '/emailContraseña',\n            context: {\n                name: name,\n                password: password\n            },\n            attachments: [{\n                filename: 'logo.png',\n                path: __dirname + '/templates/logo.png',\n                cid: 'logo'\n            }]\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInmuebleDto.html":{"url":"classes/UpdateInmuebleDto.html","title":"class - UpdateInmuebleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imagenes/dto/update-imagenes.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateImagenesDto } from './create-imagenes.dto';\n\nexport class UpdateInmuebleDto extends PartialType(CreateImagenesDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInmuebleDto-1.html":{"url":"classes/UpdateInmuebleDto-1.html","title":"class - UpdateInmuebleDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInmuebleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/inmuebles/dto/update-inmueble.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateInmuebleDto } from './create-inmueble.dto';\n\nexport class UpdateInmuebleDto extends PartialType(CreateInmuebleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsuarioDto.html":{"url":"classes/UpdateUsuarioDto.html","title":"class - UpdateUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/dto/update-usuario.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUsuarioDto } from './create-usuarios.dto';\n\nexport class UpdateUsuarioDto extends PartialType(CreateUsuarioDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsuariosController.html":{"url":"controllers/UsuariosController.html","title":"controller - UsuariosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsuariosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                usuarios\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                comprobarContraseña\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findByNombre\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        comprobarContraseña\n                        \n                    \n                \n            \n            \n                \ncomprobarContraseña(usser: UpdateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usser\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(nombreUsuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(correo: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByNombre\n                        \n                    \n                \n            \n            \n                \nfindByNombre(nombreUsuario: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(nombreUsuario: string, data: UpdateUsuarioDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Put(':nombreUsuario')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/usuarios/usuarios.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, Put, ParseIntPipe, HttpStatus, HttpCode, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { CreateUsuarioDto } from './dto/create-usuarios.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\n\n@Controller('usuarios')\nexport class UsuariosController {\n  \n  constructor(private readonly usuariosService: UsuariosService) {}\n\n  \n  @Get()\n  @HttpCode(HttpStatus.OK)\n  findAll() {\n    return this.usuariosService.findAll();\n  }\n\n  @Post('/password')\n  @HttpCode(HttpStatus.OK)\n  comprobarContraseña(@Body() usser: UpdateUsuarioDto) {\n    return this.usuariosService.comprobarPassword(usser);\n  }\n  \n  @Get(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  findByNombre(@Param('nombreUsuario') nombreUsuario: string) {\n    return this.usuariosService.findByNombre(nombreUsuario);\n  }\n\n  @Post('email')\n  @HttpCode(HttpStatus.OK)\n  findByEmail(@Body() correo: any) {\n    return this.usuariosService.findByEmail(correo.correo);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  create(@Body() data: CreateUsuarioDto) {\n    console.log(\"asdfgh\")\n    return this.usuariosService.create(data);\n  }\n\n  @UsePipes(new ValidationPipe({whitelist:true}))\n  @Put(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  update(@Param('nombreUsuario') nombreUsuario: string, @Body() data: UpdateUsuarioDto) {\n    return this.usuariosService.update(nombreUsuario, data);\n  }\n\n  @Delete(':nombreUsuario')\n  @HttpCode(HttpStatus.OK)\n  delete(@Param('nombreUsuario') nombreUsuario: string) {\n    return this.usuariosService.delete(nombreUsuario);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UsuariosEntity.html":{"url":"entities/UsuariosEntity.html","title":"entity - UsuariosEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UsuariosEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/entities/usuarios.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contraseña\n                            \n                            \n                                correo\n                            \n                            \n                                inmuebles\n                            \n                            \n                                nombreUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contraseña\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inmuebles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InmueblesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, inmuebleEntity => inmuebleEntity.vendedor)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/usuarios/entities/usuarios.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { InmueblesEntity } from \"src/inmuebles/entities/inmuebles.entity\";\nimport { Column, Entity, OneToMany, PrimaryColumn } from \"typeorm\";\n\n@Entity({name: 'usuarios'})\nexport class UsuariosEntity{\n\n    @PrimaryColumn()\n    nombreUsuario: string;\n\n    @Column({type: 'varchar', length: 100, nullable: false})\n    contraseña: string;\n    \n    @Column({type: 'varchar', nullable: false})\n    correo: string;\n\n    @OneToMany(() => InmueblesEntity, (inmuebleEntity) => inmuebleEntity.vendedor)\n    inmuebles: InmueblesEntity[]; \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuariosModule.html":{"url":"modules/UsuariosModule.html","title":"module - UsuariosModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuariosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsuariosModule\n\n\n\ncluster_UsuariosModule_providers\n\n\n\n\nUsuariosService\n\nUsuariosService\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nUsuariosModule -->\n\nUsuariosService->UsuariosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/usuarios/usuarios.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsuariosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsuariosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsuariosService } from './usuarios.service';\nimport { UsuariosController } from './usuarios.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsuariosEntity } from './entities/usuarios.entity';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([UsuariosEntity])],\n  providers: [UsuariosService],\n  controllers: [UsuariosController]\n})\nexport class UsuariosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsuariosRepository.html":{"url":"classes/UsuariosRepository.html","title":"class - UsuariosRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsuariosRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { UsuariosEntity } from \"./entities/usuarios.entity\";\n\n@EntityRepository(UsuariosEntity)\nexport class UsuariosRepository extends Repository{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsuariosService.html":{"url":"injectables/UsuariosService.html","title":"injectable - UsuariosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsuariosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/usuarios/usuarios.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comprobarPassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findByNombre\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioRepository: UsuariosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/usuarios/usuarios.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioRepository\n                                                  \n                                                        \n                                                                        UsuariosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        comprobarPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    comprobarPassword(usser: UpdateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usser\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(correo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    correo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByNombre\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByNombre(nombreUsuario: string)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(nombreUsuario: string, data: UpdateUsuarioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/usuarios/usuarios.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombreUsuario\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateUsuarioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateUsuarioDto } from './dto/create-usuarios.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\nimport { UsuariosEntity } from './entities/usuarios.entity';\nimport { UsuariosRepository } from './usuarios.repository';\n//import * as bcrypt from 'bcrypt';\nimport * as bcrypt from 'bcryptjs';\n\n\n@Injectable()\nexport class UsuariosService {\n\n    constructor(\n        @InjectRepository(UsuariosEntity) private usuarioRepository: UsuariosRepository\n    ) { }\n\n    async findAll(): Promise {\n        const usuarios = await this.usuarioRepository.createQueryBuilder(\"usuario\").getMany();\n\n        if (!usuarios.length) {\n            throw new NotFoundException({ message: 'No hay usuarios' })\n        }\n        return usuarios;\n    }\n\n    async findByNombre(nombreUsuario: string): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: nombreUsuario\n            }\n        });\n\n        if(!usuario) throw new NotFoundException({ message: 'Usuario Incorrecto' });\n\n        return usuario;\n    }\n\n    async findByEmail(correo: string): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                correo: correo\n            }\n        });\n        \n        if (!usuario) {\n            throw new NotFoundException({ message: 'No hay usuario' })\n        }\n        return usuario;\n    }\n\n    async comprobarPassword(usser: UpdateUsuarioDto): Promise {\n        const usuario = await this.usuarioRepository.findOne({\n            where: {\n                nombreUsuario: usser.nombreUsuario,\n            }\n        });\n\n        if (!usuario) {\n            throw new NotFoundException({ message: 'No hay usuario' })\n        }\n        const isMatch = await bcrypt.compare(usser.contraseña, usuario.contraseña);\n        \n        return isMatch;\n    }\n\n    async create(data: CreateUsuarioDto): Promise {\n\n        const exists = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario: data.nombreUsuario\n            }\n        });\n\n        if(exists) throw new BadRequestException({message: 'Ese usuario ya existe'}) \n        \n        const contraseñaHash = await bcrypt.hash(data.contraseña, 10);\n        data.contraseña = contraseñaHash; \n        const newUsuario = this.usuarioRepository.create(data);\n        await this.usuarioRepository.save(newUsuario);\n        return newUsuario;\n    }\n\n    async update(nombreUsuario: string, data: UpdateUsuarioDto): Promise{\n        const usuario = await this.usuarioRepository.findOne({\n            where:{\n                nombreUsuario: nombreUsuario\n            }\n        });\n        if(!usuario) throw new BadRequestException({message: 'Ese nombre de usuario ya existe'})\n        \n        if(data.nombreUsuario) {\n            usuario.nombreUsuario = data.nombreUsuario;        \n        }\n\n        if(data.contraseña) {\n            const contraseñaHash = await bcrypt.hash(data.contraseña, 10);\n            \n            data.contraseña = contraseñaHash;\n            \n            usuario.contraseña = data.contraseña;        \n        }\n\n        if(data.correo) {\n            usuario.correo = data.correo;        \n        }\n        await this.usuarioRepository.update({\n            nombreUsuario: nombreUsuario\n        },{\n            nombreUsuario: usuario.nombreUsuario,\n            contraseña: usuario.contraseña,\n            correo: usuario.correo\n        })\n\n        return {message: 'usuario modificado'};\n    }\n\n    async delete(nombreUsuario: string){\n        const usuario = await this.findByNombre(nombreUsuario);\n\n        if(!usuario) throw new BadRequestException({message: 'Ese usuario no existe'})\n        \n        await this.usuarioRepository.delete({\n            nombreUsuario: nombreUsuario\n        })\n     \n        return {message: 'usuario eliminado'};\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_DATABASE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DB_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            SERVER_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/dto/create-imagenes.dto.ts\n            \n            class\n            CreateImagenesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/imagenes/dto/update-imagenes.dto.ts\n            \n            class\n            UpdateInmuebleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/entities/imagenes.entity.ts\n            \n            entity\n            ImagenesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/helpers/imagenes.helper.ts\n            \n            variable\n            fileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/helpers/imagenes.helper.ts\n            \n            variable\n            renameImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.controller.ts\n            \n            controller\n            ImagenesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.repository.ts\n            \n            class\n            ImagenesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imagenes/imagenes.service.ts\n            \n            injectable\n            ImagenesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/inmuebles/dto/create-inmueble.dto.ts\n            \n            class\n            CreateInmuebleDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/inmuebles/dto/update-inmueble.dto.ts\n            \n            class\n            UpdateInmuebleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/entities/inmuebles.entity.ts\n            \n            entity\n            InmueblesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.controller.ts\n            \n            controller\n            InmueblesController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.repository.ts\n            \n            class\n            InmueblesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/inmuebles/inmuebles.service.ts\n            \n            injectable\n            InmueblesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/mails/mails.controller.ts\n            \n            controller\n            MailsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mails/mails.service.ts\n            \n            injectable\n            MailsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/dto/create-usuarios.dto.ts\n            \n            class\n            CreateUsuarioDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/usuarios/dto/update-usuario.dto.ts\n            \n            class\n            UpdateUsuarioDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/entities/usuarios.entity.ts\n            \n            entity\n            UsuariosEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.controller.ts\n            \n            controller\n            UsuariosController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.repository.ts\n            \n            class\n            UsuariosRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/usuarios/usuarios.service.ts\n            \n            injectable\n            UsuariosService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.6.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.4\n        \n            @types/nodemailer : ^6.4.4\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            mysql2 : ^2.3.3\n        \n            nodemailer : ^6.7.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagenesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InmueblesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuariosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ImagenesModule\n\n\n\ncluster_ImagenesModule_providers\n\n\n\ncluster_InmueblesModule\n\n\n\ncluster_InmueblesModule_providers\n\n\n\ncluster_UsuariosModule\n\n\n\ncluster_UsuariosModule_providers\n\n\n\n\nImagenesModule\n\nImagenesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nImagenesModule->AppModule\n\n\n\n\n\nInmueblesModule\n\nInmueblesModule\n\nAppModule -->\n\nInmueblesModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nUsuariosModule\n\nUsuariosModule\n\nAppModule -->\n\nUsuariosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\nAppModule -->\n\nMailsService->AppModule\n\n\n\n\n\nImagenesService\n\nImagenesService\n\nImagenesModule -->\n\nImagenesService->ImagenesModule\n\n\n\n\n\nInmueblesService\n\nInmueblesService\n\nInmueblesModule -->\n\nInmueblesService->InmueblesModule\n\n\n\n\n\nUsuariosService\n\nUsuariosService\n\nUsuariosModule -->\n\nUsuariosService->UsuariosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DB_DATABASE   (src/.../constants.ts)\n                        \n                        \n                            DB_HOST   (src/.../constants.ts)\n                        \n                        \n                            DB_PASSWORD   (src/.../constants.ts)\n                        \n                        \n                            DB_PORT   (src/.../constants.ts)\n                        \n                        \n                            DB_USER   (src/.../constants.ts)\n                        \n                        \n                            fileFilter   (src/.../imagenes.helper.ts)\n                        \n                        \n                            renameImage   (src/.../imagenes.helper.ts)\n                        \n                        \n                            SERVER_PORT   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_DATABASE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_HOST'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_PASSWORD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_PORT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DB_USER'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SERVER_PORT'\n                    \n                \n\n\n        \n    \n\n    src/imagenes/helpers/imagenes.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    if(!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)){\n        return callback (new Error('Invalid format type'), false);\n    }\n    callback(null, true);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renameImage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback)=>{\n    const name = file.originalname.split('.')[0];\n    const fileName = file.originalname;\n    const randomName = Array(4)\n    . fill(null)\n    .map(()=> Math.round(Math.random() * 16).toString(16))\n    .join('');\n\n    callback(null, `${name}-${randomName}${fileName}`);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
